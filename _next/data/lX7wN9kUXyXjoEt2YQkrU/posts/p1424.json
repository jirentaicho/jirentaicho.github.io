{"pageProps":{"frontMatter":{"title":"Laravel | JWTで発行したトークンをローカルストレージに保存して利用する","date":"2022.03.04","description":"Laravel | JWTで発行したトークンをローカルストレージに保存して利用する","categories":["Laravel"]},"content":"<p>Laravel 8 JWT Authentication Tutorial: Login &#x26; Signup API</p>\n<p>上記サイトのPostmanを使うまでができている状態です。</p>\n<p>github https://github.com/jirentaicho/Laravel-de-iroiro/tree/f-token</p>\n<p>今回は発行されたトークンをローカルストレージに保存して、トークンを利用するようにしてみます。環境としてはVue3とaxiosを使います。</p>\n<p>apiのルーティングは以下のようになっています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'middleware'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'api'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'prefix'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'auth'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$router</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token scope\">AuthController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api.login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/register'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token scope\">AuthController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'register'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/logout'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token scope\">AuthController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'logout'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api.logout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/refresh'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token scope\">AuthController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'refresh'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/user-profile'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token scope\">AuthController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'userProfile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api.user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/user-value'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token scope\">AuthController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'userValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api.value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2>トークンの保持</h2>\n<p>クッキーやセッションストレージなどを利用する方法もあるかと思いますが、ログイン後に発行されるトークンをローカルストレージに保存します。</p>\n<p>ログイン処理が成功したらローカルストレージにトークンを保存します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'api.login'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 取得したトークンをローカルストレージに保存する</span>\n            <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">access_token</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token dom variable\">location</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">href</span> <span class=\"token operator\">=</span> <span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'web.mypage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>このトークンを利用してユーザーの情報を取得する</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&#x3C;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span>h1<span class=\"token operator\">></span>ようこそ<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&#x3C;</span><span class=\"token constant\">P</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>さん<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span><span class=\"token constant\">P</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&#x3C;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> defineComponent <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'vue'</span>\n    <span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">async</span> <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'api.user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">name</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n</code></pre></div>\n<p><img src=\"/1424/1.png\" alt=\"画像\"></p>\n<p>ローカルストレージにもトークンが保存されていることが確認できます。</p>\n<p><img src=\"/1424/2.png\" alt=\"画像\"></p>\n<h2>ログアウト</h2>\n<p>ログアウトするときには、axios.default.headers.commonにキーを渡すような記載でないと、401エラーになって処理ができませんでした。</p>\n<p>そのため以下のようにしてログアウトの処理を行います。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// post時はこの書き方でないと401エラーになる</span>\n        axios<span class=\"token punctuation\">.</span><span class=\"token property-access\">defaults</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">common</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword control-flow\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'api.logout'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n                <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>                        \n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>ちなみにログアウト時にはローカルストレージからトークンを削除しています。実際にも以下のように削除されます。</p>\n<p><img src=\"/1424/3.png\" alt=\"画像\"></p>\n<h2>独自のデータ</h2>\n<p>ログインしていないと独自のデータが取得できないようにします。といってもルートにミドルウェアを設定していれば、Tokenまで必須でGetリクエストする必要があります。</p>\n<p>コントローラーは以下のように単純です。特段tokenの検査などは入っていません。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">userValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'result'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'お腹が空いたんだよ'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>例えば以下のような場合はトークンが設定されていないので取得できません</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'api.value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"/1424/4.png\" alt=\"画像\"></p>\n<p>トークンを設定してあげれば取得できます</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    axios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'api.value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>   \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">err</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"/1424/5.png\" alt=\"画像\"></p>\n<h2>ヘッダー情報の自動付与</h2>\n<p>ヘッダー情報には毎回Tokenを付けているので自動付与します。bootstrap.jsを以下のように修正します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">_</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lodash'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * We'll load the axios HTTP library which allows us to easily issue requests</span>\n<span class=\"token doc-comment comment\"> * to our Laravel back-end. This library automatically handles sending the</span>\n<span class=\"token doc-comment comment\"> * CSRF token as a header based on the value of the \"XSRF\" token cookie.</span>\n<span class=\"token doc-comment comment\"> */</span>\n\n<span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">axios</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'axios'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">axios</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">defaults</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">common</span><span class=\"token punctuation\">[</span><span class=\"token string\">'X-Requested-With'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'XMLHttpRequest'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// add Token Info</span>\n<span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">axios</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">defaults</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">common</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">axios</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">defaults</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">common</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これでヘッダー情報を毎回記載する必要がなくなります。</p>","slug":"p1424"},"__N_SSG":true}