{"pageProps":{"frontMatter":{"title":"Java | DDDのサンプルを通して学ぶ","date":"2022.03.10","description":"Java | DDDのサンプルを通して学ぶ","categories":["Java"]},"content":"<p>大変すばらしい記事を見つけたので、実際のソースコードと共に読んでみました。</p>\n<p>ちなみに私はDDDは仕事で少しかじった程度です。でも、正直軽量DDDみたいな感じだったと思います。</p>\n<p>DDD の Java EE 実装サンプル – Cargo Tracker を読み解く</p>\n<p>特に勉強になった点はルートオブジェクトの集約についてです。エンティティの変更に対して、一貫性を持たせるためのルールが不変条件と呼ばれ、その不変条件を満たすために、ルートエンティティを介してのみ集約オブジェクトを操作できる。</p>\n<p>例えばCargoが持つDeliveryという集約オブジェクトは、配送状況を表す。このDeliveryはItinerary(輸送日程)が更新されたときに更新される</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">assignToRoute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Itinerary</span> itinerary<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Validate</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>itinerary<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Itinerary is required for assignment\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>itinerary <span class=\"token operator\">=</span> itinerary<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Handling consistency within the Cargo aggregate synchronously</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delivery <span class=\"token operator\">=</span> delivery<span class=\"token punctuation\">.</span><span class=\"token function\">updateOnRouting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>routeSpecification<span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>itinerary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>別の言い方をすれば、ルートオブジェクトの輸送日程を更新しないと、配送状況は変更できない。→集約のカプセル化</p>\n<p>アプリケーション層は必須か？いや必須ではない。というのも納得できます。実際にCargo Trackerの実装を紹介している点も参考になりました。</p>\n<h2>アプリケーションの実行</h2>\n<p>GlassFishがよくわからんので元のソースコードを動かすことにしました。</p>\n<p>https://github.com/citerus/dddsample-core</p>\n<p>先ほど見た登録処理</p>\n<p><img src=\"/1500/1.png\" alt=\"画像\"></p>\n<h2>一覧画面</h2>\n<p><img src=\"/1500/2.png\" alt=\"画像\"></p>\n<p>CargoAdminController#list</p>\n<p>これも登録時と同じようにBookingServiceFacadeを通していますが、一覧の取得なのでトランザクション処理もなくインターフェース層からアプリケーション層を介さずに直接リポジトリを利用しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">CargoRoutingDTO</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">listAllCargos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Cargo</span><span class=\"token punctuation\">></span></span> cargoList <span class=\"token operator\">=</span> cargoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">CargoRoutingDTO</span><span class=\"token punctuation\">></span></span> dtoList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">CargoRoutingDTO</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>cargoList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">CargoRoutingDTOAssembler</span> assembler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CargoRoutingDTOAssembler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Cargo</span> cargo <span class=\"token operator\">:</span> cargoList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      dtoList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>assembler<span class=\"token punctuation\">.</span><span class=\"token function\">toDTO</span><span class=\"token punctuation\">(</span>cargo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> dtoList<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>リポジトリから取得したCargoのリストをCargoRoutingDTOに変換しています。変換にはCargoRoutingDTOAssemblerというインターフェース層にあるクラスを利用しています。</p>\n<p>CargoRoutingDTOは画面に表示するだけなので、Cargoエンティティで持っているデータは全て文字列やDateなどで設定しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token doc-comment comment\">/**\n   *\n   * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">cargo</span> cargo\n   * <span class=\"token keyword\">@return</span> A cargo routing DTO\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CargoRoutingDTO</span> <span class=\"token function\">toDTO</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Cargo</span> cargo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">CargoRoutingDTO</span> dto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CargoRoutingDTO</span><span class=\"token punctuation\">(</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">trackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">origin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unLocode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">routeSpecification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">destination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unLocode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">routeSpecification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arrivalDeadline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">delivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">routingStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sameValueAs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoutingStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MISROUTED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Leg</span> leg <span class=\"token operator\">:</span> cargo<span class=\"token punctuation\">.</span><span class=\"token function\">itinerary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">legs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      dto<span class=\"token punctuation\">.</span><span class=\"token function\">addLeg</span><span class=\"token punctuation\">(</span>\n        leg<span class=\"token punctuation\">.</span><span class=\"token function\">voyage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">voyageNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        leg<span class=\"token punctuation\">.</span><span class=\"token function\">loadLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unLocode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        leg<span class=\"token punctuation\">.</span><span class=\"token function\">unloadLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unLocode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        leg<span class=\"token punctuation\">.</span><span class=\"token function\">loadTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        leg<span class=\"token punctuation\">.</span><span class=\"token function\">unloadTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> dto<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>itineraryは複数のlegで構成されているそうで、cargo.itinerary().legs()で取得しています。Legは輸送日程に関する詳細となるバリューオブジェクトです。これも画面に渡す際にはDTOに変換されます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Itinerary</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ValueObject</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Itinerary</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Leg</span><span class=\"token punctuation\">></span></span> legs <span class=\"token operator\">=</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">emptyList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Itinerary</span> <span class=\"token constant\">EMPTY_ITINERARY</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Itinerary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Date</span> <span class=\"token constant\">END_OF_DAYS</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>詳細ページ(show)で利用されています。→ 一覧画面では使われていないようです。</p>\n<p><img src=\"/1500/3.png\" alt=\"画像\"></p>\n<p>少し話が逸れましたが、まとめるとリポジトリから取得したCargoはCargoRoutingDTOに変換して返却されます。→ちなみにDTOはインターフェース層のオブジェクトです。</p>\n<h2>詳細画面</h2>\n<p>一覧画面のリンクから詳細画面に遷移しますが、この時にtrackingIdをパラメータに渡しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>tbody</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>tr</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cargo : ${cargoList}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>a</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@{/admin/show(trackingId=${cargo.trackingId})}<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${cargo.trackingId}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Tracking id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${cargo.origin}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Origin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${cargo.finalDestination}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Final destination<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(${cargo.misrouted} ? 'Misrouted' : '') + (${cargo.routed} ? 'Yes' : 'No')<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>tr</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>tbody</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>パラメータから受け取ったtrackingIdから表示する対象のCargoを取得します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/show\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> model<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> trackingId <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trackingId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">CargoRoutingDTO</span> dto <span class=\"token operator\">=</span> bookingServiceFacade<span class=\"token punctuation\">.</span><span class=\"token function\">loadCargoForRouting</span><span class=\"token punctuation\">(</span>trackingId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        model<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cargo\"</span><span class=\"token punctuation\">,</span> dto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"admin/show\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これもインターフェース層から直接リポジトリを利用しています。一覧処理でやったことと殆ど同じです。CargoをCargoRoutingDTOに変換して返却するだけです。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CargoRoutingDTO</span> <span class=\"token function\">loadCargoForRouting</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> trackingId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Cargo</span> cargo <span class=\"token operator\">=</span> cargoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackingId</span><span class=\"token punctuation\">(</span>trackingId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">CargoRoutingDTOAssembler</span> assembler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CargoRoutingDTOAssembler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> assembler<span class=\"token punctuation\">.</span><span class=\"token function\">toDTO</span><span class=\"token punctuation\">(</span>cargo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>目的地の変更</h2>\n<p>詳細画面から到着点変更画面に遷移できる</p>\n<p><img src=\"/1500/4.png\" alt=\"画像\"></p>\n<p>Change destinationをクリックするとBookingServiceFacade#changeDestinationが実行される。</p>\n<p>画面からは以下をパラメータとして取得する</p>\n<ul>\n<li>trackingId</li>\n<li>unLocode(変更到着点)</li>\n</ul>\n<p>この処理はアプリケーション層を介して実行され、トランザクション処理が行われます。</p>\n<p>Cargoが持っているRouteSpecification(経路情報)というバリューオブジェクトは以下の情報を持っています</p>\n<ul>\n<li>出発点</li>\n<li>到着点</li>\n<li>到着期限</li>\n</ul>\n<p>そのため新しい到着点を取得したら、を新しい到着点の情報で経路情報を作成します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token class-name\">RouteSpecification</span> routeSpecification <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RouteSpecification</span><span class=\"token punctuation\">(</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">origin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> newDestination<span class=\"token punctuation\">,</span> cargo<span class=\"token punctuation\">.</span><span class=\"token function\">routeSpecification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arrivalDeadline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>新しい経路情報をcargoに設定するときにはspecifyNewRouteメソッドを利用します。これは集約を使ってエンティティの不変条件を満たしています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token doc-comment comment\">/**\n   * Specifies a new route for this cargo.\n   *\n   * <span class=\"token keyword\">@param</span> <span class=\"token parameter\">routeSpecification</span> route specification.\n   */</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">specifyNewRoute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">RouteSpecification</span> routeSpecification<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Validate</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>routeSpecification<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Route specification is required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>routeSpecification <span class=\"token operator\">=</span> routeSpecification<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Handling consistency within the Cargo aggregate synchronously</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>delivery <span class=\"token operator\">=</span> delivery<span class=\"token punctuation\">.</span><span class=\"token function\">updateOnRouting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>routeSpecification<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>itinerary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>経路情報を設定したら、配送状況の変更も同一のトランザクション内で行います。</p>\n<p>最後は新しい経路情報などを設定したCargoをリポジトリのstoreメソッドに渡して永続化します。</p>\n<h2>経路情報</h2>\n<p>RouteSpecificationをDTOに変換するときには、画面表示に必要な到着点と到着期限を取得します。RouteSpecificationはOriginの情報も持っていますが、Cargo自体もOriginを持っているのでCargoで保持しているLocationから取得しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token class-name\">CargoRoutingDTO</span> dto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CargoRoutingDTO</span><span class=\"token punctuation\">(</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">trackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">origin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unLocode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">routeSpecification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">destination</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unLocode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">idString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">routeSpecification</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">arrivalDeadline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cargo<span class=\"token punctuation\">.</span><span class=\"token function\">delivery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">routingStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sameValueAs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RoutingStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MISROUTED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2>DTO</h2>\n<p>DTOはData Transfer Objectの略で、データ転送用オブジェクトと呼ばれます。Transfer (移動)用のオブジェクトと聞くと、異なる層間を移動するようなイメージが湧きます。</p>\n<p>今回の場合は、ドメイン層(Cargo)とインターフェース層(CargoRoutingDTO)の間を移動するためのオブジェクトみたいな感じ？</p>\n<p>もちろん移動以外にも意味があります。</p>\n<ul>\n<li>CargoRoutingDTOの変数はfinalがついてるので変更する手段が一切ありません。</li>\n<li>アプリケーションサービス層以外がEntityを操作できないようになります。\n<ul>\n<li>思わぬ場所でEntityが変更されることがなくなります</li>\n</ul>\n</li>\n<li>Viewがエンティティに依存しない\n<ul>\n<li>思わぬメソッドの呼び出しが発生する可能性がなくなります</li>\n</ul>\n</li>\n</ul>\n<p>わざわざDTOに変換するのはコード量が増えますが、とても安全になるというメリットがあるということ</p>","slug":"p1500"},"__N_SSG":true}