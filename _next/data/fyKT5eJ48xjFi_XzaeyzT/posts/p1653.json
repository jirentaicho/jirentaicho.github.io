{"pageProps":{"frontMatter":{"title":"Linuxの入門 | 基本操作と基本シェル","date":"2022.03.22","description":"Linuxの入門 | 基本操作と基本シェル","categories":["Linux"]},"content":"<p>Linuxを入門します。参考書籍：新しいLinuxの教科書</p>\n<p>少し古い本ですが手元に来たのでこちらで勉強を進めます。</p>\n<p>以前Linux関連の記事</p>\n<p><a href=\"/posts/p292\">リンク</a></p>\n<p>Linux入門と言ってもあまりに果てしないので以下について勉強します。</p>\n<ul>\n<li>基本の操作\n<ul>\n<li>コマンドラインとvim</li>\n</ul>\n</li>\n<li>テキスト処理\n<ul>\n<li>grepなど</li>\n</ul>\n</li>\n<li>プロセスとジョブ\n<ul>\n<li>ざっくり概要</li>\n</ul>\n</li>\n</ul>\n<h2>ディストリビューション</h2>\n<p>Linuxカーネルと便利なコマンドやアプリをパッケージングしたものがLinuxディストリビューションです。</p>\n<ul>\n<li>RedHat系\n<ul>\n<li>Red Hat , Cent Osなど</li>\n</ul>\n</li>\n<li>Debian系\n<ul>\n<li>Debian, Ubuntuなど</li>\n</ul>\n</li>\n</ul>\n<p>根本的には共通である部分がほとんどらしい</p>\n<h2>環境</h2>\n<p>centos7を利用します。以下のコマンドでDockerのコンテナを立ち上げてログインします</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">docker run -it -d --name mycentos centos:centos7\r\ndocker exec -it mycentos bin/bash\r\n[root@1423e709db15 /]# echo $SHELL\r\n/bin/bash</code></pre></div>\n<h2>シェルとは何か</h2>\n<ul>\n<li>コマンドはLinuxカーネルが行います。</li>\n<li>ユーザーの入力とカーネルの間にあるインターフェースとなるソフトウェア(=シェル)</li>\n<li>Linuxカーネルを包み込む殻だからShell</li>\n<li>カーネルを変更しなくても、シェルだけを自分好みに変更できる</li>\n<li>シェルが高負荷状態でもカーネルへの影響は少ない</li>\n<li>ログイン時に最初に起動されるシェルをログインシェルという</li>\n</ul>\n<p>種類</p>\n<ul>\n<li>sh</li>\n<li>csh</li>\n<li>bash\n<ul>\n<li>オススメ</li>\n</ul>\n</li>\n<li>tcsh</li>\n<li>zsh</li>\n</ul>\n<h2>コマンドライン</h2>\n<ul>\n<li>行頭移動\n<ul>\n<li>ctrl + a</li>\n</ul>\n</li>\n<li>行末移動\n<ul>\n<li>ctrl + e</li>\n</ul>\n</li>\n<li>単語単位で後方移動\n<ul>\n<li>Altキー + b</li>\n<li>またはEsc + b</li>\n</ul>\n</li>\n<li>単語単位で前方移動\n<ul>\n<li>Altキー + f</li>\n<li>またはEsc + f</li>\n</ul>\n</li>\n<li>単語削除\n<ul>\n<li>ctrl + w</li>\n</ul>\n</li>\n<li>カーソル位置から行末まで削除\n<ul>\n<li>ctrl + k</li>\n</ul>\n</li>\n<li>カーソル位置から行頭まで削除\n<ul>\n<li>ctrl + u</li>\n</ul>\n</li>\n</ul>\n<h2>コマンド</h2>\n<h3>ln</h3>\n<ul>\n<li>リンクを張る\n<ul>\n<li>ハードリンク</li>\n<li>シンボリックリンク一般的なリンクWindowsのショートカットのようなものMacのエイリアスのようなもの-s オプションで作成\n<ul>\n<li>一般的なリンク</li>\n<li>Windowsのショートカットのようなもの</li>\n<li>Macのエイリアスのようなもの</li>\n<li>-s オプションで作成</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>sample.txtに対してhogeというシンボリックリンクの作成を行う</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# ln -s sample.txt hoge\r\n[root@1423e709db15 work]# ls -l\r\ntotal 4\r\nlrwxrwxrwx 1 root root 10 Mar 22 01:58 hoge -&#x26;gt; sample.txt\r\n-rw-r--r-- 1 root root 19 Mar 22 01:57 sample.txt\r\n[root@1423e709db15 work]# cat hoge\r\nthis is sample.txt</code></pre></div>\n<h3>find</h3>\n<p>ファイルを探す</p>\n<ul>\n<li>find &#x3C;検索開始ディレクトリ> &#x3C;検索条件> &#x3C;アクション>\n<ul>\n<li>アクション省略時はパスを表示する-printが設定されます</li>\n<li>検索条件-name ファイルを大文字小文字を区別して検索する-iname 大文字小文字を区別しないで検索するファイル名はbashのパス名展開とされないようにシングルクォートで囲うようにします-type-type f 通常ファイル-type d ディレクトリ-type l シンボリックリンク</li>\n<li>-a複数条件find . -type -f -a -name ‘hoge.txt’ -print\n<ul>\n<li>-name ファイルを大文字小文字を区別して検索する</li>\n<li>-iname 大文字小文字を区別しないで検索する</li>\n<li>ファイル名はbashのパス名展開とされないようにシングルクォートで囲うようにします</li>\n<li>-type-type f 通常ファイル-type d ディレクトリ-type l シンボリックリンク</li>\n<li>-type f 通常ファイル</li>\n<li>-type d ディレクトリ</li>\n<li>-type l シンボリックリンク</li>\n<li>複数条件find . -type -f -a -name ‘hoge.txt’ -print</li>\n<li>find . -type -f -a -name ‘hoge.txt’ -print</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>.csvを含む謎のフォルダがあるので、検索タイプを指定する例</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# find . -type d\r\r\n.\r\r\n./setup\r\r\n./hoge.csvfolder\r\r\n[root@1423e709db15 work]# find . -type f -a -name &#x26;#39;*.csv&#x26;#39;\r\r\n./data.csv\r\r\n./data2.csv</code></pre></div>\n<h2>Vim</h2>\n<ul>\n<li>vimをインストールする\n<ul>\n<li>yum install vim</li>\n</ul>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# vim newfile.txt\r\nbash: vim: command not found\r\n[root@1423e709db15 work]# yum install vim\r\n途中で聞かれたらyキーを押す</code></pre></div>\n<p>vimの操作は情報があふれているのでザックリ</p>\n<ul>\n<li>:w\n<ul>\n<li>保存新規ファイルの場合は新規作成される\n<ul>\n<li>新規ファイルの場合は新規作成される</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>w\n<ul>\n<li>前方に単語単位の移動</li>\n</ul>\n</li>\n<li>b\n<ul>\n<li>後方に単語単位の移動</li>\n</ul>\n</li>\n<li>0\n<ul>\n<li>行頭移動</li>\n</ul>\n</li>\n<li>$\n<ul>\n<li>行末尾移動</li>\n</ul>\n</li>\n<li>g\n<ul>\n<li>最初の行へ移動</li>\n</ul>\n</li>\n<li>G\n<ul>\n<li>最後の行へ移動</li>\n</ul>\n</li>\n<li>nG\n<ul>\n<li>n行目へ移動</li>\n</ul>\n</li>\n</ul>\n<p>コピペなどの操作</p>\n<ul>\n<li>デリート\n<ul>\n<li>d$行末までデリート</li>\n<li>d0行頭までデリート</li>\n<li>dw単語をデリート</li>\n<li>dgg最初の行までデリート</li>\n<li>dG最後の行までデリート\n<ul>\n<li>行末までデリート</li>\n<li>行頭までデリート</li>\n<li>単語をデリート</li>\n<li>最初の行までデリート</li>\n<li>最後の行までデリート</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>プット\n<ul>\n<li>pデリートしたものはプットすることで貼り付けが可能ですカットアンドペーストです\n<ul>\n<li>デリートしたものはプットすることで貼り付けが可能ですカットアンドペーストです</li>\n<li>カットアンドペーストです</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>コピー\n<ul>\n<li>ヤンクと呼びますデリートのdをyにする考え方です\n<ul>\n<li>デリートのdをyにする考え方です</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>検索と置換の操作</p>\n<ul>\n<li>検索\n<ul>\n<li>/kamadokamdoを検索するカーソルが見つかったところに移動します\n<ul>\n<li>kamdoを検索するカーソルが見つかったところに移動します</li>\n<li>カーソルが見つかったところに移動します</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>置換\n<ul>\n<li>:でコマンド入力欄を出して、%s/置換元/置換後/g一気に置換します\n<ul>\n<li>一気に置換します</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>※kamadoで検索した例</p>\n<p><img src=\"/1653/1.png\" alt=\"画像\"></p>\n<p>※vueをnuxtに置換した例（置換後です4箇所全置換されています)</p>\n<p><img src=\"/1653/2.png\" alt=\"画像\"></p>\n<h2>テキスト処理</h2>\n<h3>sort</h3>\n<ul>\n<li>行の並べ替え\n<ul>\n<li>sort &#x3C;ファイル名></li>\n</ul>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# cat text.txt\r\r\nKamado Tanjirou\r\r\nRengoku Kyojurou\r\r\nUzui Tengen\r\r\nKochou Shinobu\r\r\nTokitou Muichirou\r\r\n[root@1423e709db15 work]# sort text.txt\r\r\nKamado Tanjirou\r\r\nKochou Shinobu\r\r\nRengoku Kyojurou\r\r\nTokitou Muichirou\r\r\nUzui Tengen</code></pre></div>\n<p>Linuxには標準入力を入力として受け取って標準出力に出力するコマンドが多くある。→これらをフィルタと呼ぶ</p>\n<p>フィルタをパイプラインと組み合わせることで様々な処理ができます。</p>\n<p>psコマンドの結果をsortするpsコマンドの結果は項目がスペース区切りになっているので、それぞれ第1フィールドがPIDのように区別されます。-kオプションでフィールド番号を指定してソートします※フィールド番号を使うコマンドは他にも多々あります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# ps x\r\r\n  PID TTY      STAT   TIME COMMAND\r\r\n    1 pts/0    Ss+    0:00 /bin/bash\r\r\n   40 pts/1    Ss     0:00 bin/bash\r\r\n  153 pts/2    Ss+    0:00 bin/bash\r\r\n  225 pts/1    R+     0:00 ps x\r\r\n[root@1423e709db15 work]# ps x | sort -k 5\r\r\n    1 pts/0    Ss+    0:00 /bin/bash\r\r\n  PID TTY      STAT   TIME COMMAND\r\r\n   40 pts/1    Ss     0:00 bin/bash\r\r\n  153 pts/2    Ss+    0:00 bin/bash\r\r\n  226 pts/1    R+     0:00 ps x\r\r\n  227 pts/1    S+     0:00 sort -k 5</code></pre></div>\n<p>パイプラインを使ってソートができました。</p>\n<h3>cut</h3>\n<p>入力業の一部分を切り出して出力するコマンド</p>\n<ul>\n<li>cut -d &#x3C;区切り文字> -f &#x3C;フィールド番号> [&#x3C;ファイル名>]\n<ul>\n<li>-dオプションを省略するとデフォルト値のタブが区切り文字になります。</li>\n</ul>\n</li>\n</ul>\n<p>/etc/passwdの内容のログインシェルだけ切り出す</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# cut -d : -f 7 /etc/passwd\r\r\n/bin/bash\r\r\n/sbin/nologin\r\r\n/sbin/nologin\r\r\n/sbin/nologin\r\r\n/sbin/nologin\r\r\n/bin/sync\r\r\n/sbin/shutdown\r\n.......................省略</code></pre></div>\n<p>ユーザ名とログインシェルを切り出す</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# cut -d : -f 1,7 /etc/passwd\r\r\nroot:/bin/bash\r\r\nbin:/sbin/nologin\r\r\ndaemon:/sbin/nologin\r\r\nadm:/sbin/nologin\r\r\nlp:/sbin/nologin\r\r\nsync:/bin/sync\r\r\nshutdown:/sbin/shutdown\r\r\nhalt:/sbin/halt\r\r\nmail:/sbin/nologin\r\r\noperator:/sbin/nologin\r\r\ngames:/sbin/nologin\r\n...........................省略</code></pre></div>\n<h3>tr</h3>\n<p>文字を置換する</p>\n<ul>\n<li>tr &#x3C;置換前の文字> &#x3C;置換後の文字></li>\n</ul>\n<p>以下のcsvファイルにある.の部分を,に置換する</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# cat data.csv\r\r\nmisaka,mikoto,level5\r\r\nsirai,kuroko,level4\r\r\nshokuho,misaki,level5\r\r\nmugino.sirizuri.level5\r\r\r\n[root@1423e709db15 work]# cat data.csv | tr . ,\r\r\nmisaka,mikoto,level5\r\r\nsirai,kuroko,level4\r\r\nshokuho,misaki,level5\r\r\nmugino,sirizuri,level5</code></pre></div>\n<h3>diff</h3>\n<p>差分を表示する</p>\n<ul>\n<li>diff [オプション] &#x3C;比較元ファイル> &#x3C;比較先ファイル></li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# diff data.csv data2.csv\r\r\n1a2\r\r\n&#x26;gt; kongo,mituko,level4\r\r\n3c4\r\r\n&#x26;lt; shokuho,misaki,level5\r\r\n---\r\r\n&#x26;gt; shokuhou,misaki,level5</code></pre></div>\n<ul>\n<li>1a2\n<ul>\n<li>1つ目のファイルの1行目の後に、2つ目のファイルの2行目の内容が追加されたadd の a\n<ul>\n<li>add の a</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>3c4\n<ul>\n<li>1つ目のファイルの3行目の内容が、2つ目のファイルの4行後に変更されたchangeのc\n<ul>\n<li>changeのc</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>d\n<ul>\n<li>deleteのdここでは登場していません\n<ul>\n<li>ここでは登場していません</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>grep</h3>\n<p>正規表現で検索する→Linuxでハチャメチャになるほど利用頻度が高いコマンド</p>\n<ul>\n<li>grep [オプション]  &#x3C;検索パターン> &#x3C;ファイル名>\n<ul>\n<li>-n マッチした行の行番号を表示</li>\n<li>-i 大文字小文字の区別をしない</li>\n</ul>\n</li>\n</ul>\n<p>マッチした箇所は赤文字で表示されています</p>\n<p><img src=\"/1653/3.png\" alt=\"画像\"></p>\n<p>行番号は緑色で表示されています</p>\n<p><img src=\"/1653/4.png\" alt=\"画像\"></p>\n<p>パイプと組み合わせる</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# ls\r\r\ndata.csv  data2.csv  hoge  hoge.txt  newfile.txt  sample.txt  text.txt\r\r\n[root@1423e709db15 work]# ls | grep csv\r\r\ndata.csv\r\r\ndata2.csv</code></pre></div>\n<h4>正規表現を使う</h4>\n<p>正規表現について</p>\n<p><a href=\"/posts/p1612\">リンク</a></p>\n<p>正規表現で拡張子を指定する</p>\n<ul>\n<li>正規表現は’シングルクォートで囲っておきます</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# ls | grep &#x26;#39;.csv&#x26;#39;\r\r\ndata.csv\r\r\ndata2.csv\r\r\nhousenkacsv.txt\r\r\n[root@1423e709db15 work]# ls | grep &#x26;#39;\\.csv&#x26;#39;\r\r\ndata.csv\r\r\ndata2.csv</code></pre></div>\n<p>「.」はメタ文字なので\\でエスケープしてあげます。こうすることで.csvを検索できます。</p>\n<p>行末を指定することでも同じようなことができます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# ls | grep &#x26;#39;csv$&#x26;#39;\r\r\ndata.csv\r\r\ndata2.csv</code></pre></div>\n<h2>findとgrepのコンボ</h2>\n<p>csvファイルからkongouが含まれるファイルのみを検索する</p>\n<ul>\n<li>findでcsvファイルを列挙する</li>\n<li>grepでkongoが含まれているものを検索する</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# find . -type f -a -name &#x26;#39;*.csv&#x26;#39; | grep &#x26;#39;kongo&#x26;#39;\r\r\n[root@1423e709db15 work]# find . -type f -a -name &#x26;#39;*.csv&#x26;#39; | xargs grep &#x26;#39;kongo&#x26;#39;\r\r\n./data2.csv:kongo,mituko,level4</code></pre></div>\n<ul>\n<li>xargs\n<ul>\n<li>\n<blockquote>\n<p>xargsは標準入力から受け取ったデータに対してコマンドを実施するといった用途で利用するコマンド。パイプラインで他のコマンドの出力を接続して処理をさせるといった使い方をすることが多い。</p>\n</blockquote>\n</li>\n<li>覚えると便利、xargsコマンドの使い方12選</li>\n</ul>\n</li>\n</ul>\n<h2>プロセス</h2>\n<p>シェルからコマンドを実行すると、カーネルはディスクから実行ファイルを読みだしてメモリに格納する。メモリ内容に従いCPUがプログラムを実行する</p>\n<ul>\n<li>プロセスとはメモリ上で実行状態にあるプログラム</li>\n<li>同一コマンドでも別個のメモリを確保する</li>\n<li>psコマンド\n<ul>\n<li>現在動作しているプロセスを取得する</li>\n<li>xfオプションで全てのプロセスを取得する</li>\n</ul>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[root@1423e709db15 work]# ps\r\n  PID TTY          TIME CMD\r\n   40 pts/1    00:00:00 bash\r\n  126 pts/1    00:00:00 ps</code></pre></div>\n<ul>\n<li>PID\n<ul>\n<li>プロセスID</li>\n</ul>\n</li>\n<li>CMD\n<ul>\n<li>実行されているコマンド</li>\n</ul>\n</li>\n</ul>\n<h2>ジョブ</h2>\n<ul>\n<li>ジョブはシェルからみた処理の単位です\n<ul>\n<li>シェルごとにジョブ番号を持つ複数のターミナルで同時にシェルを起動した場合、ジョブ番号が重複する\n<ul>\n<li>複数のターミナルで同時にシェルを起動した場合、ジョブ番号が重複する</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>コマンド1つの場合はプロセスとジョブは同じ単位になる</li>\n<li>コマンドをパイプで繋げるとコマンドライン全体で1つのジョブ</li>\n<li>ジョブは一時停止やバックグラウンド実行ができる</li>\n<li>jobs\n<ul>\n<li>現在のジョブ一覧を取得する</li>\n</ul>\n</li>\n</ul>\n<p>※環境でminikube立ち上げてjobsコマンド実行しても何も表示されないのでここはもっと調べます。</p>\n<p>次回はシェルスクリプトとかをやりたいです</p>","slug":"p1653"},"__N_SSG":true}