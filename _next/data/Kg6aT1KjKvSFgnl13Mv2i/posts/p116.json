{"pageProps":{"frontMatter":{"title":"C# | Dictionaryを使って柔軟なyamlファイルを作成する","date":"2021.10.05","description":"C# | Dictionaryを使って柔軟なyamlファイルを作成する","categories":["WPF"]},"content":"<p>今までの記事でyamldotnetを使ってシリアライズからデシアライズを行ってきました。</p>\n<p>今のところ不満があるとすれば、変数名がkeyとなってその値がvalueになるのですが、key名を動的に変えたい場合はどうすればいいのか？という点です。</p>\n<p>例えば以下のような場合どうすればいいのか</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">Human:\n\tKanon:\n\t\thp: 10\n\tKeke:\n\t\thp: 3\n\tSumire:\n\t\thp: 15\n</code></pre></div>\n<p>Humanクラスを作って、その中にKanonクラスとKekeクラスとSumireクラス・・・</p>\n<p>Dictionaryを使いましょう！</p>\n<p>まずはYamlオブジェクトはこんな感じのDictionaryを用意します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">YamlData</span>\n    <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token keyword\">public</span> string sample <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> string dbname <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> list <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Dictionary</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> human <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>値を入れてシリアライズしてみます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dictionary</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span>string<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human<span class=\"token punctuation\">.</span></span>Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kanon\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"かのんちゃん\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human<span class=\"token punctuation\">.</span></span>Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Keke\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"くぅくぅ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human<span class=\"token punctuation\">.</span></span>Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sumire\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"すみれ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>以下のようにkey名を動的に変更できています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">sample: 澁谷かのん\ndbname: \nlist: \nhuman:\n  Kanon: かのんちゃん\n  Keke: くぅくぅ\n  Sumire: すみれ\n\n</code></pre></div>\n<p>そして、このDictionaryのvalueにクラスを指定すれば、あっという間に最初の例を実現できる</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">YamlData</span>\n    <span class=\"token punctuation\">{</span>\n        \n        <span class=\"token keyword\">public</span> string sample <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> string dbname <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> list <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Dictionary</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Hp</span><span class=\"token punctuation\">></span></span> human <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        internal <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hp</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> hp <span class=\"token punctuation\">{</span> get<span class=\"token punctuation\">;</span> set<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">var</span> k_hp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nk_hp<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human<span class=\"token punctuation\">.</span></span>Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kanon\"</span><span class=\"token punctuation\">,</span> k_hp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> ke_hp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nke_hp<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human<span class=\"token punctuation\">.</span></span>Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Keke\"</span><span class=\"token punctuation\">,</span> ke_hp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> s_hp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Hp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ns_hp<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span>yamlManager<span class=\"token punctuation\">.</span>yamlData<span class=\"token punctuation\">.</span>human<span class=\"token punctuation\">.</span></span>Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sumire\"</span><span class=\"token punctuation\">,</span> s_hp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>このようにするとyamlファイルは以下のようになる。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">sample: 澁谷かのん\ndbname: \nlist: \nhuman:\n  Kanon:\n    hp: 10\n  Keke:\n    hp: 3\n  Sumire:\n    hp: 16\n\n</code></pre></div>\n<p>Dictionaryとの相性は抜群ということですね。ちなみにコンストラクタを使うとデシアライズ時に例外になりました。</p>","slug":"p116"},"__N_SSG":true}