{"pageProps":{"frontMatter":{"title":"SpringSecurityで学ぶセッションとセッション固定化攻撃","date":"2022.10.10","description":"SpringSecurityで学ぶセッションとセッション固定化攻撃","categories":["Spring"]},"content":"<p>「体系的に学ぶ 安全なWebアプリケーションの作り方 第2版 脆弱性が生まれる原理と対策の実践」という本を買っていたので、セキュリティに関して少し勉強しました。</p>\n<p>セッションを扱う時には以下の攻撃に注意する必要があります</p>\n<ul>\n<li>セッションハイジャック</li>\n<li>セッション固定化</li>\n</ul>\n<p>セキュリティというのはフレームワークに任せておけば大丈夫だろうと思っていたのですが、一体どういうことが起きているのか知るのはとても面白いです。</p>\n<p>今回はセッション固定化攻撃を通して、SpringSecurityでのセッションについて学んでいきたいと思います。また、危険なアプリケーションを作ることで、作らないように気を付けようという事も意識していきます。</p>\n<p>セッション固定化攻撃の流れとしてURLにセッションIDを付与する方法(参考書と同様の方法)があるので、それで危険なアプリケーションを作っていきます。</p>\n<p>SpringSecurityで危険なアプリケーションを作らないようにしようと言っても、SpringSecurityではURLにセッションIDを指定することが通常はできないようです。つまり普通に使っていれば安全です。</p>\n<h2>参考サイト</h2>\n<p>https://qiita.com/d-yosh/items/f52372d7190fd8af98f0</p>\n<p>http://terasolunaorg.github.io/guideline/current/ja/Security/SpringSecurity.html</p>\n<h2>基本動作</h2>\n<p>セッションIDというのはユーザをアプリケーションが識別するためのKEYです。通常これはブラウザ側のクッキーに保存します。</p>\n<p>SpringSecurityを入れたアプリケーションでログインすると以下のようなクッキーが保存されていることがわかります</p>\n<p><img src=\"/3890/1.png\" alt=\"画像\"></p>\n<p>JSESSIONIDというのがセッションIDを表すクッキー名です。これはサーブレットの仕様で決められた値のようです</p>\n<p>http://itdoc.hitachi.co.jp/manuals/3020/30203M0360/EM030096.HTM</p>\n<p>このセッションIDを使って、そのブラウザがログインしているかどうかをアプリケーションが識別しますので、ログイン後にJSESSIONIDを削除すると未ログインとして扱われます。</p>\n<h4>URL Rewriting</h4>\n<p>Cookieを使用できないクライアントとのセッション維持のためにURLのリクエストパラメータにセッションIDを含める方法。</p>\n<p>もはやデフォルトでセッション固定化攻撃に対して防衛ができているのですが、今回はあえてURL Rewritingを有効にします。</p>\n<h2>URL Rewritingの有効化</h2>\n<p>SessionManagementConfigurerのenableSessionUrlRewritingをtrueにしてあげますので、HttpSecurityの設定を変更してあげます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span> form <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">loginPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">loginProcessingUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">usernameParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">passwordParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">failureUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login?error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span>auth <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n       auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       auth<span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">sessionManagement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableSessionUrlRewriting</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//これで有効化</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>次にURLのパラメータにセッションIDを付与するためにSessionTrackingModeを利用してサーブレットコンテナ設定をします。こちらは上に書いた参考サイトと下記サイトから。</p>\n<p>https://qiita.com/dmnlk/items/b7d189d4dc09df1ee6b6</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ServletContextInitializer</span> <span class=\"token function\">servletContextInitializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//SessionTrackingModeのURLを指定する</span>\n    <span class=\"token keyword\">return</span> servletContext <span class=\"token operator\">-></span> servletContext<span class=\"token punctuation\">.</span><span class=\"token function\">setSessionTrackingModes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnumSet</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionTrackingMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ログインするとURLにセッションIDが付与されているのがわかります</p>\n<p><img src=\"/3890/2.png\" alt=\"画像\"></p>\n<p>そして参考サイトと同じRequestRefectedExceptionが発生しました。</p>\n<p>というわけで、ここも参考サイトに従ってDefaultHttpFirewallを利用します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">WebSecurityCustomizer</span> <span class=\"token function\">webSecurityCustomizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">DefaultHttpFirewall</span> defaultHttpFirewall <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultHttpFirewall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> web <span class=\"token operator\">-></span> web<span class=\"token punctuation\">.</span><span class=\"token function\">httpFirewall</span><span class=\"token punctuation\">(</span>defaultHttpFirewall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>セッションIDの確認</h2>\n<p>先ほどの設定でログインに成功できるようになります。</p>\n<p>ログインページにアクセスしてURLにセッションIDが付与されていることを再度確認します。</p>\n<p><img src=\"/3890/3.png\" alt=\"画像\"></p>\n<p>この状態でログインするとセッションIDが変更されています。</p>\n<p><img src=\"/3890/4.png\" alt=\"画像\"></p>\n<p>これは非常に重要で、セッション固定化攻撃を防いでいます。ちなみにセッションハイジャックは可能です。このログインしたアドレスに別ブラウザでアクセスするとログインされた状態になります</p>\n<p><img src=\"/3890/5.png\" alt=\"画像\"></p>\n<p>URLパラメータにセッションIDを付与していると常に危険が隣り合わせということですね。またセッションIDはログイン時に新しくしておくことも重要です。既存のセッションIDを利用すると攻撃対象になるからです。その辺について見ていきます。</p>\n<h2>セッション固定化攻撃</h2>\n<p>このままでは、ログインするとセッションIDが新しくなり、セッション固定化ができないので、以下のように書き変えます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span> form <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">loginPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">loginProcessingUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">usernameParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">passwordParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">failureUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login?error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span>auth <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n       auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       auth<span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">sessionManagement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableSessionUrlRewriting</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">sessionManagement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sessionFixation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">none</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// セッション固定化攻撃対策をしない</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>更に設定が必要でした。SessionCreationPolicy.NEVERを指定してあげます。</p>\n<p>https://www.javadevjournal.com/spring-security/spring-security-session/</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span> form <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">loginPage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">loginProcessingUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">usernameParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">passwordParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                form<span class=\"token punctuation\">.</span><span class=\"token function\">failureUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login?error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span>auth <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n       auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       auth<span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">sessionManagement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableSessionUrlRewriting</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">sessionManagement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sessionFixation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">none</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// セッションがすでにあればそれを利用する</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">sessionManagement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sessionCreationPolicy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SessionCreationPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NEVER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これでようやく準備ができました。</p>\n<h2>攻撃</h2>\n<p>攻撃者がログインページを表示します。表示されたアドレスにはセッションIDが付与されているのがポイントです。</p>\n<p><img src=\"/3890/6.png\" alt=\"画像\"></p>\n<p>被害者がこのアドレスを利用してログインしたとします</p>\n<p><img src=\"/3890/7.png\" alt=\"画像\"></p>\n<p>攻撃者はこのセッションIDを利用して、ログイン必須ページにアクセスできてしまいます。</p>\n<p><img src=\"/3890/8.png\" alt=\"画像\"></p>\n<p>これからわかるようにセッションを扱う際には注意が必要です</p>\n<ul>\n<li>URLパラメータにセッションIDを付与してはいけない</li>\n<li>ログイン後にセッションIDを新しくする\n<ul>\n<li>SessionCreationPolicy.NEVERは使わない</li>\n</ul>\n</li>\n</ul>\n<p>クッキーが使えない環境では、URLパラメータにセッションIDを付与する必要があるかと思いますが、ログイン後にセッションIDを新しく発行するなど対応が必須になります。</p>\n<p>また、普通にSpringSecurityを利用していれば、攻撃に対してフレームワークが対応してくれていることがわかりました。</p>","slug":"p3890"},"__N_SSG":true}