{"pageProps":{"frontMatter":{"title":"Laravelでエンティティの独自検証を行う","date":"2022.01.06","description":"Laravelでエンティティの独自検証を行う","categories":["Laravel"]},"content":"<p>リクエストに対するバリデーションはLaravelのリクエストを拡張したクラスを利用することでできます。</p>\n<p>例えば以下のようなリクエストクラスを作成することで、コントローラーが処理をする際に検証済のリクエスト情報になっています</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">StorePostRequest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FormRequest</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n     * Determine if the user is authorized to make this request.\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">authorize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * Get the validation rules that apply to the request.\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">rules</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'title'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'required|string|max:60'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'body'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'required'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'category'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'required|string|max:50'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これは、viewファイル(blade)でerrorsにて拾うことができます</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\">@<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$errors</span><span class=\"token operator\">-></span><span class=\"token function\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t    <span class=\"token operator\">&#x3C;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"alert alert-danger\"</span><span class=\"token operator\">></span>\n\t        <span class=\"token operator\">&#x3C;</span>ul<span class=\"token operator\">></span>\n\t            @<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$errors</span><span class=\"token operator\">-></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span>\n\t                <span class=\"token operator\">&#x3C;</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token variable\">$error</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n\t            @<span class=\"token keyword\">endforeach</span>\n\t        <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n\t    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\t@<span class=\"token keyword\">endif</span>\n</code></pre></div>\n<p>今回はドメインルール（仕様）などの検証結果をオブジェクトで返したい時を考慮してみます。</p>\n<p>フォームから送られてきた内容ではなくてエンティティクラスに対して検証を行う感じです。</p>\n<p>githubにコードはアップロードしています。(タグa1)</p>\n<p>構成としては、</p>\n<p>ルールクラスがあります。ルールクラスは実際に検証を行い結果を返します。結果は検証に失敗した場合にメッセージも付与できるようにします。実装クラスはcheckRuleメソッドにてその検証を定義します。</p>\n<p>バリデーションクラスは、これらのルールクラスを管理する配列を持ちます。そしてvaildメソッドを全てのルールを実行します。配列に入れるルールは実装クラスが選択できるようにします。またコンストラクタにて必要なエンティティクラスなどを渡すようにします。</p>\n<p>検証結果クラスは検証結果のboolとメッセージの配列を持っています。検証結果がfalseの場合はメッセージの配列をview側に渡すなどすればviewでメッセージの一覧を表示できます</p>\n<p><img src=\"/844/1.png\" alt=\"画像\"></p>\n<p>こんな適当エンティティクラスがあります。今回の検証対象です。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>SampleModel</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">SampleModel</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword type-declaration\">string</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword type-declaration\">int</span> <span class=\"token variable\">$point</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$point</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">point</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$point</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">overPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">point</span> <span class=\"token operator\">></span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isMisaka</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">===</span> <span class=\"token string double-quoted-string\">\"misaka\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></span>\n</code></pre></div>\n<p>これらの検証を行います</p>\n<p>コントローラーでやっちゃってますが、エンティティを作成したら、バリデーション実装クラスに渡して、そのまま検証処理を呼出します。</p>\n<p>すると結果オブジェクトが返ってきますで、検証結果を元にメッセージをviewに返します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">storeSample</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\n        <span class=\"token variable\">$model</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SampleModel</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token property\">point</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// バリデーションの実行</span>\n        <span class=\"token variable\">$validation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SampleValidation</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$model</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$validation</span><span class=\"token operator\">-></span><span class=\"token function\">vaild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">withInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">withErrors</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">getMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'exampleview'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p>これなら、様々なロジックに合わせて検証クラスを作成できます。</p>\n<p>バリデーションクラスは抽象クラスを実装します。</p>\n<p>抽象クラス</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Validation</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>MaruResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>MaruRule</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * バリデーションは登録されたルールを実行して</span>\n<span class=\"token doc-comment comment\"> * 結果オブジェクトを返却します。</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MaruValidation</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword type-declaration\">array</span> <span class=\"token variable\">$rules</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\">     * 初期化処理でルールを設定するようにする</span>\n<span class=\"token doc-comment comment\">     */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\">     * 設定されたルールを全て実施して</span>\n<span class=\"token doc-comment comment\">     * Resultオブジェクトを返却します。</span>\n<span class=\"token doc-comment comment\">     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vaild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">MaruResult</span>\n    <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MaruResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$maruResult</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MaruResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">array_walk</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MaruRule</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$maruResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n            <span class=\"token variable\">$rule</span><span class=\"token operator\">-></span><span class=\"token function\">checkRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$rule</span><span class=\"token operator\">-></span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token variable\">$maruResult</span><span class=\"token operator\">-></span><span class=\"token function\">setResult</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rule</span><span class=\"token operator\">-></span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$maruResult</span><span class=\"token operator\">-></span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rule</span><span class=\"token operator\">-></span><span class=\"token function\">getMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$maruResult</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">addRule</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MaruRule</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">addRules</span><span class=\"token punctuation\">(</span>MaruRule <span class=\"token operator\">...</span><span class=\"token variable\">$rules</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rules</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setRules</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// convert rule class</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">rules</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">MaruRule</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$rule</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$rules</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span></span>\n</code></pre></div>\n<p>実装クラス</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Validation</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Logic<span class=\"token punctuation\">\\</span>SampleLogic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>Example<span class=\"token punctuation\">\\</span>CheckNameRule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>Example<span class=\"token punctuation\">\\</span>CheckOverPointRule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>Example<span class=\"token punctuation\">\\</span>CheckSampleLogicRule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>SampleModel<span class=\"token punctuation\">\\</span>SampleModel</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">SampleValidation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MaruValidation</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name type-declaration\">SampleModel</span> <span class=\"token variable\">$model</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// コンストラクタで必要なオブジェクトを受取っておく</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">SampleModel</span> <span class=\"token variable\">$model</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">model</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$model</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ルールを設定する</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">addRules</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">CheckOverPointRule</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">model</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">CheckNameRule</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">model</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">CheckSampleLogicRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></span>\n</code></pre></div>\n<p>実装クラスでルールクラスを設定するので、様々な検証クラスを作成することができます</p>\n<p>ルールクラスも抽象クラスを実装します。</p>\n<p>抽象クラス</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>MaruResult</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * ルールの基底クラスです。</span>\n<span class=\"token doc-comment comment\"> * ルールのチェックおよび、結果の返却を行います</span>\n<span class=\"token doc-comment comment\"> * ルールの詳細は実装クラスにて定義します</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MaruRule</span><span class=\"token punctuation\">{</span>\n\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword type-declaration\">bool</span> <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword type-declaration\">array</span> <span class=\"token variable\">$messages</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">result</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getMessages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">array</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">messages</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token variable\">$messages</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">array_walk</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$messages</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">messages</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span>\n</code></pre></div>\n<p>実装クラス</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>Example</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>MaruResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>MaruRule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>SampleModel<span class=\"token punctuation\">\\</span>SampleModel</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CheckNameRule</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MaruRule</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name type-declaration\">SampleModel</span> <span class=\"token variable\">$model</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">SampleModel</span> <span class=\"token variable\">$model</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">model</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$model</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">model</span><span class=\"token operator\">-></span><span class=\"token function\">isMisaka</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">result</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"その名前は利用できません。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span>\n</code></pre></div>\n<p>実装クラスはエンティティのメソッドを呼び出して、その結果メッセージを設定しています。</p>\n<p>もちろんエンティティ以外にも何らかのロジッククラスを利用することもできます。以下はDIを利用したパターンです</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>Example</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Logic<span class=\"token punctuation\">\\</span>MaruLogic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>MaruResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>Rule<span class=\"token punctuation\">\\</span>MaruRule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>MaruValidationSet<span class=\"token punctuation\">\\</span>SampleModel<span class=\"token punctuation\">\\</span>SampleModel</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CheckSampleLogicRule</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MaruRule</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n\n        <span class=\"token variable\">$logic</span> <span class=\"token operator\">=</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'SampleLogic'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$logic</span><span class=\"token operator\">-></span><span class=\"token function\">checkLogic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">result</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">setMessage</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ブラックリストに登録されているため操作できません。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span>\n</code></pre></div>\n<p>これでリクエスト以外の検証も、ある程度規則性を持って行えるようになりました。</p>","slug":"p844"},"__N_SSG":true}