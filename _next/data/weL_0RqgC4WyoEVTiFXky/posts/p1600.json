{"pageProps":{"frontMatter":{"title":"Laravel | モデル結合ルート","date":"2022.03.18","description":"Laravel | モデル結合ルート","categories":["Laravel"]},"content":"<p>コントローラーの引数にEloquentモデルが入っているケースがありますが、あれはモデル結合ルートを利用することで実現できます。</p>\n<p>モデル結合ルートについて</p>\n<p>https://readouble.com/laravel/master/ja/routing.html#route-model-binding</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api/users/{user}'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified type-declaration\">App<span class=\"token punctuation\">\\</span>User</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token property\">email</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>というようにルーティングの設定に{model}を指定して、コントローラーの引数に$modelという変数を設定すれば、そのモデルのidで検索してくれる</p>\n<p>今回はItemモデルを取得してみます。</p>\n<p>ルート</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'middleware'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'api'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'prefix'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'shop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$router</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/buy/{item}'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token scope\">ShopController<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'buy'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>api/buy/1でアクセスすれば、Item::find(1)の結果がコントローラーの引数で利用できます</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ShopController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Itemはモデル結合ルートにて注入される</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">BuyRequest</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">Item</span> <span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">dd</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$item</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>リクエストを送信しますが、urlはitemのid=1が取得できるようにします。</p>\n<p><img src=\"/1600/1.png\" alt=\"画像\"></p>\n<p>Itemクラスのオブジェクトが引数に渡っていることが確認できました。</p>","slug":"p1600"},"__N_SSG":true}