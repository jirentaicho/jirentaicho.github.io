{"pageProps":{"frontMatter":{"title":"Rust – Bevyでノベルゲームを作る 文字の表示","date":"2022.09.10","description":"Rust – Bevyでノベルゲームを作る 文字の表示","categories":["Rust"]},"content":"<p>今回もBevyに関する記事です。前回はBevyを触ってみてどんな感じで動くのかを確認しました。</p>\n<p><a href=\"/posts/p3555\">リンク</a></p>\n<p>以前、TypeScriptとC#(WPF)でノベルゲームとノベルゲームメーカーを作りました</p>\n<p><a href=\"/posts/p120\">リンク</a></p>\n<p>今回はもう少し簡単なノベルゲームをBevyで作成していきます。</p>\n<h1>テキストを表示する</h1>\n<p>プロジェクトを作成して、最小単位のBevyアプリのコードを定義します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">use bevy<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>prelude<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\nfn main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    App<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>new<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ここにテキストの表示処理を実装していきます。</p>\n<h3>フォントの用意</h3>\n<p>フォントを用意するですが、サンプルにあるフォントを利用します</p>\n<p>https://github.com/bevyengine/bevy/tree/main/assets/fonts</p>\n<p>この「FiraMono-Medium.ttf」をassets/fontsフォルダに格納しておきます。</p>\n<h3>テキストの生成</h3>\n<p>以下のコードを記載します</p>\n<div class=\"remark-highlight\"><pre class=\"language-python\"><code class=\"language-python\">use bevy<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>prelude<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\nfn main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    App<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>new<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>add_plugins<span class=\"token punctuation\">(</span>DefaultPlugins<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>add_startup_system<span class=\"token punctuation\">(</span>setup<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token operator\">//</span> Systemは関数で定義する\n<span class=\"token operator\">//</span> 引数として受け取れる特別なパラメータ\n<span class=\"token operator\">//</span>   <span class=\"token operator\">-</span> Res ResMut\n<span class=\"token operator\">//</span>   <span class=\"token operator\">-</span> Query\n<span class=\"token operator\">//</span>   <span class=\"token operator\">-</span> Commands\n<span class=\"token operator\">//</span>   <span class=\"token operator\">-</span> EventWriter EventReader\nfn setup<span class=\"token punctuation\">(</span>\n    mut command<span class=\"token punctuation\">:</span> Commands<span class=\"token punctuation\">,</span>\n    asset_server<span class=\"token punctuation\">:</span> Res<span class=\"token operator\">&#x3C;</span>AssetServer<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">//</span> フォントの取得\n    let font <span class=\"token operator\">=</span> asset_server<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"fonts/FiraMono-Medium.ttf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">//</span> カメラの生成\n    command<span class=\"token punctuation\">.</span>spawn_bundle<span class=\"token punctuation\">(</span>Camera2dBundle<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>default<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">//</span> テキストの生成\n    command<span class=\"token punctuation\">.</span>spawn_bundle<span class=\"token punctuation\">(</span>TextBundle<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>from_section<span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"Hello Wolrd\"</span><span class=\"token punctuation\">,</span>\n        TextStyle <span class=\"token punctuation\">{</span>\n            font<span class=\"token punctuation\">:</span> font<span class=\"token punctuation\">.</span>clone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">//</span>取得したフォント\n            font_size<span class=\"token punctuation\">:</span> <span class=\"token number\">60.0</span><span class=\"token punctuation\">,</span>\n            color<span class=\"token punctuation\">:</span> Color<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>rgb<span class=\"token punctuation\">(</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span>with_style<span class=\"token punctuation\">(</span>Style<span class=\"token punctuation\">{</span>\n            margin<span class=\"token punctuation\">:</span> UiRect<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>Val<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>Px<span class=\"token punctuation\">(</span><span class=\"token number\">50.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">//</span> ウインドウの左下を起点に<span class=\"token punctuation\">(</span><span class=\"token number\">50.0</span><span class=\"token punctuation\">)</span>のマージンを取る\n            <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>実行すると以下のようにBevy | Rustという文字が表示されます。</p>\n<p><img src=\"/3690/1.png\" alt=\"画像\"></p>\n<p>テキストの表示にTextBundleを利用しました。</p>\n<h2>用語と機能</h2>\n<h3>System</h3>\n<p>自分で関数を定義してゲームロジックを実装します。この時に引数としてコメントに書いたような特別なパラメータを受け取ることができます。</p>\n<p>アプリビルダーを経由してBevyに登録します</p>\n<h3>Commands</h3>\n<p>エンティティの生成や削除、またエンティティに対してコンポーネントの追加削除、リソース管理を行います。</p>\n<h3>Res</h3>\n<p>リソースの共有借用。ファイルからアセットを読み込むにはAssetServerリソースを利用します</p>\n<h3>エンティティ</h3>\n<p>ゲームの内のオブジェクトを表します。シンプルな識別子くらいのものにしか持っていません。spawnを利用して生成します</p>\n<h3>コンポーネント</h3>\n<p>エンティティに関連するデータ。   #[derive(Component)]を利用して、構造体またはenumを定義して利用します</p>\n<h2>シリーズ記事</h2>\n<p>◆Rust – Bevyでノベルゲームを作る 文字の表示</p>\n<p><a href=\"/posts/p3690\">リンク</a></p>\n<p>◆Rust – Bevyでノベルゲームを作る 枠の表示</p>\n<p><a href=\"/posts/p3702\">リンク</a></p>\n<p>◆Rust – Bevyでノベルゲームを作る 次の文字を表示</p>\n<p><a href=\"/posts/p3716\">リンク</a></p>\n<p>◆Rust – Bevyでノベルゲームを作る キャラクターを表示する</p>\n<p><a href=\"/posts/p3731\">リンク</a></p>","slug":"p3690"},"__N_SSG":true}