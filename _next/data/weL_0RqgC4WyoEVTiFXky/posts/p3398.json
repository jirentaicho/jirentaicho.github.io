{"pageProps":{"frontMatter":{"title":"Spring Security | RestAPIでCSRFトークンを利用する","date":"2022.08.16","description":"Spring Security | RestAPIでCSRFトークンを利用する","categories":["Spring"]},"content":"<p>SpringSecuritは、CSRFトークンをフォームに対してhidden項目としてCsrfRequestDataValueProcessorが自動的に埋め込んでいます。関連記事：https://volkruss.com/?p=3125</p>\n<p>これはこれでいいのですが、RESTAPIでCSRFトークンを利用するにはどうすればいいのか。ということでやってみます。</p>\n<h2>CSRFトークンを利用する</h2>\n<p>https://www.baeldung.com/csrf-stateless-rest-api</p>\n<p>上記のサイトに答えが書いてありますが、Securityの設定時にcsrfTokenRepositoryを利用するだけです。</p>\n<p>以下のような設定クラスを作成して試してみます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfig</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">csrfTokenRepository</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieCsrfTokenRepository</span><span class=\"token punctuation\">.</span><span class=\"token function\">withHttpOnlyFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span>auth <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>PostmanからGET送信をするとクッキーにCSRFトークンが設定されているのがわかります</p>\n<p><img src=\"/3398/1.png\" alt=\"画像\"></p>\n<p>この値をHeadersに付与してPOST送信をしてみます。SpringはX-XSRF-TOKENヘッダで受け取るようになっています。</p>\n<p><img src=\"/3398/2.png\" alt=\"画像\"></p>\n<p>正しくPOSTメソッドが利用できています。</p>\n<p>次にこのトークンを削除してPOST送信を行います</p>\n<p><img src=\"/3398/3.png\" alt=\"画像\"></p>\n<p>しっかり403エラーになっていることがわかります。</p>\n<h2>CORSの設定</h2>\n<p>jsからの利用をしてみるためcorsの設定をしておきます。今回は3000番ポートからリクエストを送信します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfig</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">csrfTokenRepository</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieCsrfTokenRepository</span><span class=\"token punctuation\">.</span><span class=\"token function\">withHttpOnlyFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span>auth <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 追加</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configurationSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">corsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// CORSの設定</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CorsConfigurationSource</span> <span class=\"token function\">corsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">CorsConfiguration</span> cors <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedOrigins</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:3000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedHeaders</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        source<span class=\"token punctuation\">.</span><span class=\"token function\">registerCorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span>cors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>configurationSourceを設定してあげればOKです</p>\n<h2>JavaScriptから利用する</h2>\n<p>ボタンを二つ用意してGETとPOSTを行えるようにします。</p>\n<p><img src=\"/3398/4.png\" alt=\"画像\"></p>\n<ul>\n<li>GETボタン\n<ul>\n<li>CookieにCSRFトークンを受け取る</li>\n</ul>\n</li>\n<li>POSTボタン\n<ul>\n<li>CSRFトークンを利用する</li>\n</ul>\n</li>\n</ul>\n<p>htmlとかは適当に書いてます</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span>html lang<span class=\"token operator\">=</span><span class=\"token string\">\"en\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span>head<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>meta charset<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>meta http<span class=\"token operator\">-</span>equiv<span class=\"token operator\">=</span><span class=\"token string\">\"X-UA-Compatible\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"IE=edge\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width, initial-scale=1.0\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>title<span class=\"token operator\">></span><span class=\"token maybe-class-name\">Document</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span>body<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"get\"</span><span class=\"token operator\">></span><span class=\"token constant\">GET</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"post\"</span><span class=\"token operator\">></span><span class=\"token constant\">POST</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>hr<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>script<span class=\"token operator\">></span>\n        <span class=\"token keyword\">const</span> getBtn <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        getBtn<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>doget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">const</span> postBtn <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        postBtn<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span>dopost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">function</span> <span class=\"token function\">doget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8080/get'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">'include'</span> <span class=\"token comment\">// これを付ければcookieを受け取れます</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    \n        <span class=\"token keyword\">function</span> <span class=\"token function\">dopost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> csrfToken <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">cookie</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(?:</span><span class=\"token group punctuation\">(?:</span><span class=\"token anchor function\">^</span><span class=\"token alternation keyword\">|</span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">*</span>;<span class=\"token char-set class-name\">\\s</span><span class=\"token quantifier number\">*</span><span class=\"token group punctuation\">)</span>XSRF-TOKEN<span class=\"token char-set class-name\">\\s</span><span class=\"token quantifier number\">*</span><span class=\"token escape\">\\=</span><span class=\"token char-set class-name\">\\s</span><span class=\"token quantifier number\">*</span><span class=\"token group punctuation\">(</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token char-class-negation operator\">^</span>;<span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token quantifier number\">*</span><span class=\"token group punctuation\">)</span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">*</span><span class=\"token anchor function\">$</span><span class=\"token group punctuation\">)</span><span class=\"token alternation keyword\">|</span><span class=\"token anchor function\">^</span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">*</span><span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>csrfToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8080/post'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">'include'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//　ここでも必要</span>\n                <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token string-property property\">'X-XSRF-TOKEN'</span> <span class=\"token operator\">:</span> csrfToken <span class=\"token comment\">// cookieから取得したcsrfトークンを設定する</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span>\n</code></pre></div>\n<ul>\n<li>csrfTokenの値は参考サイトの通りにcookieから取得しています</li>\n<li>postmanでも試したようにcsrfトークンは”X-XSRF-TOKEN”というkey名で送信します</li>\n<li>credentials: ‘include’がないとcookieを受け取れないし、ヘッダーに付与もできません\n<ul>\n<li>https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials</li>\n</ul>\n</li>\n</ul>\n<p>GETボタンを押してもCORSエラーになってしまいます</p>\n<p><img src=\"/3398/5.png\" alt=\"画像\"></p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access to fetch at &#x26;#39;http://localhost:8080/get&#x26;#39; from origin &#x26;#39;http://localhost:3000&#x26;#39; has been blocked by CORS policy: The value of the &#x26;#39;Access-Control-Allow-Credentials&#x26;#39; header in the response is &#x26;#39;&#x26;#39; which must be &#x26;#39;true&#x26;#39; when the request&#x26;#39;s credentials mode is &#x26;#39;include&#x26;#39;.</code></pre></div>\n<p>Spring側でもCORSの設定でsetAllowCredentialsが必要になります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// CORSの設定</span>\n<span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">CorsConfigurationSource</span> <span class=\"token function\">corsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">CorsConfiguration</span> cors <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedOrigins</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:3000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedHeaders</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// cookieなどの情報を許可</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    source<span class=\"token punctuation\">.</span><span class=\"token function\">registerCorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span>cors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これでOKです。GETとPOSTが問題なく動いてることが確認できます。</p>\n<p><img src=\"/3398/6.png\" alt=\"画像\"></p>\n<ul>\n<li>https://spring.pleiades.io/spring-framework/docs/current/javadoc-api/org/springframework/web/cors/CorsConfiguration.html#setAllowCredentials-java.lang.Boolean-</li>\n</ul>\n<p>cookieの値が取得できて、無事に疎通もできていることが確認できました。これでRestAPIでもcorsを無効化せずに利用できます。</p>\n<h2>参考</h2>\n<p>https://www.baeldung.com/csrf-stateless-rest-api</p>\n<p>https://spring.pleiades.io/spring-security/reference/6.0/servlet/integrations/cors.html</p>","slug":"p3398"},"__N_SSG":true}