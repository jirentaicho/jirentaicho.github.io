{"pageProps":{"frontMatter":{"title":"ゼロからのOS自作入門 | day04","date":"2021.12.05","description":"ゼロからのOS自作入門 | day04","categories":["OS"]},"content":"<p>前回はブートローダとカーネルを切り離して画面への描画を行いました。ようやくOSが形になった記念すべき回でした。</p>\n<p>そして今回はmakeとピクセル描画を行います。前回も画面に対してフレームバッファの情報から変な描画処理を行いましたので、その応用ですかね</p>\n<p>そしてmakeというのは、今までのコマンドをまとめたシェルのようなものらしいです、前回、今後使いそうなコマンドとかいってまとめましたが使わなくなりそうですね。（記事の内容はやらせではありません）</p>\n<h2>make</h2>\n<p>Makefileを指示書としてmakeコマンドを利用することで、カーネルのコンパイルとリンクなどをまとめます。</p>\n<p>利用する際にはmakeとするだけでMakefileの内容が実施されます。</p>\n<p><img src=\"/353/1.png\" alt=\"画像\"></p>\n<p>day03までエラー起きなかったのにエラー起きるようになった。しかも、これ頻出らしいです。zshだと出るってあったけどsh bashと試してエラー出ました。まぁこういうのは仕方ないですね</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">#include &#x26;lt;stdint.h&#x26;gt;</code></pre></div>\n<p>で回避できるそうです。</p>\n<p><img src=\"/353/2.png\" alt=\"画像\"></p>\n<h2>ピクセルを描く</h2>\n<p>この辺はゲーム開発で画面に描画する理論と似たようなものですね。</p>\n<p>さてここでもまたビルドが失敗しました。さっきと同じ理由です。</p>\n<p>githubのwikiに書いてあるとおり実行してもだめでした。</p>\n<p>コードを写経していたんですが、ブランチをday04bに変えてwikiに書いてあるコマンドを再度実施</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">source $HOME/osbook/devenv/buildenv.sh</code></pre></div>\n<p>これでmakeコマンドが使えましたが、せっかくコード書いてたのに残念です。</p>\n<p>今回のコードにはC++特有の参照型が使われています。参照型の引数を持つ関数をC言語から呼び出すにはポインタを指定するとのことです。</p>\n<p>実行すると以下のようになります</p>\n<p><img src=\"/353/3.png\" alt=\"画像\"></p>\n<h2>クラス化</h2>\n<p>ピクセル描画に関してクラス化します。</p>\n<h3>C++のメモ</h3>\n<p>C++は、前に触ったんですがほとんどわからずやっていたので、完全に初心者です。</p>\n<p>アクセス修飾子ごとに関数やメンバを定義します。</p>\n<p>~（チルダ）から始まる関数はデストラクタらしいです。つまりインスタンスが消えたときの処理でしょうか。Javaには無いですよね？</p>\n<p>virtualメソッドは仮想関数です。つまりオーバーライド可能なメソッドということでしょうが、C#のとは微妙に挙動が異なるらしいです。</p>\n<p>継承クラス（RGBResv8BitPerColorPixelWrite）で、仮想関数をオーバーライドします。</p>\n<p>using 親クラス::親クラスとすることで親クラスのコンストラクタをそのまま利用できます。</p>\n<p>クラスの最後の}にセミコロン;をつける</p>\n<p>C++はホイスティングのようなものはない？void* operator newを利用箇所より後ろで定義したらエラーになった。そもそもここクラス構文の中じゃないのでそういうものか・・・？少し勉強不足です。。。</p>\n<h2>無駄処理の削減</h2>\n<p>今までは描画する際に毎度WritePixel関数を呼び出していました。しかしその中でif文を利用していたので描画するたびに条件分岐が入っていた</p>\n<p>何で描画するか予めswitchで決めておいて無駄なifでの条件分岐をなくします。これはポリモーフィズムの良さが出ていますね。</p>\n<p>実行</p>\n<p><img src=\"/353/4.png\" alt=\"画像\"></p>\n<h2>vtableの説明</h2>\n<p>ここでの記載は省略します</p>\n<h2>ローダの改良</h2>\n<p>現状はカーネルの読み込み時のメモリ確保にバグがある。</p>\n<p>プログラムヘッダの確認</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">misaka@misaka:~/workspace/mikanos/kernel$ readelf -l kernel.elf\n\nElf ファイルタイプは EXEC (実行可能ファイル) です\nエントリポイント 0x101080\nThere are 5 program headers, starting at offset 64\n\nプログラムヘッダ:\n  タイプ        オフセット          仮想Addr           物理Addr\n                 ファイルサイズ        メモリサイズ         フラグ 整列\n  PHDR           0x0000000000000040 0x0000000000100040 0x0000000000100040\n                 0x0000000000000118 0x0000000000000118  R      0x8\n  LOAD           0x0000000000000000 0x0000000000100000 0x0000000000100000\n                 0x0000000000000180 0x0000000000000180  R      0x1000\n  LOAD           0x0000000000001000 0x0000000000101000 0x0000000000101000\n                 0x00000000000001c9 0x00000000000001c9  R E    0x1000\n  LOAD           0x0000000000002000 0x0000000000102000 0x0000000000102000\n                 0x0000000000000000 0x0000000000000018  RW     0x1000\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\n                 0x0000000000000000 0x0000000000000000  RW     0x0\n\n セグメントマッピングへのセクション:\n  セグメントセクション...\n   00     \n   01     .rodata \n   02     .text \n   03     .bss \n   04     \n</code></pre></div>\n<p>LOADセグメントによってファイルのデータをメモリにコピーする（loadする)</p>\n<p>3つめのLOADセグメントだけ.bssセクションを含み、ファイルとメモリのサイズが異なっている。</p>\n<p>.bssセクションには初期値なしのグローバル変数が配置される→pixel_writer_bufやpixel_writerなど。</p>\n<p>初期値がないのでファイルに記録する必要がないのでファイルの大きさが0ということ。</p>\n<p>ELFはファイルヘッダとプログラムヘッダとセクション本体とセクションヘッダからなる。</p>\n<p>e_phoff</p>\n<p>e_phoff</p>\n<p>e_phoff : ELFファイルヘッダのプログラムヘッダファイルオフセット→プログラムヘッダ（配列）を取得。</p>\n<p>AllocatePool() AllocatePages()メモリ領域を確保する関数だが、AllocatePoolはページ単位でなくバイト単位なのでカーネルファイルを一時領域に読み込む。</p>\n<p>開始アドレスと終了アドレスをkernel_first_addr、kernel_last_addrにそれぞれ格納する。→メモリの大きさを図れる。</p>\n<p>今回はコードの話多め。</p>\n<p>ブートローダ側の処理は頭が追いつかない。。。</p>\n<h2>その他</h2>\n<p>エディタをvscodeに変えたらとても快適です。</p>","slug":"p353"},"__N_SSG":true}