{"pageProps":{"frontMatter":{"title":"ブログの移転","date":"2022.10.25","description":"SpringのWebClientを利用してWebリクエストを送信するサンプルです","categories":["Spring"]},"content":"<p>今までレンタルサーバーを借りていたのですが年会費が7000円ほどしていたので解約しました。\n代わりにgithubpagesにてブログを公開しました。\nこれは独自ドメインも使えるので、今まで同じURLが使える状態です</p>\n<h1>ブログ記事の移行</h1>\n<p>ブログ記事の移行については手動でやることを考えたのですが、記事数が200記事ほどあったことや、画像を保存する必要性などを考えると、\n手動で記事の移行を行なうのは困難だと判断しました。</p>\n<p>そのためPythonのBeautiful Soupを利用してスクレイピングにて全記事を自動生成しました。\n非常に便利なライブラリですが、Pythonに不慣れなのでPython自体の操作と、取得したNodeの子要素の取り扱いに苦戦しました。</p>\n<p>そして、えいやーで作ったかなり汚いコードですが残しておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup \n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> pprint\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>error\n<span class=\"token keyword\">import</span> urllib<span class=\"token punctuation\">.</span>request\n<span class=\"token keyword\">import</span> sys\n\n\n<span class=\"token comment\"># ターゲットWebページのURLを指定します。</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"-TARGET PATH = \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"-\\n\"</span><span class=\"token punctuation\">)</span>\ntargetPath <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#\"3702\"#3796</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://volkruss.com/?p=\"</span> <span class=\"token operator\">+</span> targetPath\n\n<span class=\"token comment\"># 出力ファイル</span>\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./../myblog/posts/\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"p\"</span> <span class=\"token operator\">+</span> targetPath <span class=\"token operator\">+</span> <span class=\"token string\">\".md\"</span> <span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 改行に挟んでテキストを出力します</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printLineAndText</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 画像を保存します</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">download_file</span><span class=\"token punctuation\">(</span>imageUrl<span class=\"token punctuation\">,</span> fileNameCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    <span class=\"token comment\"># まず必要なフォルダを作成します:例./myblog/public/2234</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span><span class=\"token string\">\"./../myblog/public/\"</span> <span class=\"token operator\">+</span> targetPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span><span class=\"token string\">\"./../myblog/public/\"</span> <span class=\"token operator\">+</span> targetPath<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>imageUrl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> web_file<span class=\"token punctuation\">,</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./../myblog/public/\"</span> <span class=\"token operator\">+</span> targetPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> fileNameCount <span class=\"token operator\">+</span> <span class=\"token string\">\".png\"</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> local_file<span class=\"token punctuation\">:</span>\n            local_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>web_file<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> urllib<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>URLError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 言語の取得 javaがなくC#とC++で代用していたのでJavaに変換する rsも同様</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">getLang</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>lang<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"html\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"C++\"</span> <span class=\"token keyword\">or</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"C#\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"java\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"c\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"Ruby\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"rs\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"TypeScript\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"ts\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"js\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"JavaScript\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"js\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"HTML\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"html\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"PHP\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"php\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"python\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"CSS\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"css\"</span>\n    <span class=\"token keyword\">if</span> lang <span class=\"token operator\">==</span> <span class=\"token string\">\"SQL\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"sql\"</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> lang\n\n<span class=\"token comment\"># ULとLI要素を解析して出力します</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">listPrint</span><span class=\"token punctuation\">(</span>indent<span class=\"token punctuation\">,</span> elm<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">for</span> li <span class=\"token keyword\">in</span> elm<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">,</span> recursive<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>indent <span class=\"token operator\">+</span> <span class=\"token string\">\"* \"</span> <span class=\"token operator\">+</span> li<span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n\tinneruls <span class=\"token operator\">=</span> elm<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">,</span> recursive<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> ul <span class=\"token keyword\">in</span> inneruls<span class=\"token punctuation\">:</span>\n\t\tlistPrint<span class=\"token punctuation\">(</span>indent <span class=\"token operator\">+</span> <span class=\"token string\">\"  \"</span><span class=\"token punctuation\">,</span> ul<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\ncount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># htmlを取得します。</span>\nhtml <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># BeautifulSoupでパースする</span>\nsoup <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># mdファイル情報を出力します</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"---\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"title: \"</span> <span class=\"token operator\">+</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">,</span>class_<span class=\"token operator\">=</span><span class=\"token string\">\"entry-title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"date: \"</span><span class=\"token operator\">+</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">,</span>class_<span class=\"token operator\">=</span><span class=\"token string\">\"entry-date\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"description: \"</span> <span class=\"token operator\">+</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"h1\"</span><span class=\"token punctuation\">,</span>class_<span class=\"token operator\">=</span><span class=\"token string\">\"entry-title\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"categories: \"</span>  <span class=\"token operator\">+</span> <span class=\"token string\">\"['\"</span> <span class=\"token operator\">+</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"span\"</span><span class=\"token punctuation\">,</span>class_<span class=\"token operator\">=</span><span class=\"token string\">\"cat-label\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"']\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"---\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n\n\nelem <span class=\"token operator\">=</span> soup<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">,</span>class_<span class=\"token operator\">=</span><span class=\"token string\">\"entry-content\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 取得したhtmlを走査する</span>\n<span class=\"token keyword\">for</span> child <span class=\"token keyword\">in</span> elem<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'ul'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> uls <span class=\"token keyword\">in</span> child<span class=\"token punctuation\">:</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"* \"</span> <span class=\"token operator\">+</span> uls<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> ul <span class=\"token keyword\">in</span> uls<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"ul\"</span><span class=\"token punctuation\">,</span>recursive<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        listPrint<span class=\"token punctuation\">(</span><span class=\"token string\">\"  \"</span><span class=\"token punctuation\">,</span> ul <span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">for</span> li <span class=\"token keyword\">in</span> uls<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">,</span>recursive<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        listPrint<span class=\"token punctuation\">(</span><span class=\"token string\">\"  \"</span><span class=\"token punctuation\">,</span> li <span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>text <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">#見出しの取得</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'h1'</span><span class=\"token punctuation\">:</span>\n    printLineAndText<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'# '</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'h2'</span><span class=\"token punctuation\">:</span>\n    printLineAndText<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'## '</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'h3'</span><span class=\"token punctuation\">:</span>\n    printLineAndText<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'### '</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'h4'</span><span class=\"token punctuation\">:</span>\n    printLineAndText<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#### '</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'h5'</span><span class=\"token punctuation\">:</span>\n    printLineAndText<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'##### '</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'h6'</span><span class=\"token punctuation\">:</span>\n    printLineAndText<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'###### '</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># divの時は基本的にsyntaxhighlightとして扱うことを前提とする</span>\n  <span class=\"token comment\"># divの最初の子要素がpreなら```で囲って出力</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'div'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'pre'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"```\"</span> <span class=\"token operator\">+</span> getLang<span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"data-lang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>string <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"```\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      \n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'pre'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"```\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>string <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"```\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># ------------------------------</span>\n  <span class=\"token comment\"># tableは弾く。iframeはsrcだけ抽出する</span>\n  <span class=\"token comment\"># ------------------------------</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'figure'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'table'</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'img'</span><span class=\"token punctuation\">:</span>\n      count<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"![画像](/\"</span> <span class=\"token operator\">+</span> targetPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".png)\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#　str(count) + \"画像\") #![画像](/2761/1.png)</span>\n      <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\"># ファイルを保存する</span>\n      download_file<span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\"># 謎のwarpリンク(iframeで埋め込まれているパターン)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'img'</span><span class=\"token punctuation\">:</span>\n      iframe <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"iframe\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\"># iframeが取得できた場合のみ</span>\n      <span class=\"token keyword\">if</span> iframe <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># iframeからa要素を抜き出してプリント</span>\n        linkStr <span class=\"token operator\">=</span> iframe<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span>\n        cutStr <span class=\"token operator\">=</span> linkStr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> cutStr <span class=\"token operator\">==</span> <span class=\"token string\">'https://volkruss.com'</span><span class=\"token punctuation\">:</span>\n          lastIndex <span class=\"token operator\">=</span> linkStr<span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token comment\"># 指定位置からの文字列を取得する /?は除いて p=4598の4598箇所</span>\n          pathStr <span class=\"token operator\">=</span> linkStr<span class=\"token punctuation\">[</span>lastIndex <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>linkStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n          <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span> <span class=\"token string\">\"[リンク](\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/posts/p\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pathStr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span> <span class=\"token string\">\"[参考](\"</span> <span class=\"token operator\">+</span> linkStr <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n          <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># iframeの場合はaタグが子要素として存在しないので抜ける</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token comment\"># aタグの走査</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> child<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'img'</span><span class=\"token punctuation\">:</span>\n      link <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n      linkStr <span class=\"token operator\">=</span> link<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span>\n      cutStr <span class=\"token operator\">=</span> linkStr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> cutStr <span class=\"token operator\">==</span> <span class=\"token string\">'https://volkruss.com'</span><span class=\"token punctuation\">:</span>\n        lastIndex <span class=\"token operator\">=</span> linkStr<span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 指定位置からの文字列を取得する /?は除いて p=4598の4598箇所</span>\n        pathStr <span class=\"token operator\">=</span> linkStr<span class=\"token punctuation\">[</span>lastIndex <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>linkStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span> <span class=\"token string\">\"[リンク](\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/posts/p\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pathStr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span> <span class=\"token string\">\"[参考](\"</span> <span class=\"token operator\">+</span> linkStr <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 通常のAタグを取得</span>\n  <span class=\"token keyword\">if</span> child<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"-END-\"</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h1>リダイレクト処理</h1>\n<p>以前のブログのURLはWordPressを使っており、URLにクエリパラメータが含まれている形になっていました。\n?p=999のような形です。\nただしNext.jsでページ生成する際に?が使えないので、被リンクに対して置き去り状態になってしまいます。\nそのためリダイレクト処理で対処しました。</p>\n<p>やり方はnext.config.jsに以下のような記載をします</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">redirects</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">has</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'query'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">key</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'4'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/posts/p1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">permanent</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>これで?p=4の時にposts/p1にリダイレクトさせることができます。</p>\n<h1>問題点</h1>\n<h2>コードの表示</h2>\n<p>一部コードが無害化された状態で表示されています。</p>\n<ul>\n<li>gradleやsqlなどのコード。</li>\n</ul>\n<p>現状回避が難しいと判断しました。\nメインで取り扱っているJavaのコードについては問題なく表示できているので、未着手になっています。</p>\n<h2>一部リンク</h2>\n<p>リンクについては全て確認していないので、うまく機能していないリンク箇所があるかもしれません。</p>\n<h1>改善点</h1>\n<p>不具合込みで改善するべき点を挙げます</p>\n<ul>\n<li>スマホの表示</li>\n<li>記事検索</li>\n<li>一部スタイル(CSS)</li>\n</ul>","slug":"p90002"},"__N_SSG":true}