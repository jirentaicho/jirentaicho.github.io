{"pageProps":{"frontMatter":{"title":"Java | サーブレット","date":"2022.09.08","description":"Java | サーブレット","categories":["Java"]},"content":"<p>Springを触っていてサーブレットに関して知識が乏しい問題に行き着いたのと、kindleの本でイイのがあったので勉強してみた記録です。</p>\n<p>参考書籍</p>\n<p>JSPサーブレット: Javaサーバーサイド 実践Java言語シリーズ</p>\n<p>丁寧でおススメです(kindle unlimitedで読めます)</p>\n<h2>サーブレットとJSP</h2>\n<ul>\n<li>サーブレットでできることはJSPでもできる</li>\n<li>JSPでできることはサーブレットでもできる</li>\n<li>では、なぜサーブレットをなぜ利用するのか？\n<ul>\n<li>役割分担できるからサーブレットがプログラム処理JSPがレスポンス出力\n<ul>\n<li>サーブレットがプログラム処理</li>\n<li>JSPがレスポンス出力</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>jspでは&#x3C;% %>の間にJavaプログラムを書くことができます。</p>\n<h2>web.xml</h2>\n<ul>\n<li>サーブレットクラスを登録\n<ul>\n<li>servlet</li>\n</ul>\n</li>\n<li>ルーティングを登録\n<ul>\n<li>servlet-mapping</li>\n</ul>\n</li>\n<li>外部リソースの参照\n<ul>\n<li>resource-ref</li>\n</ul>\n</li>\n<li>フィルターの登録\n<ul>\n<li>filterマッピングfilter-mapping\n<ul>\n<li>マッピングfilter-mapping</li>\n<li>filter-mapping</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>サーブレットクラスの作成</h2>\n<ul>\n<li>HttpServletクラスを継承する\n<ul>\n<li>doGetかdoPostのオーバーライド</li>\n</ul>\n</li>\n<li>パラメータの取得\n<ul>\n<li>getParameter(key);</li>\n</ul>\n</li>\n<li>レスポンス\n<ul>\n<li>response.getWriter()が使える</li>\n</ul>\n</li>\n</ul>\n<h2>JSP</h2>\n<ul>\n<li>パラメータの取得\n<ul>\n<li>requestオブジェクトを利用して取得できるrequest.getParameter(key);JSPが事前に用意している\n<ul>\n<li>request.getParameter(key);JSPが事前に用意している</li>\n<li>JSPが事前に用意している</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>レスポンス\n<ul>\n<li>out.println(value);outもrequest同様にインスタンス化不要で利用可能\n<ul>\n<li>outもrequest同様にインスタンス化不要で利用可能</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>サーブレットとJSPの連携</h2>\n<ul>\n<li>サーブレットからJSPに値を渡す\n<ul>\n<li>request.setAttribute(key,value);</li>\n</ul>\n</li>\n<li>JSPで値を受け取る\n<ul>\n<li>request.getAttribute(key);</li>\n</ul>\n</li>\n<li>サーブレットからJSPのファイルを呼び出す\n<ul>\n<li>getServletContext();</li>\n<li>getRequestDispatcher();</li>\n<li>forward(request,response);</li>\n</ul>\n</li>\n</ul>\n<h2>超簡単なサンプル作成</h2>\n<p>以下のような簡単なアプリケーションを作成する</p>\n<ul>\n<li>データベースからレコードを取得する</li>\n<li>データベースにレコードを登録する</li>\n<li>フィルターの利用</li>\n</ul>\n<p>データベースのアクセスと、フィルターに関しては参考書籍に記載はありませんのでご注意ください。</p>\n<h3>プロジェクトの新規作成</h3>\n<p>新規Mavenプロジェクトを作成</p>\n<p>Archetypeでmaven-archetype-webappを選択します</p>\n<p><img src=\"/3565/1.png\" alt=\"画像\"></p>\n<p>次にpomに依存関係を追加します</p>\n<ul>\n<li>Servlet-api</li>\n<li>PostgreSQL JDBC Driver</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>dependency</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>groupId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>artifactId</span><span class=\"token punctuation\">></span></span>junit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>version</span><span class=\"token punctuation\">></span></span>4.11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>version</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>scope</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&#x3C;!-- 追加 --></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.servlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>artifactId</span><span class=\"token punctuation\">></span></span>servlet-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>version</span><span class=\"token punctuation\">></span></span>2.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>version</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>scope</span><span class=\"token punctuation\">></span></span>provided<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>scope</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>dependency</span><span class=\"token punctuation\">></span></span>\t\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>groupId</span><span class=\"token punctuation\">></span></span>org.postgresql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>artifactId</span><span class=\"token punctuation\">></span></span>postgresql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>version</span><span class=\"token punctuation\">></span></span>42.4.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>version</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>dependency</span><span class=\"token punctuation\">></span></span>  \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>maven build compileしておきます。</p>\n<p>私はstsでプロジェクトを作成したのですが、ここでsrc/main/javaとかがmissingになっていることに気が付きました。</p>\n<p><img src=\"/3565/2.png\" alt=\"画像\"></p>\n<p>プロジェクトのビルドバスからOrder and Exportタブを開き、JRE System LibraryとMaven Dependenciesにチェックを入れる</p>\n<p><img src=\"/3565/3.png\" alt=\"画像\"></p>\n<p>これでOK</p>\n<p><img src=\"/3565/4.png\" alt=\"画像\"></p>\n<h3>単純なGetメソッドでJSPと連携する</h3>\n<p>新規サーブレットクラスを作成すると、ほぼ出来上がった状態でクラスが作成されるdoGetメソッドを以下のように修正する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// jspに出力を依頼する</span>\n\t<span class=\"token function\">getServletContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestDispatcher</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/kakine/get.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//response.getWriter().append(\"Served at: \").append(request.getContextPath());</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>jspファイルをsrc/main/webapp/kakineに下記のように作成します</p>\n<p><img src=\"/3565/5.png\" alt=\"画像\"></p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h2</span><span class=\"token punctuation\">></span></span>GETのサンプル<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>web.xmlにてルーティングの設定を行おうと思いますが、サーブレットクラスを登録すると自動的に簡単な設定がされているので確認してみます</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>web-app</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>display-name</span><span class=\"token punctuation\">></span></span>Archetype Created Web Application<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>display-name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>display-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>display-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>description</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>description</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.kakine.GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>web-app</span><span class=\"token punctuation\">></span></span>\n\n</code></pre></div>\n<p>GetSampleクラスが登録されており、/GetSampleというアクセスに対して紐づけられています</p>\n<p>実行しますのでサーバータブの追加と削除でプロジェクトを追加します。私はTomcatを利用しています。kakineが追加されている状態</p>\n<p><img src=\"/3565/6.png\" alt=\"画像\"></p>\n<p>これで実行して、http://localhost:8080/kakine/GetSampleにアクセスします※kakineの部分はプロジェクト名</p>\n<p><img src=\"/3565/7.png\" alt=\"画像\"></p>\n<p>文字化けしているのでjspファイルを修正します</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">&#x3C;%@ page contentType=\"text/html;charset=UTF-8\" %> \n<span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ja<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h2</span><span class=\"token punctuation\">></span></span>GETのサンプル<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p><img src=\"/3565/8.png\" alt=\"画像\"></p>\n<p>次にサーブレットから値を渡して、jspで表示してみます</p>\n<p>doGetメソッドを以下のように修正します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n\trequest<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"垣根提督\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trequest<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"level\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">getServletContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestDispatcher</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/kakine/get.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>jspから受け取る時は用意されているrequestオブジェクトが利用できます</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">&#x3C;%@ page contentType=\"text/html;charset=UTF-8\" %> \n<span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ja<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h2</span><span class=\"token punctuation\">></span></span>GETのサンプル<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h2</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>名前 = &#x3C;%=request.getAttribute(\"name\") %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span><span class=\"token punctuation\">></span></span>レベル = &#x3C;%=request.getAttribute(\"level\") %><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p><img src=\"/3565/9.png\" alt=\"画像\"></p>\n<h2>データベースからレコードを取得する</h2>\n<p>色々やり方はあるかと思いますが、今回はJNDIを利用してみます</p>\n<p>webappフォルダにMETA-INFフォルダを作成してcontext.xmlを作成します</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token prolog\">&#x3C;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Context</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Resource</span> \n\t\t<span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc/postgres<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">auth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Container<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javax.sql.DataSource<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">driverClassName</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.postgresql.Driver<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>jdbc:postgresql://localhost:5432/postgres<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">username</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>postgres<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">password</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ps<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">maxActive</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">maxIdle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>10<span class=\"token punctuation\">\"</span></span> \n\t\t<span class=\"token attr-name\">maxWait</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>-1<span class=\"token punctuation\">\"</span></span>\n\t<span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>Context</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>次にweb.xmlを修正します。resource-refを使って定義したデータベース接続情報を指定しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>web-app</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>display-name</span><span class=\"token punctuation\">></span></span>Archetype Created Web Application<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>display-name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>display-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>display-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>description</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>description</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.kakine.GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&#x3C;!-- 追加 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>resource-ref</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>description</span><span class=\"token punctuation\">></span></span>Postgres Connection<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>description</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>res-ref-name</span><span class=\"token punctuation\">></span></span>jdbc/kakine<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>res-ref-name</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>res-type</span><span class=\"token punctuation\">></span></span>javax.sql.DataSource<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>res-type</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>res-auth</span><span class=\"token punctuation\">></span></span>Container<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>res-auth</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>resource-ref</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>web-app</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>データベースの準備については省略しますが、今回はdockerでpostgre環境を用意しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-JSON\"><code class=\"language-JSON\">version: &#x26;#39;3.7&#x26;#39;\nservices:\n  postgre:\n      image: postgres:latest\n      ports:\n          - 5432:5432\n      container_name: test_postgre\n      volumes:\n      - ./data:/var/lib/postgresql/data\n      # 初期化用のシェルを格納しておきます。\n      - ./setup:/docker-entrypoint-initdb.d\n      environment: \n          POSTGRES_USER: kakine\n          POSTGRES_PASSWORD: teitoku\n          POSTGRES_DB: school</code></pre></div>\n<p>以下のようなレコードがitemsテーブルに入っている想定です</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> items<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> \n    <span class=\"token punctuation\">(</span><span class=\"token string\">'figma SP-020 とある魔術の禁書目録 ミサカ 電撃屋通販＜20,000体＞限定品'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'ミサカ盛り'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'とある自治体のストラップ'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>次にdoGetメソッドを修正します。(普通はフレームワークを利用することがほとんどなので、以下のような書き方はしません)</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InitialContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">DataSource</span> dataSource <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">)</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java:comp/env/jdbc/kakine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">Statement</span> statement <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">createStatement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">ResultSet</span> resultSet <span class=\"token operator\">=</span> statement<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from items\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tresult<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//カラム名</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NamingException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\trequest<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"items\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">getServletContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestDispatcher</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/kakine/get.jsp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>jspでは簡易的に表示させておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">&#x3C;%@ page contentType=\"text/html;charset=UTF-8\" %> \n<span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ja<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>h2</span><span class=\"token punctuation\">></span></span>GETのサンプル<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>h2</span><span class=\"token punctuation\">></span></span>\n\t\t&#x3C;%=request.getAttribute(\"items\") %>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p><img src=\"/3565/10.png\" alt=\"画像\"></p>\n<p>データベースからレコードが取得できていることが確認できました。</p>\n<h2>データベースに登録する</h2>\n<p>次はdoPostメソッドを利用してデータベースにレコードを登録してみます。駆け足でやっていきます</p>\n<p>get.jspに登録フォームを追加します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">%</span>@ page contentType<span class=\"token operator\">=</span><span class=\"token string\">\"text/html;charset=UTF-8\"</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span> \n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span>html lang<span class=\"token operator\">=</span><span class=\"token string\">\"ja\"</span><span class=\"token operator\">></span>\n\t<span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span>body<span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span>h2<span class=\"token punctuation\">></span></span><span class=\"token constant\">GET</span>のサンプル<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">%=</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"items\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span>\n\t\t\n\t\t<span class=\"token operator\">&#x3C;</span>form method<span class=\"token operator\">=</span><span class=\"token string\">\"post\"</span> action<span class=\"token operator\">=</span><span class=\"token string\">\"GetSample\"</span><span class=\"token operator\">></span>\n\t\t\t<span class=\"token operator\">&#x3C;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"item\"</span><span class=\"token operator\">></span>\n\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span>button<span class=\"token punctuation\">></span></span>登録<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n\t\t<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n\t\t\n\t<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span>\n</code></pre></div>\n<p>GetSample.javaのdoPostメソッドを修正します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// データベース登録時の文字化けを防ぐため文字コードを指定する</span>\n\trequest<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// postしたパラメータを取得する</span>\n\t<span class=\"token class-name\">String</span> item <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//　データベースに登録する</span>\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InitialContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">DataSource</span> dataSource <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">)</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java:comp/env/jdbc/kakine\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token class-name\">Connection</span> con <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">// プリペアドステートメントを利用します。</span>\n\t\t\t<span class=\"token class-name\">PreparedStatement</span> statement <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO items(name) VALUES (?);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstatement<span class=\"token punctuation\">.</span><span class=\"token function\">setString</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tstatement<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NamingException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SQLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\te<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>フォームに入力して登録を押下します</p>\n<p><img src=\"/3565/11.png\" alt=\"画像\"></p>\n<p>またdoGetが呼ばれるのでページが更新されます</p>\n<p><img src=\"/3565/12.png\" alt=\"画像\"></p>\n<p>入力した内容が登録されていることがわかります</p>\n<h2>フィルター</h2>\n<p>SpringSecurityでよく出てくるフィルターについて触って終わりにします。</p>\n<p>フィルターを利用することでGETやPOSTの処理の間にフィルターの処理を挟むことができます。jwtのトークンのチェックなどをする時などに利用しました。</p>\n<p>Filterを実装したクラスを作成します</p>\n<p>3つのメソッドをオーバーライドしますがdoFilterメソッドのみ処理を記載していきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SampleFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Filter</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterConfig</span> filterConfig<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> chain<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"フィルターが呼ばれました\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 次のフィルターを呼ぶ</span>\n\t\tchain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// TODO Auto-generated method stub</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>もう一個Filterの実装クラスを作成しておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NextFilter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Filter</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FilterConfig</span> filterConfig<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// TODO Auto-generated method stub\t</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> chain<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"フィルターが呼ばれました\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 次のフィルターを呼ぶ</span>\n\t\tchain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// TODO Auto-generated method stub\t</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>web.xmlにフィルタークラスの登録とフィルターのマッピングを行います</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>web-app</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>display-name</span><span class=\"token punctuation\">></span></span>Archetype Created Web Application<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>display-name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>display-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>display-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>description</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>description</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.kakine.GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servlet-name</span><span class=\"token punctuation\">></span></span>GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/GetSample<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>resource-ref</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>description</span><span class=\"token punctuation\">></span></span>Postgres Connection<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>description</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>res-ref-name</span><span class=\"token punctuation\">></span></span>jdbc/kakine<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>res-ref-name</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>res-type</span><span class=\"token punctuation\">></span></span>javax.sql.DataSource<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>res-type</span><span class=\"token punctuation\">></span></span>\n\t  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>res-auth</span><span class=\"token punctuation\">></span></span>Container<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>res-auth</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>resource-ref</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&#x3C;!-- 追加 --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-name</span><span class=\"token punctuation\">></span></span>SampleFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-class</span><span class=\"token punctuation\">></span></span>com.kakine.SampleFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-class</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-name</span><span class=\"token punctuation\">></span></span>NextFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-class</span><span class=\"token punctuation\">></span></span>com.kakine.NextFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-class</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&#x3C;!-- 順番に定義される --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-mapping</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-name</span><span class=\"token punctuation\">></span></span>SampleFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-mapping</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-mapping</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filter-name</span><span class=\"token punctuation\">></span></span>NextFilter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-name</span><span class=\"token punctuation\">></span></span>\n  \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filter-mapping</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>web-app</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<ul>\n<li>全てのアクセスに対してSampleFilterとNextFilterが実行される</li>\n<li>順番はSampleFilter→NextFilter</li>\n</ul>\n<p>適当に画面を表示させるとログが出力されています</p>\n<p><img src=\"/3565/13.png\" alt=\"画像\"></p>\n<p>フィルターが順番に正しく動いていることが確認できました。</p>\n<h2>終わりに</h2>\n<p>サーブレットを使って以下の事を行いました</p>\n<ul>\n<li>JSP連携\n<ul>\n<li>サーブレットで値を渡す</li>\n<li>JSPで値を取得する</li>\n</ul>\n</li>\n<li>データアクセス\n<ul>\n<li>レコードの取得</li>\n<li>レコードの登録</li>\n</ul>\n</li>\n<li>フィルター\n<ul>\n<li>フィルターチェイン</li>\n</ul>\n</li>\n</ul>\n<p>またweb.xmlがアプリケーションと密接な関係になっていることも確認できました。</p>\n<p>今回のソースコードはGithubにあげております</p>\n<h2>関連記事</h2>\n<p><a href=\"/posts/p1797\">リンク</a></p>\n<p><a href=\"/posts/p3448\">リンク</a></p>","slug":"p3565"},"__N_SSG":true}