{"pageProps":{"frontMatter":{"title":"TypeScriptの非同期処理を実践する","date":"2022.02.08","description":"TypeScriptの非同期処理を実践する","categories":["TypeScript"]},"content":"<p>前回の記事で非同期処理の基本を学んだので、今回は実践してみようと思います。</p>\n<p>fetchメソッドでファイルを取得して、それを元にデシアライズみたいなことをしてみます。</p>\n<p>前回作ったプロジェクトでソースにべた書きでインスタンス生成している箇所があるので、そこをfetchで取得したファイルを元に作成するということをやってみます。</p>\n<p>https://github.com/jirentaicho/typescript-figurecollection/blob/main/src/main.ts</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">public</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 初期画面に必要なものを揃えます</span>\n    PageLogic<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> shelfa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ラブライブ\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kanon.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"chisato.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ren.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keke.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sumire.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shelfa<span class=\"token punctuation\">.</span><span class=\"token function\">setBackImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lovelivetitle.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> shelfb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"とある\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"misaka.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kuroko.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toaru.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shelfb<span class=\"token punctuation\">.</span><span class=\"token function\">setBackImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toarutitle.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">const</span> shelfc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"俺妹\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kirino.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oreimo.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ayase.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shelfc<span class=\"token punctuation\">.</span><span class=\"token function\">setBackImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oreimotitle.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> shelfd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"鬼滅\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rengoku.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"giyu.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nezuko.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shelfd<span class=\"token punctuation\">.</span><span class=\"token function\">setBackImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kimetutitle.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">//ここsingletonにする</span>\n    <span class=\"token keyword\">const</span> setting <span class=\"token operator\">=</span> Setting<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    setting<span class=\"token punctuation\">.</span><span class=\"token function\">addShelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toaru\"</span><span class=\"token punctuation\">,</span>shelfa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    setting<span class=\"token punctuation\">.</span><span class=\"token function\">addShelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lovelive\"</span><span class=\"token punctuation\">,</span>shelfb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    setting<span class=\"token punctuation\">.</span><span class=\"token function\">addShelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oreimo\"</span><span class=\"token punctuation\">,</span> shelfc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    setting<span class=\"token punctuation\">.</span><span class=\"token function\">addShelf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kimetu\"</span><span class=\"token punctuation\">,</span> shelfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">const</span> shelfarea <span class=\"token operator\">=</span> Dom<span class=\"token punctuation\">.</span><span class=\"token function\">getElementByIdWithException</span><span class=\"token punctuation\">(</span>DomConst<span class=\"token punctuation\">.</span><span class=\"token constant\">SHELF_AREA_ID</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    setting<span class=\"token punctuation\">.</span><span class=\"token function\">drawDomShelfs</span><span class=\"token punctuation\">(</span>shelfarea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>async/awaitを利用してファイルの内容を取得する</h2>\n<p>まずは以下のようなファイルをロードするクラスを作成します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileManager</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token function\">getDataWithFile</span><span class=\"token punctuation\">(</span>filename <span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&#x3C;</span>Response<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>filename<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>fetchはPromiseを返却します。</p>\n<p>これを利用してファイルの中身をコンソールに出力します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token function\">loadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> FileManager<span class=\"token punctuation\">.</span><span class=\"token function\">getDataWithFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mylist.yaml'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ちなみにこの場合はawaitをつけないとコンパイルが通りません。awaitつけ忘れてね？って教えてくれます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">Property 'text' does not exist on type 'Promise<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Response</span><span class=\"token punctuation\">></span></span>'.ts(2339)\nmain.ts(46, 31): Did you forget to use 'await'?\n</code></pre></div>\n<p>yamlファイルの内容が表示されました。</p>\n<p><img src=\"/979/1.png\" alt=\"画像\"></p>\n<p>次回はyamlファイルを利用します。</p>","slug":"p979"},"__N_SSG":true}