{"pageProps":{"frontMatter":{"title":"Laravel | スパイ","date":"2022.03.24","description":"Laravel | スパイ","categories":["Laravel"]},"content":"<p>前回はモックについて学習しました。今回はもう一つの目玉であるスパイを勉強します</p>\n<p>mockeryの場合(要調査)</p>\n<ul>\n<li>モック\n<ul>\n<li>モッククラスを新しく作り出すメソッドの戻り値などを設定できます\n<ul>\n<li>メソッドの戻り値などを設定できます</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>スパイ\n<ul>\n<li>既存のオブジェクトを取り出し一部メソッドを置き換え</li>\n<li>メソッドの呼び出しには全てnullを返す</li>\n<li>スパイは処理の後でアサートできる</li>\n</ul>\n</li>\n</ul>\n<p>スパイは軽量で限定的な使われ方をする。</p>\n<p>今回は実装クラスがまだできあがってないStoneRepositoryをspyします。</p>\n<p>テスト対象となるサービスクラス</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">//　テストでspyを確認するだけ</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">StoneServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">StoneService</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// このクラスのメソッドはspyで行います</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name type-declaration\">StoneRepository</span> <span class=\"token variable\">$stoneRepository</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">StoneRepository</span> <span class=\"token variable\">$repo</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">stoneRepository</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$repo</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">UserData</span> <span class=\"token variable\">$userData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 本来ならUserDataを作成します</span>\n\n        <span class=\"token comment\">// 処理</span>\n        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'処理しています'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">stoneRepository</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'保存しました'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>spyを使う</h2>\n<p>StoneRepositoryは実装クラスがないのですが、saveメソッドは特に戻り値のないメソッドになります。</p>\n<ul>\n<li>いつも通りにサービスコンテナにテスト対象のクラスを登録します</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>\n    <span class=\"token scope\">StoneService<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n    <span class=\"token scope\">StoneServiceImpl<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>spyするRepositoryクラスはmockでなくspyを利用します</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span>\n    <span class=\"token scope\">StoneRepository<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">$spy</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">spy</span><span class=\"token punctuation\">(</span><span class=\"token scope\">StoneRepository<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>スパイのアサートは処理終了後でOKです</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$service</span> <span class=\"token operator\">=</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token scope\">StoneService<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$service</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$spy</span><span class=\"token operator\">-></span><span class=\"token function\">shouldHaveReceived</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'save'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>テストクラス全体</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">StoneServiceImplTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TestCase</span>\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 初期化</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// must</span>\n        <span class=\"token scope\"><span class=\"token keyword\">parent</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">setUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// サービスコンテナに登録する</span>\n        <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>\n            <span class=\"token scope\">StoneService<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">StoneServiceImpl<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token doc-comment comment\">/**\n     * A basic unit test example.\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">void</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">test_example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span>\n            <span class=\"token scope\">StoneRepository<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$spy</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">spy</span><span class=\"token punctuation\">(</span><span class=\"token scope\">StoneRepository<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       \n        <span class=\"token variable\">$service</span> <span class=\"token operator\">=</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token scope\">StoneService<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     \n        <span class=\"token variable\">$service</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UserData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token variable\">$spy</span><span class=\"token operator\">-></span><span class=\"token function\">shouldHaveReceived</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'save'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertTrue</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>その他</p>\n<p>spyが使われているサンプル集(別サイト)</p>","slug":"p1717"},"__N_SSG":true}