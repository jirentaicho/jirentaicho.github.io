{"pageProps":{"frontMatter":{"title":"Java | コレクションと配列","date":"2022.07.08","description":"Java | コレクションと配列","categories":["Java"]},"content":"<p>コレクションはモノの集まりを扱うためのもので、似たようなものに配列があります。しかし基本的にはコレクションのほうが使われることが多いですし、あらゆるケースでコレクションの方が良いです。コレクションはジェネリクスと一緒に使われることが多いです。</p>\n<p>今回は以下について見ていきます</p>\n<ul>\n<li>ArrayListとLinkedList</li>\n<li>TreeMap</li>\n<li>Setについて</li>\n<li>変更不能なコレクション</li>\n<li>配列のコピー</li>\n</ul>\n<h2>ArrayListとLinkedList</h2>\n<p>２つは内部の検索方法が違います。</p>\n<ul>\n<li>ArrayListはインデックスを指定して要素を検索しますので、どの要素も同じスピードで取得できます</li>\n<li>LinkedListは指定されたインデックス(n)がリスト全体の真ん中より前か後ろに応じて、先頭末尾からn個のリンクをたどります\n<ul>\n<li>つまり要素数が多かったり、検索要素が中央付近の場合は処理が遅いです</li>\n</ul>\n</li>\n</ul>\n<p>しかし要素の追加削除の方法も違います</p>\n<ul>\n<li>ArrayListは挿入や削除をした位置から後ろの全ての要素を移動させるため遅いです\n<ul>\n<li>要素の後ろへの追加削除は、移動が少ないので速いです</li>\n<li>ArrayListは連続したメモリ構造を扱うため、追加の際には新しい連続メモリの作成を行い、古い領域のデータをコピーする動きがありますこのコピー処理は遅いですコンストラクタで初期サイズを指定することもできます\n<ul>\n<li>このコピー処理は遅いです</li>\n<li>コンストラクタで初期サイズを指定することもできます</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>LinkedListはリンクの付け替えのみなので速いです\n<ul>\n<li>リンクの付け替えは軽い処理です</li>\n<li>要素ごとにメモリを確保しているため連続領域の再確保などは発生しません</li>\n</ul>\n</li>\n</ul>\n<p>多くの場合はArrayListを利用するかもしれませんが、要素の追加削除が頻繁にある場合はLinkedListを利用した方がパフォーマンスが上がります</p>\n<h4>LinkedListのサンプル</h4>\n<p>Listの実装クラスなのでArrayListと同じように扱えます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> arrayList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> linkedList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"御坂美琴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"白井黒子\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"上条当麻\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"垣根提督\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"麦野沈利\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"絹旗最愛\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlinkedList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"食蜂操祈\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>linkedList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 垣根提督</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>TreeMap</h2>\n<p>TreeMapのkeyは比較可能である必要があります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TreeMap</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"popai\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"shaini\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tank\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ponchan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// {1=ponchan, 4=shaini, 6=popai, 9=tank}</span>\n</code></pre></div>\n<p>勝手にソートされています。TreeMapは赤黒ツリーというアルゴリズムを利用しています。</p>\n<p>https://docs.oracle.com/javase/jp/11/docs/api/java.base/java/util/TreeMap.html</p>\n<h2>Set</h2>\n<p>セットは順序無関係で重複を持てないリストのようなものです。もしも重複した要素を追加しようとするとfalseが返ります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"御坂美琴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"白井黒子\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"御坂美琴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"白井黒子\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">::</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">true\r\r\ntrue\r\r\nfalse\r\r\n-------------------------------\r\r\n白井黒子\r\r\n御坂美琴\r\r\n-------------------------------\r\r\n御坂美琴</code></pre></div>\n<p>基本的には要素のaddとremoveという操作を行います。</p>\n<h2>変更不能なコレクション</h2>\n<p>コレクションの中身は簡単に破壊できます。しかし変更不能なコレクションを利用するとそれを防ぐことができます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"御坂\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"食蜂\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tlist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"追加しました\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>Arrays.asListsでリストを作成して、リストに要素を追加する</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Exception in thread &#x26;quot;main&#x26;quot; java.lang.UnsupportedOperationException\r\r\n\tat java.util.AbstractList.add(AbstractList.java:148)\r\r\n\tat java.util.AbstractList.add(AbstractList.java:108)\r\r\n\tat com.volkruss.javasansen.javasansen.exception.Main.addItem(Main.java:38)\r\r\n\tat com.volkruss.javasansen.javasansen.exception.Main.main(Main.java:19)</code></pre></div>\n<p>通常通りリストを作成すれば要素を追加できますが、変更不能なコレクションは要素が追加できません。</p>\n<h4>その他</h4>\n<p>参照の値渡しについて</p>\n<h2>配列のコピー</h2>\n<p>配列をコピーする時に気を付けるのがshallow copyとdeep copyです。配列要素が参照型の時に起きます。</p>\n<ul>\n<li>shallow copy\n<ul>\n<li>要素だけをコピー</li>\n</ul>\n</li>\n<li>deep copy\n<ul>\n<li>参照先オブジェクト自体も一緒にコピー</li>\n</ul>\n</li>\n</ul>\n<p>配列オブジェクトの各インデックスにはオブジェクトの実態はなく、要素となるオブジェクトの参照があります。</p>\n<p>shallow copyの場合は参照の値がコピーがされますのでコピー先とコピー元で、参照する要素オブジェクトが共通になってしまいます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Product</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> products <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"商品A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"商品B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Product</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> myProducts <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyOf</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">,</span> products<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myProducts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nproducts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Drink\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myProducts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">商品B\r\r\n商品B\r\r\nDrink\r\r\nDrink\r</code></pre></div>\n<p>コピー元の配列の値を変更して、コピー先の配列の値を出力すると、コピー元で変更した値になっています。参照値が同じだからです。</p>\n<p>基本的にディープコピーは自作する必要があります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Product</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> products <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"商品A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"商品B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Product[] myProducts = Arrays.copyOf(products, products.length);</span>\n<span class=\"token class-name\">Product</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> myProducts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">[</span>products<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> products<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">Product</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmyProducts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myProducts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nproducts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Drink\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>products<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>myProducts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">商品B\r\r\n商品B\r\r\nDrink\r\r\n商品B</code></pre></div>","slug":"p2858"},"__N_SSG":true}