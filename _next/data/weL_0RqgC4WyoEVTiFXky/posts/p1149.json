{"pageProps":{"frontMatter":{"title":"Dockerでwordpress実行環境を作る","date":"2022.02.14","description":"Dockerでwordpress実行環境を作る","categories":["Docker"]},"content":"<p>dockerを使って使い捨て環境が簡単に作れるのでやっていきます</p>\n<p>まずはざっくりコマンドとオプションを確認します</p>\n<p>まずは簡単な挨拶でnginxの環境を立ち上げます</p>\n<p>htmlの用意がある人とない人でマウントの有無を変えます</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">docker run --name oninonginx -v D:\\work\\gyaralli\\public:/usr/share/nginx/html -d -p 8080:80  nginx:latest\n無い人\ndocker run --name oninonginx -d -p 8080:80  nginx:latest\n</code></pre></div>\n<p>実行したら8080にアクセスします</p>\n<p>私の場合は以前作ったサイトがきちんと表示されています。</p>\n<p><img src=\"/1149/1.png\" alt=\"画像\"></p>\n<p>コンテナを停止します</p>\n<p>docker container stop コンテナID</p>\n<p>コンテナを削除します</p>\n<p>docker container rm コンテナID</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">C:\\Users\\kirino>docker run --name oninonginx -v D:\\work\\gyaralli\\public:/usr/share/nginx/html -d -p 8080:80  nginx:latest\n98c2710dad103f8df51a788d4bbe8f948d92240293acaa15c00b57a9e3b20945\n\nC:\\Users\\kirino>docker container stop 98c2710dad103f8df51a788d4bbe8f948d92240293acaa15c00b57a9e3b20945\n98c2710dad103f8df51a788d4bbe8f948d92240293acaa15c00b57a9e3b20945\n\nC:\\Users\\kirino>docker container rm 98c2710dad103f8df51a788d4bbe8f948d92240293acaa15c00b57a9e3b20945\n98c2710dad103f8df51a788d4bbe8f948d92240293acaa15c00b57a9e3b20945\n</code></pre></div>\n<p>-vオプなし</p>\n<p><img src=\"/1149/2.png\" alt=\"画像\"></p>\n<h2>WordPress</h2>\n<p>docker-composeを使うとズールができるので一発ですが、今回はこれを使わずにwordpress環境を作ります。（ただの勉強目的です）</p>\n<p>ネットワーク機能を使います。</p>\n<p>ネットワークの作成</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">docker network create onino-network\n</code></pre></div>\n<p>以下コマンドでコンテナ起動</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">docker run --name oninomysql --network onino-network -e MYSQL_ROOT_PASSWORD=wordpress -e MYSQL_DATABASE=wordpress -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress -d mysql:latest\ndocker run --name oninowordpress --network onino-network -e WORDPRESS_DB_HOST=oninomysql -e WORDPRESS_DB_NAME=wordpress -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -v D:\\work\\oninowordpress:/var/www/html -p 8088:80 -d wordpress:latest\ndocker run --name oninophpmyadmin --network onino-network -e PMA_HOST=oninomysql -p 8081:80 -d phpmyadmin:latest\n</code></pre></div>\n<p>依存するDB_HOSTにはコンテナ名を指定します。</p>\n<p>http://localhost:8088/にアクセスすると、wordpressのインストール画面になります。この画面はDBとの接続がうまくいっていない場合は表示されません。</p>\n<p><img src=\"/1149/3.png\" alt=\"画像\"></p>\n<p>インストール後</p>\n<p><img src=\"/1149/4.png\" alt=\"画像\"></p>\n<p>またマウントしたパスには以下のワードプレスのファイルフォルダがマウントされています</p>\n<p><img src=\"/1149/5.png\" alt=\"画像\"></p>\n<p>またlocalhost:8081ではphpmyadminに接続できます</p>\n<p>wordpress/wordpressでログイン</p>\n<p><img src=\"/1149/6.png\" alt=\"画像\"></p>\n<p>データベースが必要なアプリケーションもDocker一つで環境構築できました。</p>\n<p>参考サイト</p>\n<p>https://hub.docker.com/r/phpmyadmin/phpmyadmin/</p>","slug":"p1149"},"__N_SSG":true}