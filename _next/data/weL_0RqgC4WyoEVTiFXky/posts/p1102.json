{"pageProps":{"frontMatter":{"title":"Gitコマンドの勉強記録 stash編","date":"2022.02.13","description":"Gitコマンドの勉強記録 stash編","categories":["Git"]},"content":"<p>今回は作業の退避について勉強します。</p>\n<p>例えば、dev01ブランチで作業していたとします。temp_make.phpというファイルを作成しました。</p>\n<p><img src=\"/1102/1.png\" alt=\"画像\"></p>\n<p>まだこれは作業の途中ですが、ここで全く別の実装が必要になってしまいした。</p>\n<p>ブランチを新しく作る必要がありますが、このファイルを退避しておきたい時に使います。git stash save</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">kirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git stash save\nSaved working directory and index state WIP on dev01: dc5000f 修正 readme.md\n\nkirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git stash list\nstash@{0}: WIP on dev01: dc5000f 修正 readme.md\n</code></pre></div>\n<p>これで作成していたtemp_make.phpが消えました。</p>\n<p>ブランチをnewDev01に切り替えて追加作業となったことのcommit～pushまでします。この時pushしているのはnewDev.javaだけです。</p>\n<p><img src=\"/1102/2.png\" alt=\"画像\"></p>\n<p>dev01ブランチに戻って退避から戻します。git stash apply stash@{0}</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">$ git stash list\nstash@{0}: WIP on dev01: dc5000f 修正 readme.md\n\nkirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git stash apply stash@{0}\nOn branch dev01\nChanges to be committed:\n  (use \"git restore --staged <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>file</span><span class=\"token punctuation\">></span></span>...\" to unstage)\n        new file:   temp_make.php\n\n</code></pre></div>\n<p>temp_make.phpが戻ってきたのでpushしてみます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">$ git commit -m \"退避から復活してコミット\"\n[dev01 f8c45b8] 退避から復活してコミット\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 temp_make.php\n\nkirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git push origin dev01\nEnumerating objects: 3, done.\nCounting objects: 100% (3/3), done.\nDelta compression using up to 16 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (2/2), 292 bytes | 292.00 KiB/s, done.\nTotal 2 (delta 1), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo https://github.com/jirentaicho/gitc.git\n   dc5000f..f8c45b8  dev01 -> dev01\n\n</code></pre></div>\n<p>stashから復活させてもlistに残っているので消しておきます。git stash drop</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">kirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git stash list\nstash@{0}: WIP on dev01: dc5000f 修正 readme.md\n\nkirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git stash drop stash@{0}\nDropped stash@{0} (f4c290adc6d7ea248a1841a21269fdb5ae9bcaf3)\n\nkirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n$ git stash list\n\nkirino@LAPTOP-GQK0K0U4 MINGW64 /d/work/github (dev01)\n\n</code></pre></div>\n<p>stash popを使うことで復活と同時に削除もできます。</p>","slug":"p1102"},"__N_SSG":true}