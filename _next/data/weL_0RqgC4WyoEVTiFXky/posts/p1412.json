{"pageProps":{"frontMatter":{"title":"Laravel | JWT認証メモ","date":"2022.03.03","description":"Laravel | JWT認証メモ","categories":["Laravel"]},"content":"<p>JWT認証についてのメモ</p>\n<p>設定などは以下を参考</p>\n<p>https://www.positronx.io/laravel-jwt-authentication-tutorial-user-login-signup-api/</p>\n<p>インストール時にエラーになる場合は以下コマンドを実施する</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">composer require -w tymon/jwt-auth --ignore-platform-reqs</code></pre></div>\n<h2>JWTGuard</h2>\n<p>ログインの時に利用されるGuard。プロバイダーはEloquentUserProviderを利用する。</p>\n<p>今回はAuth::extendしてカスタム設定が働くため、AuthManagerのcustomCreatorsが働く</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">customCreators</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'driver'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">callCustomCreator</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>登録カ所</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">extendAuthGuard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'auth'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jwt'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$app</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$guard</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JWTGuard</span><span class=\"token punctuation\">(</span>\n                <span class=\"token variable\">$app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tymon.jwt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token variable\">$app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'auth'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">createUserProvider</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'provider'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token variable\">$app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'request'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$guard</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'setRequest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$guard</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>つまり、以下のようなauth.phpのdriverに設定したjwtに対してはJWTGuardが利用される。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token string single-quoted-string\">'guards'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'web'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'session'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'provider'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>        \n        <span class=\"token string single-quoted-string\">'api'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'driver'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'jwt'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'provider'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'hash'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<h2>Login</h2>\n<p>ログインするにはGuardのattemptメソッドを実行します。引数には以下のようなemailとpasswordを入れた認証情報を渡します</p>\n<p><img src=\"/1412/1.png\" alt=\"画像\"></p>\n<p>実際には以下のようにして上記の認証情報を渡します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">attempt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$validator</span><span class=\"token operator\">-></span><span class=\"token function\">validated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>ちなみにこれはSessionGuardも同じです。</p>\n<p>ユーザーの取得は、EloquentUserProviderから取得しているので、こちらも通常と同じような感じ。データベースにユーザーが登録されていない場合はもちろんエラーになる。</p>\n<p>attemptメソッドはその後loginメソッドを呼び出してtokenを取得している。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Create a token for a user.\n     *\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>Tymon<span class=\"token punctuation\">\\</span>JWTAuth<span class=\"token punctuation\">\\</span>Contracts<span class=\"token punctuation\">\\</span>JWTSubject</span>  <span class=\"token parameter\">$user</span>\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">JWTSubject</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">jwt</span><span class=\"token operator\">-></span><span class=\"token function\">fromUser</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">setToken</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<h2>Token</h2>\n<p>GuardのuserメソッドではTokenの有無を確認しています。例えば/api/auth/user-profileはユーザー情報を取得しますが、この時にTokenを持っていないとユーザー情報が取得できません。</p>\n<p><img src=\"/1412/2.png\" alt=\"画像\"></p>\n<p>メソッドは以下のようになっています</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Get the currently authenticated user.\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Contracts<span class=\"token punctuation\">\\</span>Auth<span class=\"token punctuation\">\\</span>Authenticatable<span class=\"token punctuation\">|</span><span class=\"token keyword\">null</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span> <span class=\"token operator\">!==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">jwt</span><span class=\"token operator\">-></span><span class=\"token function\">setRequest</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">request</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;&#x26;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">jwt</span><span class=\"token operator\">-></span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;&#x26;</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">validateSubject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">provider</span><span class=\"token operator\">-></span><span class=\"token function\">retrieveById</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sub'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Tokenを設定していればしっかりrequestからTokenを取得できます。</p>\n<p><img src=\"/1412/3.png\" alt=\"画像\"></p>\n<p>getTokenメソッドはperseTokenメソッドをコールしています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Get the token.\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>Tymon<span class=\"token punctuation\">\\</span>JWTAuth<span class=\"token punctuation\">\\</span>Token<span class=\"token punctuation\">|</span><span class=\"token keyword\">null</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">parseToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JWTException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>このparseTokenは先ほどsetRequest($this->request)で設定した、Parserクラスのrequest変数からtokenをパースしているようです。</p>\n<p>Tokenに問題がなければプロバイダのretrieveByIdメソッドをコールしてAuthenticatableを実装したUserクラスが返されます。</p>\n<p>ちなみにapiなのでjson形式で返すと以下のようになる</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","slug":"p1412"},"__N_SSG":true}