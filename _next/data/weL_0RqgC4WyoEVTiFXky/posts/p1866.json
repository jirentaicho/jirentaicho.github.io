{"pageProps":{"frontMatter":{"title":"Java | apache.commons.ioのCountersテストコードを読んでみる勉強","date":"2022.04.01","description":"Java | apache.commons.ioのCountersテストコードを読んでみる勉強","categories":["Java"]},"content":"<p>gitでコードを取得する</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">git clone https://gitbox.apache.org/repos/asf/commons-io.git</code></pre></div>\n<p>タグを確認して、リリース版をチェックアウト</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">git tag\n....\ncommons-io-2.6-RC2\ncommons-io-2.6-RC3\ncommons-io-2.7-RC1\ncommons-io-2.8.0-RC1\ncommons-io-2.8.0-RC2\ncommons-io-2.9.0-RC1\nrel/commons-io-2.10.0\nrel/commons-io-2.11.0\nrel/commons-io-2.7\nrel/commons-io-2.8.0\nrel/commons-io-2.9.0\n\ngit checkout rel/commons-io-2.9.0\n</code></pre></div>\n<p>テストコードを見てみる</p>\n<p>簡単そうな名前のクラスのテストがあったので見てみます。</p>\n<p>https://javadoc.io/static/commons-io/commons-io/2.11.0/org/apache/commons/io/file/Counters.html</p>\n<p>テストコードで見たことないアノテーションを発見しました。。</p>\n<p>org.apache.commons.io.file.CountersTest.java</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n    <span class=\"token annotation punctuation\">@MethodSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"numberCounters\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testInitialValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Counter</span> counter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertCounter</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>@ParameterizedTest\n<ul>\n<li>インプットが違うだけで、結果やテスト内容が変わらないものを便利にテストする</li>\n<li>https://qiita.com/rhirabay/items/2631359a095e3f87b2ae</li>\n</ul>\n</li>\n<li>@MethodSource(“staticmethodname”)\n<ul>\n<li>staticファクトリメソッドのメソッド名を渡すStream, Iterable, Iteratorのいずれかを返り値としていること\n<ul>\n<li>Stream, Iterable, Iteratorのいずれかを返り値としていること</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>つまりcounter引数にはnumberCountersメソッドの結果が入ってくるということです。こういった引数に関する記載は基底クラスに定義があります</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">numberCounters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// @formatter:off</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Stream</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n          <span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Counters</span><span class=\"token punctuation\">.</span><span class=\"token function\">longCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Counters</span><span class=\"token punctuation\">.</span><span class=\"token function\">bigIntegerCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// @formatter:on</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>2種類のCounterを返しています</p>\n<ul>\n<li>LongCounter</li>\n<li>BigIntegerCounter</li>\n</ul>\n<p>アサートの詳細は以下のようになっています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">assertCounter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expected<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Counter</span> actual<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">,</span> actual<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> actual<span class=\"token punctuation\">.</span><span class=\"token function\">getLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> actual<span class=\"token punctuation\">.</span><span class=\"token function\">getBigInteger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>今回の場合は2種類のCounterの初期値が0であることを確認しています。</p>\n<p>実行すると成功しています</p>\n<p><img src=\"/1866/1.png\" alt=\"画像\"></p>\n<h2>pathCounters</h2>\n<p>次にCountingPathVisitorTestクラスのtestCountFolders2FileSize2テストを見ていきます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n    <span class=\"token annotation punctuation\">@MethodSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"countingPathVisitors\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCountFolders2FileSize2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">CountingPathVisitor</span> visitor<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">checkZeroCounts</span><span class=\"token punctuation\">(</span>visitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertCounts</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">PathUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">visitFileTree</span><span class=\"token punctuation\">(</span>visitor<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"src/test/resources/org/apache/commons/io/dirs-2-file-size-2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>引数に渡ってくるストリームCountingPathVisitorはPathVisitorを実装しているクラスです。PathVisitorはUtilクラスを通してファイルツリーなど取得できるようになっています。</p>\n<p>visitorに特定のパスへvisitさせることで、そのパスに含まれるディレクトリやファイルの数を取得させることができます。visitorは内部でpathCounterを持っている状態です。</p>\n<p><img src=\"/1866/2.png\" alt=\"画像\"></p>\n<p>pathCounterは内部でCounterを持っています</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AbstractPathCounters</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">PathCounters</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Counter</span> byteCounter<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Counter</span> directoryCounter<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Counter</span> fileCounter<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>引数のストリーム</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">countingPathVisitors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// @formatter:off</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Stream</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n          <span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CountingPathVisitor</span><span class=\"token punctuation\">.</span><span class=\"token function\">withBigIntegerCounters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token class-name\">Arguments</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CountingPathVisitor</span><span class=\"token punctuation\">.</span><span class=\"token function\">withLongCounters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// @formatter:on</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>それぞれBigIntegerCounters、LongCountersで持ちます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">CountingPathVisitor</span> <span class=\"token function\">withBigIntegerCounters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CountingPathVisitor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Counters</span><span class=\"token punctuation\">.</span><span class=\"token function\">bigIntegerPathCounters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>コンストラクタで先ほどのフィールドに設定しています</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">CountingPathVisitor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">PathCounters</span> pathCounter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">PathFilter</span> fileFilter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">PathFilter</span> dirFilter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pathCounters <span class=\"token operator\">=</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span>pathCounter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pathCounter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileFilter <span class=\"token operator\">=</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span>fileFilter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fileFilter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dirFilter <span class=\"token operator\">=</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">requireNonNull</span><span class=\"token punctuation\">(</span>dirFilter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dirFilter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>visitorに特定のパスへvisitさせた結果を検証します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">assertCounts</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expectedDirCount<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expectedFileCount<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expectedByteCount<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">CountingPathVisitor</span> actualVisitor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertCounts</span><span class=\"token punctuation\">(</span>expectedDirCount<span class=\"token punctuation\">,</span> expectedFileCount<span class=\"token punctuation\">,</span> expectedByteCount<span class=\"token punctuation\">,</span> actualVisitor<span class=\"token punctuation\">.</span><span class=\"token function\">getPathCounters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">assertCounts</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expectedDirCount<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expectedFileCount<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> expectedByteCount<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">PathCounters</span> actualPathCounters<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">assertCounter</span><span class=\"token punctuation\">(</span>expectedDirCount<span class=\"token punctuation\">,</span> actualPathCounters<span class=\"token punctuation\">.</span><span class=\"token function\">getDirectoryCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getDirectoryCounter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertCounter</span><span class=\"token punctuation\">(</span>expectedFileCount<span class=\"token punctuation\">,</span> actualPathCounters<span class=\"token punctuation\">.</span><span class=\"token function\">getFileCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getFileCounter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertCounter</span><span class=\"token punctuation\">(</span>expectedByteCount<span class=\"token punctuation\">,</span> actualPathCounters<span class=\"token punctuation\">.</span><span class=\"token function\">getByteCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getByteCounter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>実際のパスも確認してみます</p>\n<p><img src=\"/1866/3.png\" alt=\"画像\"></p>\n<p>ディレクトリ3でファイルの数が2です。指定したディレクトリの数も含まれています。</p>\n<h2>検証コード</h2>\n<p>検証コードが1行で書かれていて見やすいです</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ParameterizedTest</span>\n    <span class=\"token annotation punctuation\">@MethodSource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"countingPathVisitors\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCountFolders1FileSize0</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">CountingPathVisitor</span> visitor<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">checkZeroCounts</span><span class=\"token punctuation\">(</span>visitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertCounts</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">PathUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">visitFileTree</span><span class=\"token punctuation\">(</span>visitor<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"src/test/resources/org/apache/commons/io/dirs-1-file-size-0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>シンプルにテストコードを書くためにやっていること</p>\n<ul>\n<li>テストの目的だけが書かれている</li>\n<li>目的を達成する以外のコードは外に追いやる\n<ul>\n<li>アノテーションを使う</li>\n<li>専用のアサーションクラスを作成する</li>\n</ul>\n</li>\n</ul>","slug":"p1866"},"__N_SSG":true}