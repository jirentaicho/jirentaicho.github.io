{"pageProps":{"frontMatter":{"title":"SpringbootでCSV出力する","date":"2021.12.08","description":"SpringbootでCSV出力する","categories":["Spring"]},"content":"<p>このプロジェクトにいろいろと実装をしていきたいです</p>\n<p>https://github.com/jirentaicho/iroiro-spring</p>\n<p>ここです</p>\n<p>https://github.com/jirentaicho/Iroiro-spring/pull/1</p>\n<p>参考：https://github.com/miyabayt/spring-boot-doma2-sample</p>\n<p>SpringBoot2徹底活用</p>\n<p>上記はgradleなのですが私は得意ではないのでMavenを利用します。また、この書籍は現場至上主義ということでソースコードの難易度が高く感じます。。</p>\n<p>とりあえずjacksonが必要なのでpomに記載をします。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>groupId</span><span class=\"token punctuation\">></span></span>com.fasterxml.jackson.dataformat<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>artifactId</span><span class=\"token punctuation\">></span></span>jackson-dataformat-csv<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>version</span><span class=\"token punctuation\">></span></span>2.13.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>version</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<h2>CSV出力をするには</h2>\n<p>jackson-dataformat-csvというライブラリを利用します。</p>\n<p>CsvMapperを利用することで、オブジェクトからCSV形式で出力できそうです。</p>\n<p>CSVでファイル出力する場合は以下のようになりそうです。</p>\n<ul>\n<li>new CsvMapper()する</li>\n<li>csvMapper.schemaFor(class).withHeader();でヘッダ情報をセットする</li>\n<li>csvMapper.writer(schema).writeValue(writer, data);で出力する</li>\n</ul>\n<h2>AbstractView</h2>\n<p>AbstractViewについて知らなかったのですが、csv出力の箇所で出てきました。</p>\n<p>CsvViewはAbstractViewを継承していてrenderMergedOutputModelメソッドにて、ゴリゴリにロジックの詳細を実装しています。</p>\n<p>AbstractViewは、Viewインターフェースのrenderメソッドをオーバーライドしている。renderMergedOutputModelは、renderメソッドから呼び出されるので、オーバーライドする必要があります（抽象メソッド）</p>\n<h2>軽く動作を確認する</h2>\n<p>AbstractViewを継承したクラスに必要なメソッドのオーバーライドをしたものが以下になります。renderMergedOutputModelメソッドでは”call renderMergedOutputModel”と出力しています。これでこのメソッドが呼ばれるか確認できます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>view</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AbstractView</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCsv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractView</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">renderMergedOutputModel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> model<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"call renderMergedOutputModel \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>コントローラーでTesCsvクラスを利用します。ModelAndViewにセットして簡潔させるだけです。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span>testcsv</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ModelAndView</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TestCsv</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCsvController</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/getcsv\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">testcsv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TestCsv</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestCsv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"/492/1.png\" alt=\"画像\"></p>\n<p>コンソールに出力されています。つまりrenderMergedOutputModelメソッドが呼ばれていることが確認できました。</p>\n<h2>出力対象とするクラスを作成する</h2>\n<p>出力対象とするシンプルなクラスを作成します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span>testcsv</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AllArgsConstructor</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestData</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> protagonist<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>次にTestCsvクラスを修正します。CsvMapperを利用して出力対象となるオブジェクトをCSV形式で出力するように修正します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>view</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AbstractView</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>dataformat<span class=\"token punctuation\">.</span>csv<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CsvGenerator</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Feature</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>dataformat<span class=\"token punctuation\">.</span>csv<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CsvMapper</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>dataformat<span class=\"token punctuation\">.</span>csv<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CsvSchema</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCsv</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractView</span><span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token comment\">// csvmapper</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CsvMapper</span> csvMapper <span class=\"token operator\">=</span> <span class=\"token function\">createMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// 出力するクラス</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> clazz<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// 出力するデータ</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> data<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">CsvMapper</span> <span class=\"token function\">createMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">CsvMapper</span> mapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CsvMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmapper<span class=\"token punctuation\">.</span><span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Feature</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ALWAYS_QUOTE_STRINGS</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmapper<span class=\"token punctuation\">.</span><span class=\"token function\">findAndRegisterModules</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> mapper<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// コンストラクタでクラスとデータを受取る</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TestCsv</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> clazz<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clazz <span class=\"token operator\">=</span> clazz<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">renderMergedOutputModel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> model<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// ヘッダを設定する</span>\n\t\t<span class=\"token class-name\">CsvSchema</span> schema <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>csvMapper<span class=\"token punctuation\">.</span><span class=\"token function\">schemaFor</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// TODO カラムが指定されたら指定カラムのみ出力する</span>\n\t\t\n\t\t<span class=\"token comment\">// csv形式で結果を取得する</span>\n\t\t<span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> csvMapper<span class=\"token punctuation\">.</span><span class=\"token function\">writer</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>どんなクラスでも出力できるようにジェネリクスを利用しているのは参考サイトをお手本にしています。</p>\n<p>今回はファイル出力をしていないのでwriteValueメソッドでなくてwriteValueAsStringメソッドを利用しています。</p>\n<h2>コントローラーから利用する</h2>\n<p>今回は出力対象とするクラスをそのままインスタンス化して結果を見てみます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span>testcsv</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ModelAndView</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TestCsv</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCsvController</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/getcsv\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">testcsv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token comment\">// csv出力対象</span>\n\t\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">TestData</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">TestData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"俺の妹がこんなに可愛いわけがない\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"高坂桐乃\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">TestData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ラブライブ!スーパースター!!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"嵐千砂都\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token class-name\">TestData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"とある科学の超電磁砲\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"御坂美琴\"</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">TestCsv</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestCsv</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TestData</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>実行すると以下のようにコンソール出力されています</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">&#x26;quot;protagonist&#x26;quot;,&#x26;quot;title&#x26;quot;\r\r\n&#x26;quot;高坂桐乃&#x26;quot;,&#x26;quot;俺の妹がこんなに可愛いわけがない&#x26;quot;\r\r\n&#x26;quot;嵐千砂都&#x26;quot;,&#x26;quot;ラブライブ!スーパースター!!&#x26;quot;\r\r\n&#x26;quot;御坂美琴&#x26;quot;,&#x26;quot;とある科学の超電磁砲&#x26;quot;</code></pre></div>\n<p>参考サイトではリポジトリから取得したUserクラスをUserCsvクラスにModelMapperで変換しています。 UserCsvクラスはJsonPropertyというアノテーションを持ったメンバを持っています。これらはjacksonの機能のようです。</p>\n<p>このJsonPropertyを付与すればヘッダーとして認識してくれるようです。</p>\n<p>modelMapperとの動きは見てないのですが、オブジェクトをマッピングする際に持ってないメンバは無視するなどもできるようです。</p>\n<p>とりあえず簡単にJsonPropertyを付与して実行してみます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>iroiro<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span>testcsv</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonProperty</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AllArgsConstructor</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestData</span> <span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token annotation punctuation\">@JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"タイトル\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token annotation punctuation\">@JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"主人公\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> protagonist<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">&#x26;quot;タイトル&#x26;quot;,&#x26;quot;主人公&#x26;quot;\r\r\n&#x26;quot;俺の妹がこんなに可愛いわけがない&#x26;quot;,&#x26;quot;高坂桐乃&#x26;quot;\r\r\n&#x26;quot;ラブライブ!スーパースター!!&#x26;quot;,&#x26;quot;嵐千砂都&#x26;quot;\r\r\n&#x26;quot;とある科学の超電磁砲&#x26;quot;,&#x26;quot;御坂美琴&#x26;quot;\r\r\n</code></pre></div>\n<p>想定通りの動きになりました。</p>\n<h2>AbstractViewについて考える</h2>\n<p>サクッと触れましたが結構わからない点が多いので少しソースを眺めてみます。</p>\n<p><img src=\"/492/2.png\" alt=\"画像\"></p>\n<p>インスタンス化した時点ではログが吐かれていないですね。</p>\n<p>DispatcherServletクラスのrenderメソッドにて呼び出しているようでした。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">protected void render(ModelAndView mv, HttpServletRequest request, HttpServletResponse response) throws Exception {\n\t\t省略\t\t\ntry {\n\t\t\tif (mv.getStatus() != null) {\n\t\t\t\tresponse.setStatus(mv.getStatus().value());\n\t\t\t}\n\t\t\tview.render(mv.getModelInternal(), request, response);\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"Error rendering view [\" + view + \"]\", ex);\n\t\t\t}\n\t\t\tthrow ex;\n\t\t}\n</code></pre></div>\n<p>とありましたので、当たり前かもしれませんが、レンダリングする際に呼ばれているようです。</p>","slug":"p492"},"__N_SSG":true}