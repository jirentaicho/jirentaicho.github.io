{"pageProps":{"frontMatter":{"title":"「実践Javaプログラム 火事場のJavaプログラム」読んでみた2","date":"2022.08.24","description":"「実践Javaプログラム 火事場のJavaプログラム」読んでみた2","categories":["Java"]},"content":"<p>今回は前回の続きです。コードの記載が多くなります。</p>\n<p><a href=\"/posts/p3472\">リンク</a></p>\n<p>前回APIの実装は完了しましたが、今回は仕様変更が入る想定です。現在はGoldというクラスが報酬として得られますが、Gold以外の報酬(Ticket)も設定したいという仕様変更です。</p>\n<p>もしも60日以上ログインが無かった人にはTicketを3枚配布するよう変更します。</p>\n<p>しかし、このままではGoldとTicketの型が異なるので、共通のインターフェースとしてItemインターフェースを作成します。</p>\n<h2>Itemインターフェース</h2>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">getAmt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>GoldとTicketはこれを実装します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Setter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Gold</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Setter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Ticket</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p>するとコントローラーの戻り値の型もItemにしておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/logincampaign\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> loginCampaignService<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>サービスクラスの型も変更しておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LoginCampaignService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Item</span> <span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>getRewardメソッドもItemを返すように修正して、その他の該当箇所も修正しておきます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getReward</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Date</span> lastLogin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 最終ログインからの経過日数を取得する</span>\n    <span class=\"token keyword\">int</span> elapsedDays <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getElapsedDays</span><span class=\"token punctuation\">(</span>lastLogin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Item</span> item <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ticket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ガチャチケット\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 30日以上前の場合は300ゴールド</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 14日以上前の場合は200ゴールド</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 7日以上前の場合は100ゴールド</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// それ以外は50ゴールド</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>テストコードも型だけ変更して問題ないことを確認しておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test_get300</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Date</span> userLoginDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDateFromStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20220701\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Date</span> systemDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDateFromStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20220822\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Item</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ユーザー取得の挙動をモックする</span>\n    <span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDao<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token function\">anyInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenReturn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上条当麻\"</span><span class=\"token punctuation\">,</span>userLoginDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// システム日付取得(staticメソッド)の挙動をモックする</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MockedStatic</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">></span></span> mock <span class=\"token operator\">=</span> <span class=\"token function\">mockStatic</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        mock<span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemUtil</span><span class=\"token operator\">::</span><span class=\"token function\">getSystemDate</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenReturn</span><span class=\"token punctuation\">(</span>systemDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loginCampaignService<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getAmt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>また以下のテストも追加しておきます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test_getTicket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Date</span> userLoginDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDateFromStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20220701\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Date</span> systemDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDateFromStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20220922\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Item</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ユーザー取得の挙動をモックする</span>\n    <span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDao<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token function\">anyInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenReturn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上条当麻\"</span><span class=\"token punctuation\">,</span>userLoginDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// システム日付取得(staticメソッド)の挙動をモックする</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MockedStatic</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">></span></span> mock <span class=\"token operator\">=</span> <span class=\"token function\">mockStatic</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        mock<span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemUtil</span><span class=\"token operator\">::</span><span class=\"token function\">getSystemDate</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenReturn</span><span class=\"token punctuation\">(</span>systemDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loginCampaignService<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getAmt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>ポリモーフィズム</h2>\n<p>今度はアイテムの説明を表示できるようにしたいという要件が出てきたとします。ItemのインターフェースにshowDescriptionというメソッドを定義して、実装クラスが実装するようにします。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Item</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">getAmt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 追加</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">showDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>GoldとTicketでそれぞれ実装します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Setter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Gold</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"各コンテンツを進めるのに必要なアイテムです。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Setter</span>\n<span class=\"token annotation punctuation\">@AllArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Ticket</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ガチャを1回回すことができるチケットです\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>正しく説明文が出力されるか確認してみます。テストケースを以下のように修正してみます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test_getTicket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Date</span> userLoginDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDateFromStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20220701\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Date</span> systemDate <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDateFromStr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"20220922\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Item</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ユーザー取得の挙動をモックする</span>\n    <span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDao<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token function\">anyInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenReturn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上条当麻\"</span><span class=\"token punctuation\">,</span>userLoginDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// システム日付取得(staticメソッド)の挙動をモックする</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MockedStatic</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">></span></span> mock <span class=\"token operator\">=</span> <span class=\"token function\">mockStatic</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        mock<span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemUtil</span><span class=\"token operator\">::</span><span class=\"token function\">getSystemDate</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">thenReturn</span><span class=\"token punctuation\">(</span>systemDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        result <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loginCampaignService<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Item型に対して実行してる</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">showDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getAmt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>実行時はインスタンスが動くので「ガチャを1回回すことができるチケットです」とログ出力されています。</p>\n<h2>クラス</h2>\n<p>現在はお帰りなさいログインキャンペーンをやってますが、３周年ログインキャンペーンを行いたいということになりました。</p>\n<p>ログインした人全員にGold3000をプレゼントするというキャンペーンです。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LoginAnniversaryCampaignService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Item</span> <span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>また、全てのログインキャンペーンに対して、報酬獲得後にサーバーに通信する処理を追加する予定になりました。</p>\n<p>全てのログインキャンペーンサービスクラスに対して処理を追加するのは大変なので、基底クラスを作って共通処理をまとめてしまいます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginCampaign</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// それぞれ実装クラスのロジックで報酬を取得する</span>\n        <span class=\"token class-name\">Item</span> item <span class=\"token operator\">=</span> <span class=\"token function\">getRewardProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 共通の処理を行う</span>\n        <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">getProcessName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"が完了しました。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getRewardProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">abstract</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getProcessName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>子クラスでは2つの処理を実装する必要があります</p>\n<p>サービスクラスの実装クラスは、LoginCampaignクラスを継承して作成します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginAnniversaryCampaignServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LoginCampaign</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">LoginAnniversaryCampaignService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 報酬を取得する</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getRewardProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getProcessName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"3周年記念ログインキャンペーン\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>3周年記念ログインキャンペーンは3000ゴールド返すだけなのでシンプルです</p>\n<p>次に、既存のLoginCampaignServiceImplを修正します</p>\n<p>このクラスで大事なのは、未ログイン日数に応じて取得できるItemが変わるという所です。以下のように修正してみました。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginCampaignServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LoginCampaign</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">LoginCampaignService</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserContext</span> userContext<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserDao</span> userDao<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 報酬を取得する</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/*</span>\n<span class=\"token comment\">        // ユーザーの前回ログイン日付を取得する</span>\n<span class=\"token comment\">        Date lastLogin = this.getLastLoginDate();</span>\n<span class=\"token comment\">        // ログイン報酬を取得する</span>\n<span class=\"token comment\">        Item gold = this.getReward(lastLogin);</span>\n<span class=\"token comment\">        // ログイン報酬を返す</span>\n<span class=\"token comment\">        return gold;</span>\n<span class=\"token comment\">         */</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> <span class=\"token function\">getLastLoginDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ユーザーIDを取得する</span>\n        <span class=\"token keyword\">int</span> userId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userContext<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// ユーザー情報を取得する</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>userDao<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// ログイン日付を取得する</span>\n        <span class=\"token class-name\">Date</span> lastLoginDate <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getLastLoginDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> lastLoginDate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*</span>\n<span class=\"token comment\">    private Item getReward(Date lastLogin){</span>\n<span class=\"token comment\">        // 最終ログインからの経過日数を取得する</span>\n<span class=\"token comment\">        int elapsedDays = this.getElapsedDays(lastLogin);</span>\n<span class=\"token comment\"></span>\n<span class=\"token comment\">        Item item = null;</span>\n<span class=\"token comment\">        if(elapsedDays > 60){</span>\n<span class=\"token comment\">            item = new Ticket(\"ガチャチケット\",3);</span>\n<span class=\"token comment\">        }</span>\n<span class=\"token comment\">        // 30日以上前の場合は300ゴールド</span>\n<span class=\"token comment\">        else if(elapsedDays > 30){</span>\n<span class=\"token comment\">            item = new Gold(\"ゴールド\",300);</span>\n<span class=\"token comment\">            // 14日以上前の場合は200ゴールド</span>\n<span class=\"token comment\">        } else if(elapsedDays > 14){</span>\n<span class=\"token comment\">            item = new Gold(\"ゴールド\",200);</span>\n<span class=\"token comment\">            // 7日以上前の場合は100ゴールド</span>\n<span class=\"token comment\">        } else if(elapsedDays > 7){</span>\n<span class=\"token comment\">            item = new Gold(\"ゴールド\",100);</span>\n<span class=\"token comment\">            // それ以外は50ゴールド</span>\n<span class=\"token comment\">        } else {</span>\n<span class=\"token comment\">            item = new Gold(\"ゴールド\",50);</span>\n<span class=\"token comment\">        }</span>\n<span class=\"token comment\">        return item;</span>\n<span class=\"token comment\">    }</span>\n<span class=\"token comment\">     */</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getElapsedDays</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Date</span> lastLogin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// システム日付を取得する</span>\n        <span class=\"token class-name\">Date</span> systemDate <span class=\"token operator\">=</span> <span class=\"token class-name\">SystemUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystemDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 最終ログインからの経過日数を取得する</span>\n        <span class=\"token keyword\">int</span> elapsedDays <span class=\"token operator\">=</span> <span class=\"token class-name\">DemoDateUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDiff</span><span class=\"token punctuation\">(</span>lastLogin<span class=\"token punctuation\">,</span>systemDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> elapsedDays<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Item</span> <span class=\"token function\">getRewardProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// 最終ログイン日付を取得する</span>\n        <span class=\"token class-name\">Date</span> lastLogin <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLastLoginDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 最終ログインからの経過日数を取得する</span>\n        <span class=\"token keyword\">int</span> elapsedDays <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getElapsedDays</span><span class=\"token punctuation\">(</span>lastLogin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Item</span> item <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ticket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ガチャチケット\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 30日以上前の場合は300ゴールド</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 14日以上前の場合は200ゴールド</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 7日以上前の場合は100ゴールド</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>elapsedDays <span class=\"token operator\">></span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// それ以外は50ゴールド</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gold</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ゴールド\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getProcessName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"お帰りなさいログインキャンペーン\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>テストを実行して問題ないことを確認しておきます。またgetProcessNameで指定した名称がログ出力されていることも確認します。</p>\n<p>これはテンプレートメソッドがうまく実行されていることも確認できます。</p>\n<p><img src=\"/3494/1.png\" alt=\"画像\"></p>\n<h2>テストの作成</h2>\n<p>LoginAnniversaryCampaignServiceImplのテストコードを作成して終わりにします。このクラスは何のロジックもなく報酬を返しているので簡単なテストと出力ログの確認のみです。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SpringBootTest</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginAnniversaryCampaignServiceImplTest</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test_get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">LoginAnniversaryCampaignServiceImpl</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginAnniversaryCampaignServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Item</span> item <span class=\"token operator\">=</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">getLoginReward</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">getAmt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p><img src=\"/3494/2.png\" alt=\"画像\"></p>\n<p>今後ログインキャンペーンが追加されても、割と手順化できています。また機能が追加されるような場合も柔軟に対応ができることでしょう。</p>\n<p>本を参考に考えてみましたが、本はもっと丁寧な解説があり参考になる箇所も多かったです</p>","slug":"p3494"},"__N_SSG":true}