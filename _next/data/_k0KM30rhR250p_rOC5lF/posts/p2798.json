{"pageProps":{"frontMatter":{"title":"SpringSecurity | ログイン済の場合はログイン画面から別の画面にリダイレクトさせる","date":"2022.06.06","description":"SpringSecurity | ログイン済の場合はログイン画面から別の画面にリダイレクトさせる","categories":["Spring"]},"content":"<p>ログイン済のユーザーがログイン画面(“/login”)を表示すると、再度ログインが可能な状態になります今回はログイン済のユーザーについては”/home”にリダイレクトさせるような実装を行ってみます</p>\n<p>ここに書いてあるのは、あくまでサンプルです</p>\n<p>関連記事も合わせて確認していただければと思います</p>\n<p><a href=\"/posts/p2691\">リンク</a></p>\n<p><a href=\"/posts/p2727\">リンク</a></p>\n<p><a href=\"/posts/p2761\">リンク</a></p>\n<p>また今回のコードは以下のgithubにあげています</p>\n<p>https://github.com/jirentaicho/laravel-new-SecurityConfiguration</p>\n<h2>独自のフィルターを作成する</h2>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedirectLoginUserFilter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OncePerRequestFilter</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">TARGET_PATH</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> filterChain<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RedirectLoginUserFilterのdoFilterが呼ばれました\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//　認証済でない場合は処理を抜ける</span>\n        <span class=\"token class-name\">Authentication</span> authentication <span class=\"token operator\">=</span> <span class=\"token class-name\">SecurityContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>authentication <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">AntPathRequestMatcher</span> antPathRequestMatcher <span class=\"token operator\">=</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">AntPathRequestMatcher</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TARGET_PATH</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// \"/login\"かつGETでない場合は処理を抜ける</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>antPathRequestMatcher<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// リダイレクトする</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>OncePerRequestFilterを継承してFilterとして機能するようにしています\n<ul>\n<li>この場合doFilterInternalの実装が必要になります</li>\n</ul>\n</li>\n<li>認証オブジェクトを取得して、取得できなければ未ログインとして判定します\n<ul>\n<li>SecurityContextHolder.getContext().getAuthentication()で認証オブジェクトを取得します</li>\n</ul>\n</li>\n<li>AntPathRequestMatcherを使ってリクエストの情報をチェックします\n<ul>\n<li>/loginでGETの場合にリダイレクトさせるので、それ以外は処理を抜けます</li>\n</ul>\n</li>\n<li>ログイン済で”/login”にGETでアクセスした場合、response.sendRedirectで”/home”にリダイレクトさせます</li>\n</ul>\n<p>次に独自に作成したFilterをHttpSecurityにて設定します</p>\n<h2>HttpSecurityの設定</h2>\n<p>コードは関連記事のWebSecurityConfigurerAdapterが非推奨になってたを利用しています</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">headers</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        header<span class=\"token punctuation\">.</span><span class=\"token function\">frameOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeHttpRequests</span><span class=\"token punctuation\">(</span>authorize <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        authorize<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/h2-console/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span>form <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        form<span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 追加</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">addFilterAfter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RedirectLoginUserFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">UsernamePasswordAuthenticationFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>addFilterでUsernamePasswordAuthenticationFilterの後にRedirectLoginUserFilterを登録します</li>\n<li>UsernamePasswordAuthenticationFilterは関連記事の</li>\n</ul>\n<p>これでログイン後に”/login”にアクセスしても”/home”にリダイレクトされています</p>\n<p><img src=\"/2798/1.png\" alt=\"画像\"></p>\n<p>SecurityFilterChainにも登録されていることがわかります</p>\n<p><img src=\"/2798/2.png\" alt=\"画像\"></p>","slug":"p2798"},"__N_SSG":true}