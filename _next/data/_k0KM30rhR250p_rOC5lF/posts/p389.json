{"pageProps":{"frontMatter":{"title":"kubernetesの初心者トレーニング | サービス偏","date":"2021.12.06","description":"kubernetesの初心者トレーニング | サービス偏","categories":["Kubernetes"]},"content":"<p>参考</p>\n<p>https://kubernetes.io/ja/docs/concepts/services-networking/connect-applications-service/</p>\n<p>参考サイトの内容を参考にしてkubernetesのトレーニングします。</p>\n<p>・今回の参考サイトではnginxサーバーを作成する。この時repicasを2として2つのPodが起動する。この時それぞれのPodがそれぞれのIPアドレスを保持している</p>\n<p>・次にサービスを作成する。サービスではclusterIPアドレスが割り当てられ、このIPアドレスへ通信を行うことでPodに通信できます。そしてこの時にPodには自動的に負荷分散される（Podが２つあるので、アクセスがどっちかに分散される）</p>\n<p>・次にbusyboxを利用してnslookupを行います。</p>\n<p>・次に、少し省略してNodePortを利用して外部への公開を試みます。</p>\n<p>・最後にロードバランサを利用します。</p>\n<p>それではやってみます</p>\n<h2>deploymentの作成</h2>\n<p>参考サイトの内容でyamlファイルを作成したら、デプロイします。</p>\n<p>しばらくするとPodが作成されます。状況については以下のコマンドで確認できます</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl get pod\r\nNAME                        READY   STATUS              RESTARTS   AGE\r\nmy-nginx-5b56ccd65f-nv2sx   0/1     ContainerCreating   0          2m29s\r\nmy-nginx-5b56ccd65f-xqkrm   0/1     ContainerCreating   0          2m29s\r\nkubectl describe pod my-nginx-5b56ccd65f-nv2sx\r\nName:           my-nginx-5b56ccd65f-nv2sx\r\nNamespace:      default\r\nPriority:       0\r\nNode:           docker-desktop/192.168.65.4\r\nStart Time:     Mon, 06 Dec 2021 15:38:54 +0900\r\nLabels:         pod-template-hash=5b56ccd65f\r\n                run=my-nginx\r\nAnnotations:    &#x26;lt;none&#x26;gt;\r\nStatus:         Pending\r\nIP:             \r\nIPs:            &#x26;lt;none&#x26;gt;\r\nControlled By:  ReplicaSet/my-nginx-5b56ccd65f\r\nContainers:\r\n  my-nginx:\r\n    Container ID:   \r\n    Image:          nginx\r\n    Image ID:       \r\n    Port:           80/TCP\r\n    Host Port:      0/TCP\r\n    State:          Waiting\r\n      Reason:       ContainerCreating\r\n    Ready:          False\r\n    Restart Count:  0\r\n    Environment:    &#x26;lt;none&#x26;gt;\r\n    Mounts:\r\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-62bfr (ro)\r\nConditions:\r\n  Type              Status\r\n  Initialized       True \r\n  Ready             False \r\n  ContainersReady   False \r\n  PodScheduled      True \r\nVolumes:\r\n  kube-api-access-62bfr:\r\n    Type:                    Projected (a volume that contains injected data from multiple sources)\r\n    TokenExpirationSeconds:  3607\r\n    ConfigMapName:           kube-root-ca.crt\r\n    ConfigMapOptional:       &#x26;lt;nil&#x26;gt;\r\n    DownwardAPI:             true\r\nQoS Class:                   BestEffort\r\nNode-Selectors:              &#x26;lt;none&#x26;gt;\r\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\r\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\r\nEvents:\r\n  Type    Reason     Age    From               Message\r\n  ----    ------     ----   ----               -------\r\n  Normal  Scheduled  3m17s  default-scheduler  Successfully assigned default/my-nginx-5b56ccd65f-nv2sx to docker-desktop\r\n  Normal  Pulling    3m17s  kubelet            Pulling image &#x26;quot;nginx&#x26;quot;</code></pre></div>\n<p>imageのpullが長いです。</p>\n<p>Pod状態を確認します</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl get pods\r\nNAME                        READY   STATUS    RESTARTS   AGE\r\nmy-nginx-5b56ccd65f-nv2sx   1/1     Running   0          99m\r\nmy-nginx-5b56ccd65f-xqkrm   1/1     Running   0          99m</code></pre></div>\n<h2>serviceの作成</h2>\n<p>参考サイトと同じ内容でyamlファイルを作成したらデプロイします</p>\n<p>サービスの状態を確認する</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl get service\r\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE\r\nkubernetes   ClusterIP   10.96.0.1      &#x26;lt;none&#x26;gt;        443/TCP        17d\r\nmy-nginx     ClusterIP   10.98.160.64   &#x26;lt;none&#x26;gt;        80/TCP         78m</code></pre></div>\n<p>spec.selector属性にはServiceのターゲットとしたいPodが持つラベルを設定する。</p>\n<h2>busyboxでnslookupする</h2>\n<p>以下のコマンドを入力します</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl run curl --image=radial/busyboxplus:curl -i --tty</code></pre></div>\n<p>これでbusyboxに入れます。これは一時的にクラスタ内にbusyboxを設けてサービスを経由してPodにアクセスできるか確認します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\"> root@curl:/ ]$ nslookup my-nginx\r\nServer:    10.96.0.10\r\nAddress 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local\r\n\r\nName:      my-nginx\r\nAddress 1: 10.98.160.64 my-nginx.default.svc.cluster.local</code></pre></div>\n<p>nslookupはドメイン名からIPアドレスを調べるコマンドです。</p>\n<p>curlコマンドも試してみます。clusterIPを指定してService→Podとアクセスできるか確認します</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">[ root@curl:/ ]$ curl 10.98.160.64\r\n&#x26;lt;!DOCTYPE html&#x26;gt;\r\n&#x26;lt;html&#x26;gt;\r\n&#x26;lt;head&#x26;gt;\r\n&#x26;lt;title&#x26;gt;Welcome to nginx!&#x26;lt;/title&#x26;gt;\r\n&#x26;lt;style&#x26;gt;\r\nhtml { color-scheme: light dark; }\r\nbody { width: 35em; margin: 0 auto;\r\nfont-family: Tahoma, Verdana, Arial, sans-serif; }\r\n&#x26;lt;/style&#x26;gt;\r\n&#x26;lt;/head&#x26;gt;\r\n&#x26;lt;body&#x26;gt;\r\n&#x26;lt;h1&#x26;gt;Welcome to nginx!&#x26;lt;/h1&#x26;gt;\r\n&#x26;lt;p&#x26;gt;If you see this page, the nginx web server is successfully installed and\r\nworking. Further configuration is required.&#x26;lt;/p&#x26;gt;\r\n\r\n&#x26;lt;p&#x26;gt;For online documentation and support please refer to\r\n&#x26;lt;a href=&#x26;quot;http://nginx.org/&#x26;quot;&#x26;gt;nginx.org&#x26;lt;/a&#x26;gt;.&#x26;lt;br/&#x26;gt;\r\nCommercial support is available at\r\n&#x26;lt;a href=&#x26;quot;http://nginx.com/&#x26;quot;&#x26;gt;nginx.com&#x26;lt;/a&#x26;gt;.&#x26;lt;/p&#x26;gt;\r\n\r\n&#x26;lt;p&#x26;gt;&#x26;lt;em&#x26;gt;Thank you for using nginx.&#x26;lt;/em&#x26;gt;&#x26;lt;/p&#x26;gt;\r\n&#x26;lt;/body&#x26;gt;\r\n&#x26;lt;/html&#x26;gt;</code></pre></div>\n<p>現状Podが残っているので必要ならば消してください</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl get pods\r\nNAME                        READY   STATUS    RESTARTS   AGE\r\ncurl                        1/1     Running   1          13m\r\nmy-nginx-5b56ccd65f-nv2sx   1/1     Running   0          114m\r\nmy-nginx-5b56ccd65f-xqkrm   1/1     Running   0          114m</code></pre></div>\n<p>もう一回入る</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl exec -it curl -- sh</code></pre></div>\n<p>消す</p>\n<h2>NodePortを利用する</h2>\n<p>現状はclusterIPをブラウザで入力してもアクセスできません。もちろんターミナルからもcurlはできません。</p>\n<p>先程はbusyboxがクラスタ内にありそこに入ってcurlを打ったのでアクセスできました。</p>\n<p>今回は、ホストマシンからもアクセスできるようにします。</p>\n<p>※安全という章を飛ばしています</p>\n<p>一旦サービスを削除します</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl delete -f run-my-nginx.yaml \r\ndeployment.apps &#x26;quot;my-nginx&#x26;quot; deleted</code></pre></div>\n<p>サービスの内容を参考サイトをもとに以下のように書き換えます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: my-nginx\r\n  labels:\r\n    run: my-nginx\r\nspec:\r\n  type: NodePort\r\n  ports:\r\n  - port: 8080\r\n    targetPort: 80\r\n    protocol: TCP\r\n  selector:\r\n    run: my-nginx</code></pre></div>\n<p>サービスからNodePortを確認します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl get service\r\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\r\nkubernetes   ClusterIP   10.96.0.1      &#x26;lt;none&#x26;gt;        443/TCP          18d\r\nmy-nginx     NodePort    10.98.92.166   &#x26;lt;none&#x26;gt;        8080:30681/TCP   5m41s</code></pre></div>\n<p>この場合はttp://localhost:30681/にアクセスするとnginxのページが表示されます。</p>\n<p><img src=\"/389/1.png\" alt=\"画像\"></p>\n<h2>ロードバランサに変更する</h2>\n<p>参考</p>\n<p>https://kubernetes.io/ja/docs/tutorials/stateless-application/expose-external-ip-address/</p>\n<p>serviceを一旦消してから以下のコマンドを打ちます</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">expose deployment my-nginx --type=LoadBalancer --name=my-service                                                \r\r\nservice/my-service exposed\r</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">kubectl get services my-service                                         \r\r\nNAME         TYPE           CLUSTER-IP       EXTERNAL-IP     PORT(S)        AGE\r\r\nmy-service   LoadBalancer   10.109.169.165   192.168.49.51   80:31252/TCP   11s\r</code></pre></div>\n<p>EXTERNAL-IPに値が入っています。(自分のホスト端末で行うとlocalhostになっています。今回はminikubeで試しています。</p>\n<p>192.168.49.51にアクセスします。</p>\n<p><img src=\"/389/2.png\" alt=\"画像\"></p>","slug":"p389"},"__N_SSG":true}