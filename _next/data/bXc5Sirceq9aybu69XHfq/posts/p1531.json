{"pageProps":{"frontMatter":{"title":"DDDプロジェクトで見るSpringのバリデーション","date":"2022.03.10","description":"DDDプロジェクトで見るSpringのバリデーション","categories":["Spring"]},"content":"<p>あんまりDDD関係ないですが、DDDプロジェクトでフォームバリデーションがどうなってるのかを見てみる企画です。</p>\n<p>関連記事</p>\n<p><a href=\"/posts/p1267\">リンク</a></p>\n<p>参考</p>\n<p>https://github.com/citerus/dddsample-core</p>\n<p>DDDのサンプルでどのようにエラーメッセージを出しているのか確認する。</p>\n<h2>画面</h2>\n<p>トラッキングIDから貨物の配送状況を検索できる</p>\n<p><img src=\"/1531/1.png\" alt=\"画像\"></p>\n<p>間違ったトラッキングIDや、入力不備がある場合はエラーメッセージが表示される</p>\n<p><img src=\"/1531/2.png\" alt=\"画像\"></p>\n<h2>バインド</h2>\n<p>thymeleafのth:object=を使ってフォームのバインディングを行っています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>object</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${trackCommand}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>table</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>tr</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                Enter your tracking id:\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>field</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*{trackingId}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idInput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Track!<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>tr</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${#fields.hasErrors('trackingId')}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>errors</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*{trackingId}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>tr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>table</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>form</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>この場合はtrackCommandが紐づいてます。→ よくXXXFormって名前で利用することが多い印象です。</p>\n<p>TrackCommand</p>\n<ul>\n<li>インターフェース層にある</li>\n<li>トラッキングIDのみ保持しています</li>\n<li>アノテーションを利用していない</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TrackCommand</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\">   * The tracking id.</span>\n<span class=\"token doc-comment comment\">   */</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> trackingId<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getTrackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> trackingId<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTrackingId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> trackingId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>trackingId <span class=\"token operator\">=</span> trackingId<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">ToStringBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">reflectionToString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MULTI_LINE_STYLE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p>検証を行うにはValidatorを実装したクラスが必要になり、そのクラスがTrackCommandValidator(インターフェース層)です。Validatorインターフェースは、supportsとvalidateメソッドの実装が必要になります。</p>\n<p>supports</p>\n<ul>\n<li>検証するクラス(引数)</li>\n<li>Spring設定ファイルの読み込み時にチェックされる</li>\n</ul>\n<p>validate</p>\n<ul>\n<li>検証するクラスのオブジェクト(引数)</li>\n<li>検証結果を保持しているErrorsインターフェース（BindingResultはErrorsを継承している)(引数)</li>\n<li>実際に行うバリデーショを実装する</li>\n</ul>\n<p>validateメソッドは以下のようにしてValidationUtilsを使うこともできる</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Errors</span> errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ValidationUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">rejectIfEmptyOrWhitespace</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">,</span> <span class=\"token string\">\"trackingId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"error.required\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>以下のようにしてTrackCommandValidatorを利用する</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackCommandValidator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> bindingResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>ちなみに現場至上主義の本ではUtilクラスを使わず、自分で決めたルールを実装しています。</p>\n<p>参考 https://github.com/miyabayt/spring-boot-doma2-sample</p>\n<ul>\n<li>テンプレートメソッドでvalidateメソッドから呼ばれています</li>\n<li>引数はジェネリクスを利用してキャストしている</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">@Override\n    protected void doValidate(StaffForm form, Errors errors) {\n\n        if (isNotEquals(form.getPassword(), form.getPasswordConfirm())) {\n            errors.rejectValue(\"password\", \"staffs.unmatchPassword\");\n            errors.rejectValue(\"passwordConfirm\", \"staffs.unmatchPassword\");\n        }\n    }\n</code></pre></div>\n<p>抽象クラス</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Object</span> target<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Errors</span> errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">boolean</span> hasErrors <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">hasErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasErrors <span class=\"token operator\">||</span> <span class=\"token function\">passThruBeanValidation</span><span class=\"token punctuation\">(</span>hasErrors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">doValidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span> target<span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RuntimeException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"validate error\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>DDDのサンプルでは、指定したトラッキングIDでCargoが取得できない時にrejectValueを使っています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">POST</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">TrackCommand</span> command<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> model<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">BindingResult</span> bindingResult \n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t \n                                                             <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackCommandValidator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> bindingResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">TrackingId</span> trackingId <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackingId</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">getTrackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Cargo</span> cargo <span class=\"token operator\">=</span> cargoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>trackingId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cargo <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Locale</span> locale <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestContextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLocale</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">HandlingEvent</span><span class=\"token punctuation\">></span></span> handlingEvents <span class=\"token operator\">=</span> handlingEventRepository<span class=\"token punctuation\">.</span><span class=\"token function\">lookupHandlingHistoryOfCargo</span><span class=\"token punctuation\">(</span>trackingId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinctEventsByCompletionTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            model<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cargo\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CargoTrackingViewAdapter</span><span class=\"token punctuation\">(</span>cargo<span class=\"token punctuation\">,</span> messageSource<span class=\"token punctuation\">,</span> locale<span class=\"token punctuation\">,</span> handlingEvents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            bindingResult<span class=\"token punctuation\">.</span><span class=\"token function\">rejectValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trackingId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cargo.unknown_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">getTrackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Unknown tracking id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"track\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>入力値のエラー結果を、そのまま取得エラーなどでも流用している</p>\n<h2>アノテーションを使った場合</h2>\n<p>@NotEmptyなどのアノテーションを利用したい場合TrackCommandクラスにhogeIdを設定してNotEmptyアノテーションを利用する</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\">   * The hogeId id.</span>\n<span class=\"token doc-comment comment\">   */</span>\n  <span class=\"token annotation punctuation\">@NotEmpty</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> hogeId<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getHogeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> hogeId<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setgetHogeId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> hogeId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hogeId <span class=\"token operator\">=</span> hogeId<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>コントローラーの引数のTrackCommandに@Vaildアノテーションを付けて、BindingResultの順序をTrackCommandのすぐ後に変更する</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">POST</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">TrackCommand</span> command<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">BindingResult</span> bindingResult<span class=\"token punctuation\">,</span>  \n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> model\n                                                             <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackCommandValidator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> bindingResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>画面にhogeIdの項目を追加しておく。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>object</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${trackCommand}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>table</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>tr</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                Enter your tracking id:\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>field</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*{trackingId}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idInput<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>field</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*{hogeId}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idHoge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Track!<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>tr</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>tr</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${#fields.hasErrors('trackingId')}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>errors</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*{trackingId}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>p</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${#fields.hasErrors('hogeId')}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>errors</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*{hogeId}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>td</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>tr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>table</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>form</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>hogeIdについては自動的にバリデーション処理が実行されています。</p>\n<p><img src=\"/1531/3.png\" alt=\"画像\"></p>\n<p>ちなみにコントローラーの引数の順序を間違えると400エラーになります。</p>\n<p><img src=\"/1531/4.png\" alt=\"画像\"></p>\n<h2>WebDataBinderを利用する場合</h2>\n<p>WebDataBinderを使って事前にvalidateメソッドを呼び出してみます。</p>\n<h4>コントローラーの修正</h4>\n<ul>\n<li>@InitBinderを利用する</li>\n<li>TrackCommandValidatorをAutowiredする</li>\n<li>引数に@Validatedを付与する</li>\n<li>引数の順序を変更する</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/track\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CargoTrackingController</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>省略\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">TrackCommandValidator</span> trackCommandValidator<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@InitBinder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trackCommand\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validatorBinder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebDataBinder</span> binder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        binder<span class=\"token punctuation\">.</span><span class=\"token function\">addValidators</span><span class=\"token punctuation\">(</span>trackCommandValidator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>省略\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>method <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">POST</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">String</span> <span class=\"token function\">onSubmit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"token annotation punctuation\">@Validated</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">TrackCommand</span> command<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">BindingResult</span> bindingResult<span class=\"token punctuation\">,</span>\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> model\t\t \n                                                             <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t\n        <span class=\"token comment\">// new TrackCommandValidator().validate(command, bindingResult);</span>\n    \t<span class=\"token comment\">// validateが既に呼ばれてbindingResultにはエラー結果が格納済である</span>\n    \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bindingResult<span class=\"token punctuation\">.</span><span class=\"token function\">hasErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"エラーあり\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bindingResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">TrackingId</span> trackingId <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackingId</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">getTrackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">Cargo</span> cargo <span class=\"token operator\">=</span> cargoRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>trackingId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cargo <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Locale</span> locale <span class=\"token operator\">=</span> <span class=\"token class-name\">RequestContextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLocale</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">HandlingEvent</span><span class=\"token punctuation\">></span></span> handlingEvents <span class=\"token operator\">=</span> handlingEventRepository<span class=\"token punctuation\">.</span><span class=\"token function\">lookupHandlingHistoryOfCargo</span><span class=\"token punctuation\">(</span>trackingId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinctEventsByCompletionTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            model<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cargo\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CargoTrackingViewAdapter</span><span class=\"token punctuation\">(</span>cargo<span class=\"token punctuation\">,</span> messageSource<span class=\"token punctuation\">,</span> locale<span class=\"token punctuation\">,</span> handlingEvents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            bindingResult<span class=\"token punctuation\">.</span><span class=\"token function\">rejectValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"trackingId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cargo.unknown_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">getTrackingId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Unknown tracking id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"track\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>省略\n</code></pre></div>\n<h3>Validatorクラスの修正</h3>\n<p>特に必要がないが、hogeIdの必須化と独自メッセージの設定を行っておく※@NotEmptyアノテーションを外しておきます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Errors</span> errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ValidationUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">rejectIfEmptyOrWhitespace</span><span class=\"token punctuation\">(</span>errors<span class=\"token punctuation\">,</span> <span class=\"token string\">\"trackingId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"error.required\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Required\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//　追加</span>\n    <span class=\"token class-name\">TrackCommand</span> tc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TrackCommand</span><span class=\"token punctuation\">)</span>object<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span>tc<span class=\"token punctuation\">.</span><span class=\"token function\">getHogeId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \terrors<span class=\"token punctuation\">.</span><span class=\"token function\">rejectValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hogeId\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"error.required\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hogeIdが入力されていません\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>注意点</p>\n<ul>\n<li>rejectValueの引数のfiledはtemplateのth:fieldと一致していること</li>\n<li>エラーコードは存在するものを指定する</li>\n</ul>\n<h2>画面の確認</h2>\n<p>何も入力せずにTrack!ボタンの呼び出しを行い、以下を確認</p>\n<ul>\n<li>自動的にValidateメソッドが呼ばれていること</li>\n<li>hogeIdについては独自のメッセージが表示されていること</li>\n<li>ログにエラーありが出力されていること</li>\n</ul>\n<p><img src=\"/1531/5.png\" alt=\"画像\"></p>\n<p>ログ</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">エラーあり\norg.springframework.validation.BeanPropertyBindingResult: 2 errors\nField error in object &#x26;#39;trackCommand&#x26;#39; on field &#x26;#39;trackingId&#x26;#39;: rejected value []; codes [error.required.trackCommand.trackingId,error.required.trackingId,error.required.java.lang.String,error.required]; arguments []; default message [Required]\nField error in object &#x26;#39;trackCommand&#x26;#39; on field &#x26;#39;hogeId&#x26;#39;: rejected value [null]; codes [error.required.trackCommand.hogeId,error.required.hogeId,error.required.java.lang.String,error.required]; arguments []; default message [hogeIdが入力されていません]\n</code></pre></div>\n<p>WebDataBinderを利用することでコントローラーより前に入力チェックが行われるので、コードがよりスッキリしたと思います。</p>\n<p>もちろんWebDataBinderの設定がわかっていること前提ですが</p>","slug":"p1531"},"__N_SSG":true}