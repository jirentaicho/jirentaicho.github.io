{"pageProps":{"frontMatter":{"title":"Spring | 環境ごとに設定を切り替える | プロファイル","date":"2022.08.06","description":"Spring | 環境ごとに設定を切り替える | プロファイル","categories":["Spring"]},"content":"<p>開発環境と本番環境では設定値を変更したい時などに、Springでは下記のような命名規則で設定情報を別ファイルに切り出し管理が可能になる</p>\n<ul>\n<li>application.yaml\n<ul>\n<li>共通設定</li>\n</ul>\n</li>\n<li>application-development.yaml\n<ul>\n<li>開発環境設定</li>\n</ul>\n</li>\n<li>application-staging.yaml\n<ul>\n<li>検証環境設定</li>\n</ul>\n</li>\n<li>application-production.yaml\n<ul>\n<li>本番環境設定</li>\n</ul>\n</li>\n</ul>\n<h2>起動時プロファイル上書き</h2>\n<p>以下の設定ファイルを用意します。</p>\n<ul>\n<li>application.yaml</li>\n<li>application-development.yaml</li>\n<li>application-production.yaml</li>\n</ul>\n<p>今回は環境に応じて表示するメッセージを変更させるような処理を記載します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${message}\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/sample\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n\n</code></pre></div>\n<h2>application.yaml</h2>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">spring:\n  profiles:\n    group:\n      development:\n        - development\n      production:\n        - production\nmessage: default-message\n</code></pre></div>\n<ul>\n<li>development\n<ul>\n<li>次のコマンドで起動したときに読み込まれる設定</li>\n<li>java -jar “-Dspring.profiles.active=development” xxx.jarapplication-development.yaml\n<ul>\n<li>application-development.yaml</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>production\n<ul>\n<li>次のコマンドで起動したときに読み込まれる設定</li>\n<li>java -jar “-Dspring.profiles.active=production” xxx.jarapplication-production.yaml\n<ul>\n<li>application-production.yaml</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>application-development.yamlとapplication-production.yamlではそれぞれmessageを定義しておきます。</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\">message<span class=\"token operator\">:</span> development<span class=\"token operator\">-</span>message\n</code></pre></div>\n<p>これで実行コマンドによって読み込む設定ファイルが変更されます。</p>\n<h1>以下の内容はダメでした。</h1>\n<h1>間違って掲載してたので以下の内容は参考にしないでください。</h1>\n<h3>IntelliJ</h3>\n<p>起動時にプロファイルを上書きして使う設定ファイルを変更してサーバー起動するには、いろいろやり方があるのですが、今回はIntelliJを利用して設定してみます。</p>\n<p>ちなみにIntelliJのバージョンは2021.2.1です</p>\n<p><img src=\"/3258/1.png\" alt=\"画像\"></p>\n<p>メニューのRun > Edit Configurations.. > Modify options > Add VM options</p>\n<p><img src=\"/3258/2.png\" alt=\"画像\"></p>\n<p>VM options:に「-Dspring.profiles.active=development」を入力します</p>\n<h3>application.yamlの修正</h3>\n<p>次にapplication.yamlを修正してdevelopmentを含んでいる設定を記載します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">spring:\n  profiles:\n    include:\n      - development\n</code></pre></div>\n<h3>起動</h3>\n<p>VM optionsを設定したやつを選択して実行します</p>\n<p><img src=\"/3258/3.png\" alt=\"画像\"></p>\n<p>development環境の設定が反映されてポートが8081で起動しています</p>\n<p><img src=\"/3258/4.png\" alt=\"画像\"></p>","slug":"p3258"},"__N_SSG":true}