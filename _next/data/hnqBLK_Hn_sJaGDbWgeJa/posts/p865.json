{"pageProps":{"frontMatter":{"title":"LaravelのRequest::validateとMacroable","date":"2022.01.11","description":"LaravelのRequest::validateとMacroable","categories":["Laravel"]},"content":"<p>参考サイト：中国語（$request->validate()源码解读）</p>\n<p>私は英語はあまりできないですが中国語は得意なので、中国語のサイトで調べることも多いです。というわけでここで書いてある内容は参考サイトにも書いてあるので、個人的なメモとして残しておきます。</p>\n<h2>validateメソッドとは</h2>\n<p>そしてLaravelのソースを見ていてなんだこりゃってのがありました。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\">@method <span class=\"token keyword type-declaration\">array</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>ところでこのvalidateはどこに定義されてるのか？ってお話で、この答えがtraitのMacroableになります。</p>\n<p>※Requestクラスでuseしています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Dynamically handle calls to the class.\n     *\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">string</span></span>  <span class=\"token parameter\">$method</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$parameters</span>\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">mixed</span></span>\n     *\n     * <span class=\"token keyword\">@throws</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>BadMethodCallException</span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$method</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token scope\"><span class=\"token keyword\">static</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">hasMacro</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$method</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BadMethodCallException</span><span class=\"token punctuation\">(</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'Method %s::%s does not exist.'</span><span class=\"token punctuation\">,</span> <span class=\"token scope\"><span class=\"token keyword\">static</span><span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$method</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$macro</span> <span class=\"token operator\">=</span> <span class=\"token scope\"><span class=\"token keyword\">static</span><span class=\"token punctuation\">::</span></span><span class=\"token variable\">$macros</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$method</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$macro</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Closure</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$macro</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$macro</span><span class=\"token operator\">-></span><span class=\"token function\">bindTo</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token punctuation\">,</span> <span class=\"token scope\"><span class=\"token keyword\">static</span><span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$macro</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ここで$macro = static::$macros[$method];という記載がありますが、この$macros配列はどうなっているのでしょうか？</p>\n<p>空っぽの配列の定義はあるのですが、これがどこから来ているのか</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">trait</span> <span class=\"token class-name-definition class-name\">Macroable</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token doc-comment comment\">/**\n     * The registered string macros.\n     *\n     * <span class=\"token keyword\">@var</span> <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>\n     */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">static</span> <span class=\"token variable\">$macros</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>すぐ下に定義されているメソッドを介して、配列に値が登録されることは明白です</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Register a custom macro.\n     *\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">string</span></span>  <span class=\"token parameter\">$name</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">object</span><span class=\"token punctuation\">|</span>callable</span>  <span class=\"token parameter\">$macro</span>\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">void</span></span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">macro</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$macro</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token scope\"><span class=\"token keyword\">static</span><span class=\"token punctuation\">::</span></span><span class=\"token variable\">$macros</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$macro</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>FoundationServiceProvider</h2>\n<p>Foundationというのは土台とか基礎とかそういった意味があります。このサービスプロバイダーが鍵を握っています。</p>\n<p>config/app.phpを見ると、このクラスの登録が行われています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token scope\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Providers<span class=\"token punctuation\">\\</span>FoundationServiceProvider<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>そしてこのクラスのregisterメソッドに答えが書いてあります。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Register the \"validate\" macro on the request.\n     *\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token keyword\">void</span></span>\n     *\n     * <span class=\"token keyword\">@throws</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Validation<span class=\"token punctuation\">\\</span>ValidationException</span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">registerRequestValidation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token scope\">Request<span class=\"token punctuation\">::</span></span><span class=\"token function\">macro</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'validate'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">validator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token scope\">Request<span class=\"token punctuation\">::</span></span><span class=\"token function\">macro</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'validateWithBag'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$errorBag</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ValidationException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token variable\">$e</span><span class=\"token operator\">-></span><span class=\"token property\">errorBag</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$errorBag</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">throw</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>先ほどの配列への登録メソッドを呼び出しています。validateというkeyにValidatorのvalidateメソッドを登録しています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Create a new Validator instance.\n     *\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$data</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$rules</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$messages</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$customAttributes</span>\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Contracts<span class=\"token punctuation\">\\</span>Validation<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">|</span><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Contracts<span class=\"token punctuation\">\\</span>Validation<span class=\"token punctuation\">\\</span>Factory</span>\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">validator</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$rules</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$messages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$customAttributes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$factory</span> <span class=\"token operator\">=</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token scope\">ValidationFactory<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">func_num_args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$factory</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$factory</span><span class=\"token operator\">-></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$messages</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$customAttributes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>しかしこのValidatorを追ってみるとValidationFactory::classというのはインターフェースであるので、どこで実装クラスの紐づけが行われているのか？</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&#x3C;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Contracts<span class=\"token punctuation\">\\</span>Validation</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name-definition class-name\">Factory</span>\n<span class=\"token punctuation\">{</span></span>\n</code></pre></div>\n<p>vendor\\laravel\\framework\\src\\Illuminate\\Foundation\\Application.phpに関係が記載されています。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token string single-quoted-string\">'validator'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Validation<span class=\"token punctuation\">\\</span>Factory</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Contracts<span class=\"token punctuation\">\\</span>Validation<span class=\"token punctuation\">\\</span>Factory</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n<p>つまり上記に従えばIlluminate\\Validation\\Factory.phpが該当します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n     * Create a new Validator instance.\n     *\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$data</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$rules</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$messages</span>\n     * <span class=\"token keyword\">@param</span>  <span class=\"token class-name\"><span class=\"token keyword\">array</span></span>  <span class=\"token parameter\">$customAttributes</span>\n     * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>Illuminate<span class=\"token punctuation\">\\</span>Validation<span class=\"token punctuation\">\\</span>Validator</span>\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$messages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$customAttributes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$validator</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n            <span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$rules</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$messages</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$customAttributes</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// The presence verifier is responsible for checking the unique and exists data</span>\n        <span class=\"token comment\">// for the validator. It is behind an interface so that multiple versions of</span>\n        <span class=\"token comment\">// it may be written besides database. We'll inject it into the validator.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">verifier</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$validator</span><span class=\"token operator\">-></span><span class=\"token function\">setPresenceVerifier</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">verifier</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Next we'll set the IoC container instance of the validator, which is used to</span>\n        <span class=\"token comment\">// resolve out class based validator extensions. If it is not set then these</span>\n        <span class=\"token comment\">// types of extensions will not be possible on these validation instances.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">container</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$validator</span><span class=\"token operator\">-></span><span class=\"token function\">setContainer</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">container</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$validator</span><span class=\"token operator\">-></span><span class=\"token property\">excludeUnvalidatedArrayKeys</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">excludeUnvalidatedArrayKeys</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">addExtensions</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$validator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$validator</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<p>これ普通にやってるとは自分では紐解けないです。。それでも今回は@method array validate(array $rules, …$params)ってなんやねん？って疑問について少しは解消できたかと思います。</p>","slug":"p865"},"__N_SSG":true}