{"pageProps":{"frontMatter":{"title":"Spring Security | JWTトークンの検証を行う","date":"2022.08.18","description":"Spring Security | JWTトークンの検証を行う","categories":["Spring"]},"content":"<p>今回はログイン時に取得したJWTトークンを利用したログインを行います。</p>\n<p>発行されたトークンを保存するのにローカルストレージを利用します。</p>\n<h2>Filterの作成</h2>\n<p>OncePerRequestFilterを利用してリクエストの発生に対して、1回実行される処理を定義できますここでリクエストのヘッダーからTokenを取得して、適切なTokenかどうかを判断して、認証済としてあげます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWT</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>algorithms<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Algorithm</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DecodedJWT</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>authentication<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UsernamePasswordAuthenticationToken</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Authentication</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SecurityContextHolder</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OncePerRequestFilter</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FilterChain</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginFilter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OncePerRequestFilter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> filterChain<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// headersのkeyを指定して値(トークン)を取得する</span>\n        <span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X-AUTH-TOKEN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// tokenの検証と認証を行う</span>\n        <span class=\"token class-name\">DecodedJWT</span> decodedJWT <span class=\"token operator\">=</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"secret\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// usernameの取得</span>\n        <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> decodedJWT<span class=\"token punctuation\">.</span><span class=\"token function\">getClaim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// ログイン状態の設定</span>\n        <span class=\"token class-name\">SecurityContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UsernamePasswordAuthenticationToken</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>作成したFilterを追加します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">csrfTokenRepository</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CookieCsrfTokenRepository</span><span class=\"token punctuation\">.</span><span class=\"token function\">withHttpOnlyFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span>auth <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n        auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/get\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        auth<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/post\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configurationSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">corsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">addFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JwtAuthenticationFilter</span><span class=\"token punctuation\">(</span><span class=\"token function\">authenticationManager</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">getSharedObject</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticationConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// JwtAuthenticationFilterの後にフィルターを追加する</span>\n    http<span class=\"token punctuation\">.</span><span class=\"token function\">addFilterAfter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">JwtAuthenticationFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>またCORSの設定でレスポンスヘッダーを公開する設定を行います</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">CorsConfigurationSource</span> <span class=\"token function\">corsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">CorsConfiguration</span> cors <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedOrigins</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:3000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedMethods</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedHeaders</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">setAllowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// X-AUTH-TOKENのレスポンスヘッダーを公開します → jsで取得できるようになる</span>\n    cors<span class=\"token punctuation\">.</span><span class=\"token function\">addExposedHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X-AUTH-TOKEN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    source<span class=\"token punctuation\">.</span><span class=\"token function\">registerCorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span>cors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> source<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h2>ヘッダーにトークンを付与する</h2>\n<p>トークンを保持する必要がありますが、簡単に値を保存できるローカルストレージを使います</p>\n<p>ログイン後に取得できるX-AUTH-TOKENの値をローカルストレージに保存します</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ログイン処理</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">dologin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> csrfToken <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">cookie</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"><span class=\"token group punctuation\">(?:</span><span class=\"token group punctuation\">(?:</span><span class=\"token anchor function\">^</span><span class=\"token alternation keyword\">|</span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">*</span>;<span class=\"token char-set class-name\">\\s</span><span class=\"token quantifier number\">*</span><span class=\"token group punctuation\">)</span>XSRF-TOKEN<span class=\"token char-set class-name\">\\s</span><span class=\"token quantifier number\">*</span><span class=\"token escape\">\\=</span><span class=\"token char-set class-name\">\\s</span><span class=\"token quantifier number\">*</span><span class=\"token group punctuation\">(</span><span class=\"token char-class\"><span class=\"token char-class-punctuation punctuation\">[</span><span class=\"token char-class-negation operator\">^</span>;<span class=\"token char-class-punctuation punctuation\">]</span></span><span class=\"token quantifier number\">*</span><span class=\"token group punctuation\">)</span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">*</span><span class=\"token anchor function\">$</span><span class=\"token group punctuation\">)</span><span class=\"token alternation keyword\">|</span><span class=\"token anchor function\">^</span><span class=\"token char-set class-name\">.</span><span class=\"token quantifier number\">*</span><span class=\"token anchor function\">$</span></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:8080/api/login'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">'include'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string-property property\">'X-XSRF-TOKEN'</span> <span class=\"token operator\">:</span> csrfToken\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span> <span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            <span class=\"token string-property property\">'username'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'misaka'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string-property property\">'password'</span><span class=\"token operator\">:</span> <span class=\"token string\">'mikoto'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ローカルストレージに保存する</span>\n        <span class=\"token dom variable\">localStorage</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'jwt-token'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Bearer '</span> <span class=\"token operator\">+</span> res<span class=\"token punctuation\">.</span><span class=\"token property-access\">headers</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'X-AUTH-TOKEN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これでログインをするとローカルストレージにトークンが保存されているのがわかります</p>\n<p><img src=\"/3448/1.png\" alt=\"画像\"></p>\n<p>この値を利用してトークンをヘッダーに付与してリクエストします</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\">function <span class=\"token function\">dopost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> csrfToken <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span><span class=\"token operator\">^</span><span class=\"token operator\">|</span><span class=\"token punctuation\">.</span>*<span class=\"token punctuation\">;</span>\\s<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">XSRF</span><span class=\"token operator\">-</span><span class=\"token constant\">TOKEN</span>\\s<span class=\"token operator\">*</span>\\<span class=\"token operator\">=</span>\\s<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">^</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>*$<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token operator\">^</span><span class=\"token punctuation\">.</span>*$<span class=\"token operator\">/</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>csrfToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>'http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token operator\">:</span><span class=\"token number\">8080</span><span class=\"token operator\">/</span>post'<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n        method<span class=\"token operator\">:</span><span class=\"token char\">'POST'</span><span class=\"token punctuation\">,</span>\n        credentials<span class=\"token operator\">:</span> 'include'<span class=\"token punctuation\">,</span>\n        headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            '<span class=\"token class-name\">X</span><span class=\"token operator\">-</span><span class=\"token constant\">XSRF</span><span class=\"token operator\">-</span><span class=\"token constant\">TOKEN</span>' <span class=\"token operator\">:</span> csrfToken<span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// jwt-tokenの値をローカルストレージから取得して付与する</span>\n            '<span class=\"token class-name\">X</span><span class=\"token operator\">-</span><span class=\"token constant\">AUTH</span><span class=\"token operator\">-</span><span class=\"token constant\">TOKEN</span>' <span class=\"token operator\">:</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>'jwt<span class=\"token operator\">-</span>token'<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">=</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">=</span><span class=\"token operator\">></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>これでjs側からヘッダーにX-AUTH-TOKENというkeyでトークンを付与してリクエストできるようになりました</p>\n<p><img src=\"/3448/2.png\" alt=\"画像\"></p>\n<p>正しくトークンの検証が行えればユーザー名の取得もできるようになっています</p>\n<h2>トークンの改変</h2>\n<p>試しにトークンの値を改変してリクエストを送ってみます</p>\n<p><img src=\"/3448/3.png\" alt=\"画像\"></p>\n<p><img src=\"/3448/4.png\" alt=\"画像\"></p>\n<p>サーバー側の問題としてエラーになっています。SpringでもJWTトークンのデコードエラーになっています</p>\n<p><img src=\"/3448/5.png\" alt=\"画像\"></p>\n<p>次にnullでも認証済になってしまうので修正します</p>\n<p><img src=\"/3448/6.png\" alt=\"画像\"></p>\n<p><img src=\"/3448/7.png\" alt=\"画像\"></p>\n<p>nullで送ってもPOSTが成功しているのでcookieにJSESSIONIDがあり、そもそも認証済として扱われているから</p>\n<p>フィルターを修正します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginFilter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">OncePerRequestFilter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doFilterInternal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FilterChain</span> filterChain<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X-AUTH-TOKEN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bearer \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//　認証情報を除去する</span>\n            <span class=\"token class-name\">SecurityContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">DecodedJWT</span> decodedJWT <span class=\"token operator\">=</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"secret\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> decodedJWT<span class=\"token punctuation\">.</span><span class=\"token function\">getClaim</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">asString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SecurityContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UsernamePasswordAuthenticationToken</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        filterChain<span class=\"token punctuation\">.</span><span class=\"token function\">doFilter</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>認証情報にnullを設定します</p>\n<p>これでトークンをnullにして送信すると一度ログインしても認証ユーザーとして扱われることはなくなりました</p>\n<p><img src=\"/3448/8.png\" alt=\"画像\"></p>\n<p>これでJWTトークンを利用したRESTAPIでのログイン処理ができるようになりました。</p>\n<p>最後にソースコードはGithubにアップロードしております</p>\n<p>https://github.com/jirentaicho/SpringSecurity5.7-jwt</p>\n<p>前回までの記事</p>\n<p><a href=\"/posts/p3398\">リンク</a></p>\n<p><a href=\"/posts/p3424\">リンク</a></p>\n<p><a href=\"/posts/p3434\">リンク</a></p>","slug":"p3448"},"__N_SSG":true}