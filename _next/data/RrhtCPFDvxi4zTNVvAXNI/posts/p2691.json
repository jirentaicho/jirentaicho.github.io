{"pageProps":{"frontMatter":{"title":"WebSecurityConfigurerAdapterが非推奨になってた","date":"2022.06.02","description":"WebSecurityConfigurerAdapterが非推奨になってた","categories":["Spring"]},"content":"<p>SpringBoot 2.7.0でプロジェクトを作ってSpringSecurityを使おうと、いつものようにWebSecurityConfigurerAdapterを継承しようとしたら非推奨という警告が出てました。</p>\n<p><img src=\"/2691/1.png\" alt=\"画像\"></p>\n<p>この際、SpringSecurityを初歩から学びなおすのと同時に新しい書き方で、インメモリ認証とJDBC認証を書いてみます。</p>\n<h2>HttpSecurityとインメモリ認証</h2>\n<p>新しい書き方で書くと以下のようになります</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpSecurity</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>userdetails<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>userdetails<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UserDetails</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PasswordEncoderFactories</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>provisioning<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InMemoryUserDetailsManager</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SecurityFilterChain</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfiguration</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// ログイン後は/homeに遷移させる</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">headers</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            header<span class=\"token punctuation\">.</span><span class=\"token function\">frameOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeHttpRequests</span><span class=\"token punctuation\">(</span>authorize <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            authorize<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/h2-console/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span>form <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            form<span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// misaka/mikotoでログインする</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">InMemoryUserDetailsManager</span> <span class=\"token function\">userDetailsService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">UserDetails</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token function\">withUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"misaka\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token class-name\">PasswordEncoderFactories</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">createDelegatingPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mikoto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">roles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"USER\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InMemoryUserDetailsManager</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>今まではWebSecurityConfigurerAdapterを継承して、configureをメソッドをオーバーライドすることでHttpSecurityなどを設定していました</li>\n<li>これからはコンポーネントとして設定するようにします</li>\n</ul>\n<h4>HttpSecurityの設定</h4>\n<ul>\n<li>BeanとしてSecurityFilterChainを登録するようにします</li>\n<li>HttpSecurityについては今まで通り設定できますが、最終的にはSecurityFilterChainを返すため、http.build()を返します。</li>\n</ul>\n<h4>インメモリ認証の設定</h4>\n<ul>\n<li>今まではAuthenticationManagerBuilder#inMemoryAuthenticationで取得できるInMemoryUserDetailsManagerConfigurerに対してUserDetailsを設定していました</li>\n<li>これからは、InMemoryUserDetailsManagerにUserDetailsを渡してInMemoryUserDetailsManagerを返すようにします(Beanとして登録します)</li>\n</ul>\n<h4>SecurityFilterChain</h4>\n<ul>\n<li>FilterChainProxyがリストとして持っているFilterの実装クラスです。</li>\n<li>FilterChainProxyのdoFilterから取得されて利用されます</li>\n</ul>\n<p>doFilterからgetFiltersメソッドまで呼ばれる</p>\n<p><img src=\"/2691/2.png\" alt=\"画像\"></p>\n<p>getFiltersメソッド</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Filter</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getFilters</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SecurityFilterChain</span> chain <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>filterChains<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tlogger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LogMessage</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Trying to match request against %s (%d/%d)\"</span><span class=\"token punctuation\">,</span> chain<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>count<span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>filterChains<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> chain<span class=\"token punctuation\">.</span><span class=\"token function\">getFilters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>FilterChainProxyはspringSecurityFilterChainというBean名でDIコンテナに登録されています</li>\n<li>DelegatingFilterProxyからFilterChainProxyは利用されます\n<ul>\n<li>この辺はweb.xmlで書くと明示する必要があります</li>\n</ul>\n</li>\n</ul>\n<p>これで画面からmisaka/mikotoでログインできるようになります</p>\n<p><img src=\"/2691/3.png\" alt=\"画像\"></p>\n<h2>JDBC認証</h2>\n<p>必要となる以下のテーブルを作成します。デフォルトで利用する場合は、テーブル名も必要なカラム名も指定されています。</p>\n<ul>\n<li>users</li>\n<li>authorities</li>\n</ul>\n<p>コードを書きます</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>volkruss<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>authentication<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationManager</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>authentication<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationManagerBuilder</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpSecurity</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>userdetails<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>userdetails<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UserDetails</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PasswordEncoderFactories</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>provisioning<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JdbcUserDetailsManager</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>provisioning<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UserDetailsManager</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SecurityFilterChain</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSource</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SecurityConfiguration</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ログイン後は/homeに遷移させる</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">SecurityFilterChain</span> <span class=\"token function\">filterChain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">headers</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            header<span class=\"token punctuation\">.</span><span class=\"token function\">frameOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeHttpRequests</span><span class=\"token punctuation\">(</span>authorize <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            authorize<span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/h2-console/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">anyRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">authenticated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span>form <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n            form<span class=\"token punctuation\">.</span><span class=\"token function\">defaultSuccessUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDetailsManager</span> <span class=\"token function\">userDetailsService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">JdbcUserDetailsManager</span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JdbcUserDetailsManager</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// データベースにshokuhou/misakiというレコードが追加されます</span>\n        <span class=\"token class-name\">UserDetails</span> user <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span><span class=\"token function\">withUsername</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shokuhou\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token punctuation\">(</span>\n                <span class=\"token class-name\">PasswordEncoderFactories</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">createDelegatingPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"misaki\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">roles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"USER\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        users<span class=\"token punctuation\">.</span><span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> users<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>\n<ul>\n<li>DataSourceをAutowiredしているのでapplication.yamlにデータベースの接続情報を記載しておきます</li>\n<li>JdbcUserDetailsManagerというのはJdbcDaoImplを継承した拡張クラスです\n<ul>\n<li>またUserDetailsManagerの実装クラスです</li>\n</ul>\n</li>\n<li>UserDetailsをcreateUserメソッドに渡すと\n<ul>\n<li>そのUserDetailsがusersテーブルにインサートされる</li>\n<li>usernameに紐づく認可レコードがauthoritiesテーブルにインサートされる</li>\n</ul>\n</li>\n<li>createUserで使われるSQLはJdbcUserDetailsManagerクラスのcreateUserSqlに登録されています</li>\n</ul>\n<p>実際にインサートされたレコード</p>\n<p><img src=\"/2691/4.png\" alt=\"画像\"></p>\n<p>※misakaは予め入れておいたレコードです</p>\n<p>これでshokuhou/misakiでログインできます</p>\n<h3>既存レコードでログイン</h3>\n<p>既存レコードというのは、ここでいうmisakaです。ソースコードでshokuhouというユーザーをcreateしましたが、データベースに既に登録されているレコードでログインを試します。</p>\n<p>この時、ログインさせる条件で大事なことが以下でした</p>\n<ul>\n<li>パスワードがハッシュ化されていること</li>\n<li>authoritiesテーブルにも紐づくレコードが登録されていること</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDetailsManager</span> <span class=\"token function\">userDetailsService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 既存User : misaka/mikoto</span>\n    <span class=\"token class-name\">JdbcUserDetailsManager</span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JdbcUserDetailsManager</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> users<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>データソースを渡すだけです\n<ul>\n<li>後はデータベースに紐づくレコードを取得してくれます</li>\n</ul>\n</li>\n</ul>\n<h3>その他</h3>\n<p>もしもusersテーブルやauthoritiesテーブルでなく独自のテーブルを使いたい場合は以下のようにsetUsersByUsernameQueryメソッドなどを使用します</p>\n<div class=\"remark-highlight\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDetailsManager</span> <span class=\"token function\">userDetailsService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n   <span class=\"token class-name\">String</span> <span class=\"token constant\">USERQUERY</span> <span class=\"token operator\">=</span>\n           <span class=\"token string\">\"select username,password,enabled from myusers where username = ?\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">String</span> <span class=\"token class-name\">AuthoritiesQuery</span> <span class=\"token operator\">=</span>\n           <span class=\"token string\">\"select username,role from myauthorities where username = ?\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">JdbcUserDetailsManager</span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JdbcUserDetailsManager</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//  独自のテーブルやカラム名を使いたい時</span>\n    users<span class=\"token punctuation\">.</span><span class=\"token function\">setUsersByUsernameQuery</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USERQUERY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    users<span class=\"token punctuation\">.</span><span class=\"token function\">setAuthoritiesByUsernameQuery</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthoritiesQuery</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> users<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<ul>\n<li>既存のusersテーブルからmyusersテーブルに変更してログイン可能になります</li>\n<li>カラムも独自に設定したカラム名でログインができます</li>\n<li>同じようにログインできる条件\n<ul>\n<li>ハッシュ化されたパスワードであること</li>\n<li>authorities(ここではmyauthorities)に紐づくレコードがあること</li>\n</ul>\n</li>\n</ul>\n<p>これで基本的な設定などはできるようになります。</p>\n<p>今回のコードはGithubにもあげております</p>\n<p>https://github.com/jirentaicho/laravel-new-SecurityConfiguration</p>\n<p>使用したSQLは以下です(H2にて実行時に構築しています)</p>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> users<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"users\"</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"id\"</span> <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"username\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"password\"</span> <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"enabled\"</span> <span class=\"token keyword\">BOOLEAN</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> myusers<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"myusers\"</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"id\"</span> <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"username\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"password\"</span> <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"enabled\"</span> <span class=\"token keyword\">BOOLEAN</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> myauthorities<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"myauthorities\"</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"id\"</span> <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"username\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"role\"</span> <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> authorities<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"authorities\"</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"id\"</span> <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"username\"</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"authority\"</span> <span class=\"token keyword\">TEXT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 予め用意しているユーザーレコードを使う場合はハッシュ化されたパスワードを利用することが必須です(これはパスワードmikotoです)</span>\n<span class=\"token comment\">-- またauthoritiesテーブルにもusernameに紐づくレコードが登録されていないとログインできません</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token string\">\"users\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'misaka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'{bcrypt}$2a$10$t.uzqGjte5WsosZO4wFV5OULSCqYJbn0qC5Lh0Uilj5hF.biixBoG'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token string\">\"authorities\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"authority\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'misaka'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'level5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 独自に定義したテーブルでJDBC認証を行う場合</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token string\">\"myusers\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'misaka'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'{bcrypt}$2a$10$t.uzqGjte5WsosZO4wFV5OULSCqYJbn0qC5Lh0Uilj5hF.biixBoG'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token string\">\"myauthorities\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"role\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'misaka'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'level5'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>かなりぐちゃぐちゃになっているが奮闘記録もあります</p>\n<p>https://zenn.dev/misaka/scraps/3ce785913f1bc3</p>\n<h2>参考</h2>\n<ul>\n<li>https://spring.pleiades.io/spring-security/site/docs/current/api/org/springframework/security/web/FilterChainProxy.html</li>\n<li>https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter</li>\n<li>https://docs.spring.io/spring-security/reference/servlet/authentication/passwords/jdbc.html</li>\n</ul>","slug":"p2691"},"__N_SSG":true}