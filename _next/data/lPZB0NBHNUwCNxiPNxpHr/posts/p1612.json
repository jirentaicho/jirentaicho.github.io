{"pageProps":{"frontMatter":{"title":"正規表現の基礎を学ぶ","date":"2022.03.21","description":"正規表現の基礎を学ぶ","categories":["未分類"]},"content":"<p>正規表現の本が手元に来た</p>\n<p>そろそろ常識？ マンガでわかる「正規表現」</p>\n<p>表紙の微萌えキャラ（失礼）が様々な例を正規表現で解決していく物語だ。レイヴィニア＝バードウェイ似の女がお気に入りです。</p>\n<ul>\n<li>図解などもあるのでわかりやすい。</li>\n<li>正規表現一覧みたいなのじゃ理解できない人におすすめ\n<ul>\n<li>それは私です</li>\n</ul>\n</li>\n<li>基本的な使い方を説明した後で具体例の説明がある</li>\n<li>エディタやプログラミング言語でどうやって使うかなどもある</li>\n</ul>\n<p>というわけで本を読んで少し正規表現をやってみたので以下に残しておきます。実行言語はPHPです</p>\n<h2>サンプル</h2>\n<p>例に対しる回答をとりあえず記載していきます。</p>\n<p>また以下の関数をよく使います</p>\n<ul>\n<li>preg_match\n<ul>\n<li>マッチしたら1が返る。第三引数に配列を指定すればマッチした”最初の”要素が格納される</li>\n</ul>\n</li>\n<li>preg_match_all\n<ul>\n<li>第三引数の配列にマッチした要素が全て入る</li>\n</ul>\n</li>\n<li>preg_grep\n<ul>\n<li>配列を検査できる</li>\n</ul>\n</li>\n<li>preg_replace\n<ul>\n<li>正規表現検索および置換を行う</li>\n</ul>\n</li>\n</ul>\n<p>また正規表現を扱う際には/で挟みます</p>\n<ul>\n<li>preg_match(“/mis[a]ka/”,”misaka”)\n<ul>\n<li>1</li>\n</ul>\n</li>\n</ul>\n<h2>何か1文字にマッチ</h2>\n<p>.は何か1文字です。misak〇が該当します</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/misak./\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"misaka\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"misaki\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"misato\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"misaka\"</span>\n  <span class=\"token number\">1</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"misaki\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>..で2文字になります</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/mi..ka/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"misaka\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"misaki\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"mitaka\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"misaka\"</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"mitaka\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<h2>どれか一文字</h2>\n<p>[]の中でどれかの文字を指定する</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/mi[st]aka/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"misaka\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"migaki\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"mitaka\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"misaka\"</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"mitaka\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<h2>範囲にマッチ</h2>\n<ul>\n<li>[A-Z]</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/fun[a-d]tion/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"function\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"funetion\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"funation\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"function\"</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"funation\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<h2>メタ文字</h2>\n<ul>\n<li>正規表現の中で使われる特殊な文字</li>\n<li>今までの.[]などがそれに該当</li>\n<li>正規表現で何かをするぞ！という目印です</li>\n</ul>\n<h2>特殊な1文字にマッチ</h2>\n<ul>\n<li>\\d 0-9</li>\n<li>\\w 英数字</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\dfile.jpg/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"6file.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"zfile.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"6file,jpg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"6file.jpg\"</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"6file,jpg\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>この時間違った拡張子,jpgまでマッチしている。これは.が何か1文字としてマッチしているため、なのでエスケープしてあげる必要がある</p>\n<p>メタ文字の前に\\を付けることでメタ文字を文字として扱えます</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\dfile\\.jpg/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"6file.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"zfile.jpg\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"6file,jpg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"6file.jpg\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<h2>先頭・末尾にマッチ</h2>\n<ul>\n<li>^\n<ul>\n<li>先頭以外での利用とは違う\n<ul>\n<li>以外での利用とは違う</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>$\n<ul>\n<li>末尾</li>\n</ul>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^御坂/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"御坂妹は御坂美琴の妹です\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"常盤台の電撃姫、御坂美琴\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"第３位の苗字は御坂\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"御坂妹は御坂美琴の妹です\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>御坂で始まる文字列のみが取得できました。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/御坂$/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"御坂妹は御坂美琴の妹です\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"常盤台の電撃姫、御坂美琴\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"第３位の苗字は御坂\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">2</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"第３位の苗字は御坂\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>御坂で終わる文字列を取得できました。</p>\n<h2>あってもなくても</h2>\n<p>?を使ってあってもなくてもを表現します</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/御坂?/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"御坂\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"御坂妹\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"御\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"御坂美琴\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"御坂\"</span>\n  <span class=\"token number\">1</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"御坂妹\"</span>\n  <span class=\"token number\">3</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"御坂美琴\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<h2>数値繰り返し</h2>\n<ul>\n<li>{数値}で繰り返しを表現する\n<ul>\n<li>\\d{3}なら数値三桁</li>\n</ul>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\d{3}-\\d{4}-\\d{4}$/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"000-0000-0001\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"995-54-455\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"234-2322-233332\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"000-0000-0001\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>最後に$がついて末尾を表す理由は、233332という数値でも数値が4回繰り返されているからマッチしてしまう。そのため$を付けて末尾を4桁で指定しています。</p>\n<h2>繰り返し</h2>\n<ul>\n<li>*は0回以上の繰り返しです</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_grep</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/&#x3C;div .*?>/\"</span> <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"&#x3C;div class='container'>container&#x3C;/div>\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&#x3C;p class='text'>text&#x3C;/p>\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&#x3C;span>fire&#x3C;/span>\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token keyword type-declaration\">array</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token number\">0</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"&#x3C;div class='container'>container&#x3C;/div>\"</span>\n<span class=\"token punctuation\">]</span>\n</code></pre></div>\n<p>divタグを、どのような形式でも取得できます</p>\n<h2>以上、以下</h2>\n<ul>\n<li>{n,}\n<ul>\n<li>n以上</li>\n</ul>\n</li>\n<li>{n,m}\n<ul>\n<li>n以上m以下</li>\n</ul>\n</li>\n</ul>\n<p>結構荒いですが本にもあったサンプルです。先頭が￥で末尾が-であることが条件</p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\">dd( preg_grep(\"/￥\\d{1,3},000-/\" , [\"￥1,000-\",\"￥200,000-\",\"￥1,000,000-\"]) );\n.......\n^ array:2 [\n  0 => \"￥1,000-\"\n  1 => \"￥200,000-\"\n]\n</code></pre></div>\n<h2>置換、最小範囲、グループ化</h2>\n<p>平成を令和に置換します。</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/平成/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"平成4年、令和3年、平成5年\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"令和\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"令和4年、令和3年、令和5年\"</span>\n</code></pre></div>\n<p>$targetの$patternを$replaceに置換しています。</p>\n<p>次は＜＞を「」に置換します。配列を利用します</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/＜/\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"/＞/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"＜御坂美琴＞（白井黒子）＜＞＜豆＞\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"「\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"」\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"「御坂美琴」（白井黒子）「」「豆」\"</span>\n</code></pre></div>\n<p>もっとスマートに置換できます</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/＜(.*?)＞/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"＜御坂美琴＞（白井黒子）＜＞＜豆＞\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"「<span class=\"token interpolation\"><span class=\"token variable\">$1</span></span>」\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"「御坂美琴」（白井黒子）「」「豆」\"</span>\n</code></pre></div>\n<ul>\n<li>.*?は何かの文字列を最小範囲で繰り返すの意味\n<ul>\n<li>＜御坂美琴＞も＜＞もマッチするということ</li>\n</ul>\n</li>\n<li>()はグループ化です。()でマッチしたものを$1で利用しています。\n<ul>\n<li>グループ化すると中身が一時保存される</li>\n</ul>\n</li>\n</ul>\n<p>グループ化の使い方</p>\n<p>例えば置換で文字を消したい時、妹御坂と10032号妹御坂を削除するケース</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/妹|10032号妹御坂/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"妹御坂、ワースト御坂、美琴御坂、番外個体御坂、10032号妹御坂\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"御坂、ワースト御坂、美琴御坂、番外個体御坂、\"</span>\n</code></pre></div>\n<p>妹御坂が消せていないのでグループ化してあげます</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/(妹|10032号妹)御坂/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"妹御坂、ワースト御坂、美琴御坂、番外個体御坂、10032号妹御坂\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"、ワースト御坂、美琴御坂、番外個体御坂、\"</span>\n</code></pre></div>\n<h2>先読み</h2>\n<ul>\n<li>先読み\n<ul>\n<li>後ろに〇〇がついている時に前の文字を調べる単位などの絞り込みに便利100グラム、100年\n<ul>\n<li>単位などの絞り込みに便利100グラム、100年</li>\n<li>100グラム、100年</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>円の場合にXXX円にする例</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/\\d+円/\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//数値が1回以上の繰り返しと円</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"100円、100年、100番\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"XXX、100年、100番\"</span>\n</code></pre></div>\n<p>これは失敗している。円までが置換されているため。そこで先読みの登場</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/\\d+(?=円)/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"100円、100年、100番\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"XXX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"XXX円、100年、100番\"</span>\n</code></pre></div>\n<p>(?=〇)で先読みする</p>\n<h2>後読み</h2>\n<ul>\n<li>後読み\n<ul>\n<li>前に●●がついている時に後ろの文字を調べる年号などの絞り込みに便利平成4年、令和3年\n<ul>\n<li>年号などの絞り込みに便利平成4年、令和3年</li>\n<li>平成4年、令和3年</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>先読みと理解の仕方は同じ、令和の時だけXXに置換する</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/(?&#x3C;=令和)\\d+/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"令和3年、平成31年、昭和60年\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"XX\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">...</span><span class=\"token operator\">.</span>\n<span class=\"token operator\">^</span> <span class=\"token string double-quoted-string\">\"令和XX年、平成31年、昭和60年\"</span>\n</code></pre></div>\n<p>(?&#x3C;=●)で後読みする</p>\n<h2>否定的先読み</h2>\n<ul>\n<li>否定的先読み\n<ul>\n<li>後ろに〇〇がついていない時に前の文字を調べる拡張子の絞り込みに便利.txt以外のファイル\n<ul>\n<li>拡張子の絞り込みに便利.txt以外のファイル</li>\n<li>.txt以外のファイル</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>.txt以外のファイルを置換します</p>\n<div class=\"remark-highlight\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$pattern</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"/file(?!\\.txt)/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"file.txt、file.jpg、file.mp4\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$replace</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"done\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">dd</span><span class=\"token punctuation\">(</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pattern</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>^ \"file.txt、done.jpg、done.mp4\"</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">\n\n(?!〇)で否定的先読みをする→拡張子はメタ文字なのでエスケープしている\n\n## 否定的後読み\n\n* 否定的後読み\n  * 前に●●がついてない時に後ろの文字を調べる東京都と京都など“京都”だけにマッチしたい\n    * 東京都と京都など“京都”だけにマッチしたい\n    * “京都”だけにマッチしたい\n\n京都だけを変換する\n\n```php\n$pattern = &#x26;quot;/(?&#x26;lt;!東)京都/&#x26;quot;;\n$target = &#x26;quot;東京都品川区、京都宇治市、東京都港区&#x26;quot;;\n$replace = &#x26;quot;京都府&#x26;quot;;\ndd( preg_replace($pattern, $replace, $target) );\n................\n^ &#x26;quot;東京都品川区、京都府宇治市、東京都港区&#x26;quot;</code></pre></div>\n<p>ざっくりと正規表現の基礎を勉強しました。本ではもっと詳しく漫画や図などを使って説明しています。正規表現苦手な人におすすめです</p>","slug":"p1612"},"__N_SSG":true}